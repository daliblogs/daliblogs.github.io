<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexoQuest</title>
    <url>/2020/07/15/hexoQuest/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>hexo开发过程中遇到的小坑大坑各种坑合集</p>
<p>部署失败时（deploy处将https改为SSH）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repository: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git</span><br></pre></td></tr></table></figure>

<p>修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repository：git@github.com:username&#x2F;username.github.io.git</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="（1）检查是否有SSH-key"><a href="#（1）检查是否有SSH-key" class="headerlink" title="（1）检查是否有SSH key"></a>（1）检查是否有SSH key</h4><p>登陆github，点击头像位置处 Settings ——&gt; SSH and GPG keys ，查看是否有SSH keys。如果有，直接跳到第（3）步；如果没有，则继续。</p>
<h4 id="（2）新建-SSH-key，在git-shell-或者git-bash等命令窗口-，注意大小写："><a href="#（2）新建-SSH-key，在git-shell-或者git-bash等命令窗口-，注意大小写：" class="headerlink" title="（2）新建 SSH key，在git shell(或者git bash等命令窗口)，注意大小写："></a>（2）新建 SSH key，在git shell(或者git bash等命令窗口)，注意大小写：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮箱名&quot;</span><br></pre></td></tr></table></figure>

<p>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa):</span><br></pre></td></tr></table></figure>

<p>直接回车就可以。<br>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure>

<p>要求你输入密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。</p>
<p>注意：输入密码的时候没有*字样的，直接输入就好。<br>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">65:69:······02:4b emailname@email.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|                 |</span><br><span class="line">|       .   o .   |</span><br><span class="line">|    . o o &#x3D; o    |</span><br><span class="line">|   . o * &#x3D; o     |</span><br><span class="line">|  E  o + o .     |</span><br><span class="line">| . o.   . .      |</span><br><span class="line">|     ..          |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure>

<p>至此，密钥已经成功生成。</p>
<h4 id="（3）接下来在github上添加SSH-key："><a href="#（3）接下来在github上添加SSH-key：" class="headerlink" title="（3）接下来在github上添加SSH key："></a>（3）接下来在github上添加SSH key：</h4><p>① 打开本地文件：id_rsa.pub（文件路径可以在上一步SSH生成成功后看到路径，比如我的是c/Users/dell/.ssh/id_rsa.pub），可以将这个文件在编辑器中打开，然后全选复制。</p>
<p>② 登陆github，点击头像位置处 Settings ——&gt; SSH and GPG keys ——&gt; New SSH key，点击新建SSH key。</p>
<p>③ 将 ① 中复制的内容粘贴在key文本框里，title可以不用填（或者自己起一个名字也可以）。</p>
<h4 id="（4）测试设置是否成功："><a href="#（4）测试设置是否成功：" class="headerlink" title="（4）测试设置是否成功："></a>（4）测试设置是否成功：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>有可能会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#39;github.com (192.30.252.1)&#39; can&#39;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure>

<p>或者是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#39;github.com (192.30.252.1)&#39; can&#39;t be established.</span><br><span class="line">RSA key fingerprint is nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure>

<p>这种情况下，直接 yes 回车</p>
<p>然后会出现（也可能在 <em>++$ ssh -T <a href="mailto:git@github.com">git@github.com</a>++</em> 之后，直接出现的就是这个，我就是这样~）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi username! You&#39;ve successfully authenticated, but GitHub does not </span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure>

<h4 id="（5）设置用户信息："><a href="#（5）设置用户信息：" class="headerlink" title="（5）设置用户信息："></a>（5）设置用户信息：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;用户名&quot;</span><br><span class="line">$ git config --global user.email  &quot;你希望的邮箱名&quot;</span><br></pre></td></tr></table></figure>

<h4 id="（6）然后就可以部署你的博客到github啦"><a href="#（6）然后就可以部署你的博客到github啦" class="headerlink" title="（6）然后就可以部署你的博客到github啦~"></a>（6）然后就可以部署你的博客到github啦~</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>参考文章 <a href="https://www.cnblogs.com/xsilence/p/6001938.html" target="_blank" rel="noopener">ssh</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexoTheme</title>
    <url>/2020/07/15/hexoTheme/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；</p>
<p>另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p>
<p>备注: 以下所有终端执行的命令都在你的Hexo根目录下</p>
<h4 id="1、基本信息配置"><a href="#1、基本信息配置" class="headerlink" title="1、基本信息配置"></a>1、基本信息配置</h4><p>打开 <strong>站点配置文件</strong> ，找到Site模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标题</span><br><span class="line">subtitle: 副标题</span><br><span class="line">description: 描述</span><br><span class="line">author: 作者</span><br><span class="line">language: 语言（简体中文是zh-Hans）</span><br><span class="line">timezone: 网站时区（Hexo 默认使用您电脑的时区，不用写）</span><br></pre></td></tr></table></figure>

<hr>
<a id="more"></a>

<h4 id="2、菜单设置"><a href="#2、菜单设置" class="headerlink" title="2、菜单设置"></a>2、菜单设置</h4><p>我们刚开始默认的菜单只有首页和归档两个，不能够满足我们的要求，所以需要添加菜单，打开 <strong>主题配置文件</strong> 找到<code>Menu Settings</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home                          &#x2F;&#x2F;首页</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive          &#x2F;&#x2F;归档</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th           &#x2F;&#x2F;分类</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags                     &#x2F;&#x2F;标签</span><br><span class="line">  about: &#x2F;about&#x2F; || user                   &#x2F;&#x2F;关于</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar        &#x2F;&#x2F;日程表</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap        &#x2F;&#x2F;站点地图</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat          &#x2F;&#x2F;公益404</span><br></pre></td></tr></table></figure>

<p>备注：看看你需要哪个菜单就把哪个取消注释打开就行了；</p>
<p>关于后面的格式，以<code>archives: /archives/ || archive</code>为例：</p>
<p><code>||</code> 之前的<code>/archives/</code>表示标题“归档”，关于标题的格式可以去<code>themes/next/languages/zh-Hans.yml</code>中参考或修改</p>
<p><code>||</code>之后的<code>archive</code>表示图标，可以去<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ffontawesome.io%2Ficons%2F" target="_blank" rel="noopener">Font Awesome</a>中查看或修改，Next主题所有的图标都来自Font Awesome。</p>
<hr>
<h4 id="3、Next主题样式设置"><a href="#3、Next主题样式设置" class="headerlink" title="3、Next主题样式设置"></a>3、Next主题样式设置</h4><p>我们百里挑一选择了Next主题，不过Next主题还有4种风格供我们选择，打开 <strong>主题配置文件</strong> 找到<code>Scheme Settings</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="4、侧栏设置"><a href="#4、侧栏设置" class="headerlink" title="4、侧栏设置"></a>4、侧栏设置</h4><p>打开 <strong>主题配置文件</strong> 找到<code>sidebar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  position: left        &#x2F;&#x2F;靠左放置</span><br><span class="line">  #position: right      &#x2F;&#x2F;靠右放置</span><br><span class="line"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span><br><span class="line">  #display: post        &#x2F;&#x2F;默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  display: always       &#x2F;&#x2F;在所有页面中都显示</span><br><span class="line">  #display: hide        &#x2F;&#x2F;在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #display: remove      &#x2F;&#x2F;完全移除</span><br><span class="line">  offset: 12            &#x2F;&#x2F;文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  b2t: false            &#x2F;&#x2F;返回顶部按钮（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  scrollpercent: true   &#x2F;&#x2F;返回顶部按钮的百分比</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="5、头像设置"><a href="#5、头像设置" class="headerlink" title="5、头像设置"></a>5、头像设置</h4><p>打开 <strong>主题配置文件</strong> 找到<code>Sidebar Avatar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar: &#x2F;images&#x2F;header.jpg</span><br></pre></td></tr></table></figure>

<p>这是头像的路径，只需把你的头像命名为<code>header.jpg</code>（随便命名）放入<code>themes/next/source/images</code>中，将<code>avatar</code>的路径名改成你的头像名就OK啦！</p>
<hr>
<h4 id="6、设置RSS"><a href="#6、设置RSS" class="headerlink" title="6、设置RSS"></a>6、设置RSS</h4><p>1、先安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhexojs%2Fhexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>2、打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># RSS订阅</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &#39; &#39;</span><br></pre></td></tr></table></figure>

<p>3、打开 <strong>主题配置文件</strong> 找到<code>rss</code>，设置为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="7、添加分类模块"><a href="#7、添加分类模块" class="headerlink" title="7、添加分类模块"></a>7、添加分类模块</h4><p>1、新建一个分类页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>categorcies/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 分类</code><br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将categorcies取消注释<br>4、把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中<br>举个栗子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 分类测试文章标题</span><br><span class="line">categories: 分类名</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="8、添加标签模块"><a href="#8、添加标签模块" class="headerlink" title="8、添加标签模块"></a>8、添加标签模块</h4><p>1、新建一个标签页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>tags/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 标签</code><br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将tags取消注释<br>4、把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中<br>举个栗子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签测试文章标题</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="9、添加关于模块"><a href="#9、添加关于模块" class="headerlink" title="9、添加关于模块"></a>9、添加关于模块</h4><p>1、新建一个关于页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>about/index.md</code>，打开<code>index.md</code>文件即可编辑关于你的信息，可以随便编辑。<br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将about取消注释</p>
<hr>
<h4 id="10、添加搜索功能"><a href="#10、添加搜索功能" class="headerlink" title="10、添加搜索功能"></a>10、添加搜索功能</h4><p>1、安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fflashlab%2Fhexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a> 插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>2、打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 搜索</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>3、打开 <strong>主题配置文件</strong> 找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p>
<hr>
<h4 id="11、添加阅读全文按钮"><a href="#11、添加阅读全文按钮" class="headerlink" title="11、添加阅读全文按钮"></a>11、添加阅读全文按钮</h4><p>因为在你的博客主页会有多篇文章，如果你想让你的文章只显示一部分，多余的可以点击阅读全文来查看，那么你需要在你的文章中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>

<p>其后面的部分就不会显示了，只能点击阅读全文才能看</p>
<hr>
<h4 id="12、修改文章内链接文本样式"><a href="#12、修改文章内链接文本样式" class="headerlink" title="12、修改文章内链接文本样式"></a>12、修改文章内链接文本样式</h4><p><img src="http://upload-images.jianshu.io/upload_images/4120931-9cd87c2cc2d0c78f.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/360/format/webp" alt="img"></p>
<p>效果图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post.styl</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post-body p a &#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中选择 .post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p>
<hr>
<h4 id="13、设置网站缩略图标"><a href="#13、设置网站缩略图标" class="headerlink" title="13、设置网站缩略图标"></a>13、设置网站缩略图标</h4><blockquote>
<p>从网上看了很多设置方法都是说把favicon.ico放到站点目录的source目录下就可以了，可是我试了好多遍，并不行。</p>
</blockquote>
<p>我的设置方法是这样的：把你的图片（png或jpg格式，不是favicon.ico）放在<code>themes/next/source/images</code>里，然后打开 <strong>主题配置文件</strong> 找到<code>favicon</code>，将<code>small、medium、apple_touch_icon</code>三个字段的值都设置成<code>/images/图片名.jpg</code>就可以了，其他字段都注释掉。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4120931-61a0cc555a25548e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/344/format/webp" alt="img"></p>
<hr>
<h4 id="14、设置文章字体的颜色、大小"><a href="#14、设置文章字体的颜色、大小" class="headerlink" title="14、设置文章字体的颜色、大小"></a>14、设置文章字体的颜色、大小</h4><p><img src="http://upload-images.jianshu.io/upload_images/4120931-e471abbb2b1f459f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/477/format/webp" alt="img"></p>
<p>效果图</p>
<p>如果想设置某一句的颜色或大小，只需用html语法写出来就行了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">接下来就是见证奇迹的时刻</span><br><span class="line">&lt;font color&#x3D;&quot;#FF0000&quot;&gt; 我可以设置这一句的颜色哈哈 &lt;&#x2F;font&gt; </span><br><span class="line">&lt;font size&#x3D;6&gt; 我还可以设置这一句的大小嘻嘻 &lt;&#x2F;font&gt; </span><br><span class="line">&lt;font size&#x3D;5 color&#x3D;&quot;#FF0000&quot;&gt; 我甚至可以设置这一句的颜色和大小呵呵&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="15、设置文字居中"><a href="#15、设置文字居中" class="headerlink" title="15、设置文字居中"></a>15、设置文字居中</h4><p>设置方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;这一行需要居中&lt;&#x2F;center&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：简书中此方法无效</p>
</blockquote>
<hr>
<h4 id="16、添加评论系统"><a href="#16、添加评论系统" class="headerlink" title="16、添加评论系统"></a>16、添加评论系统</h4>]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction</title>
    <url>/2020/07/09/introduction/</url>
    <content><![CDATA[<h6 id=""><a href="#" class="headerlink" title=""></a></h6><h5 id="一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。"><a href="#一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。" class="headerlink" title="一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。"></a>一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。</h5><h5 id="这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。"><a href="#这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。" class="headerlink" title="这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。"></a>这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。</h5><h5 id="做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！"><a href="#做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！" class="headerlink" title="做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！"></a>做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！</h5>]]></content>
      <categories>
        <category>introduction</category>
      </categories>
      <tags>
        <tag>introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>hexoStart</title>
    <url>/2020/07/15/hexoStart/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2Findex.html" target="_blank" rel="noopener">Hexo</a>框架，基于Node.js，搭建博客首先需要有一个GitHub账号并且配置了SSH Keys</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li><p>github仓库创建</p>
<a id="more"></a>

</li>
</ol>
<p>点击New repository创建，注意：仓库名称一定是<code>username.github.io</code>这种格式，username替换一个你喜欢的名字。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/4120931-5b31c3ac628564b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/767/format/webp" alt="img"></p>
<ol start="2">
<li><p>Git安装（此处不多做说明，网上很多教程）</p>
<blockquote>
<p>验证：执行<code>git --version</code>如果输出类似<code>git version 2.15.0</code>说明安装成功了</p>
</blockquote>
</li>
<li><p>nodeJs安装（此处不多做说明，网上很多教程）</p>
<blockquote>
<p>验证：执行<code>npm --version</code>如果输出类似<code>5.5.1</code>说明安装成功了</p>
</blockquote>
</li>
<li><p>hexo安装</p>
</li>
</ol>
<h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><ol>
<li><p>hexo文件夹创建</p>
<p>安装 Hexo 完成后，在你喜欢的目录下新建一个文件夹命名为<code>username</code>（替换成你喜欢的名字），然后cd到username文件夹下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd username</span><br><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>执行完毕后你将看到在你刚创建的文件夹下会有很多资源</p>
</li>
</ol>
<p><img src="https://upload-images.jianshu.io/upload_images/4120931-51990266dab56f41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/220/format/webp" alt="img"></p>
<ol start="2">
<li><p>基础配置</p>
<p>接下来打开username下的<code>_config.yml</code>文件（上图中的第一个文件），修改一下里面几个关键的信息，修改完记得保存，注意：冒号后面要有空格。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: my_杨哥      &#x2F;&#x2F;你博客的名字</span><br><span class="line">author: Li Yang    &#x2F;&#x2F;你的名字</span><br><span class="line">language: zh-Hans  &#x2F;&#x2F;语言-简体中文</span><br></pre></td></tr></table></figure>

<p>上面这3个字段是关键信息，如需修改其他信息请参考<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2Fconfiguration.html" target="_blank" rel="noopener">配置</a></p>
</li>
<li><p>主题安装</p>
<p>username下的<code>themes</code>文件夹中存放的是主题，默认的是landscape主题，如果你不喜欢可以安装其他主题。</p>
<p><strong>NexT</strong>主题是一套简约的主题，是目前使用最火的一个主题，下面我们安装一下该主题，你也可参考<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html" target="_blank" rel="noopener">安装NexT</a>。</p>
<p>Hexo还有<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fthemes%2F" target="_blank" rel="noopener">更多主题</a>供你选择</p>
</li>
</ol>
<ul>
<li><p>安装NexT主题：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd username        &#x2F;&#x2F;进入到username文件夹下</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用NexT主题：<br>打开username下的<code>_config.yml</code>文件（上图中的第一个文件），找到<code>theme</code>字段将其值更改为<code>next</code></p>
</li>
<li><p>验证主题：</p>
<p><em>注意：每次切换主题之后、验证主题之前都要清除 Hexo 的缓存</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean    &#x2F;&#x2F;清除缓存</span><br></pre></td></tr></table></figure>

<p>开始验证：启动Hexo本地服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>然后你将会看到终端输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>这行的意思是说你用浏览器打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p>
<p>便可看到你的博客了，这只是本地的测试，如果测试没问题就执行Ctrl+C退出去，此时该地址就不能访问了。</p>
</li>
</ul>
<p>OK，现在，你已经成功安装并启用了 NexT 主题。接下来就是对该主题的一些设置，详细可参考<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html%23theme-settings" target="_blank" rel="noopener">NexT主题设定</a></p>
<h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><ol>
<li><p>文章新建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new layout title</span><br></pre></td></tr></table></figure>

<p>layout：模板，如果不写将使用默认模板，一般不写，直接<code>$ hexo new title</code></p>
<p>title：文章标题，如果标题包含空格的话，请使用引号括起来。</p>
<p>新建的文章将会存在<code>username/source/_posts</code>中，<code>_posts</code>就是默认模板，文章文件名称将会是<code>title.md</code>，接下来就可以打开该文件进行编辑写你的文章了。</p>
</li>
<li><p>静态文件生成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地服务器启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>本地服务器启动完之后就如同上面验证主题一样，访问 <a href="https://links.jianshu.com/go?to=http%3A%2F%2Flocalhost%3A4000" target="_blank" rel="noopener">http://localhost:4000</a> 来验证一下你写的文章预览效果。</p>
</li>
<li><p>网站部署</p>
<p>安装部署工具</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完毕后打开username下的<code>_config.yml</code>文件，翻到最底部找到deploy节点编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;YoungerLi&#x2F;youngerli.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>其中<code>https://github.com/YoungerLi/youngerli.github.io.git</code>就是你GitHub中创建的仓库地址，在这复制即可</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4120931-8525599433d095b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/442/format/webp" alt="img"></p>
<p>repository</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d        &#x2F;&#x2F;hexo deploy的缩写</span><br></pre></td></tr></table></figure>

<p>第一次执行这一步的时候会让你输入你的GitHub的用户名及密码，输入正确无误后执行完毕，任何人就可以访问 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyoungerli.github.io" target="_blank" rel="noopener">https://youngerli.github.io</a> 进入你的博客了。</p>
<p>以后每次写完文章之后依次执行以下命令就可以发布更新了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean      &#x2F;&#x2F; 清除缓存</span><br><span class="line">$ hexo g          &#x2F;&#x2F; 生成静态网页文件</span><br><span class="line">$ hexo d          &#x2F;&#x2F; 将本地博客发布到github</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="博客备份和恢复"><a href="#博客备份和恢复" class="headerlink" title="博客备份和恢复"></a>博客备份和恢复</h3><h4 id="1-博客备份"><a href="#1-博客备份" class="headerlink" title="1. 博客备份"></a>1. 博客备份</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git init &#x2F;&#x2F;git初始化</span><br><span class="line">$ git add . &#x2F;&#x2F;git 文件添加</span><br><span class="line">$ git commit -m &quot;init&quot; &#x2F;&#x2F;git 提交</span><br><span class="line">$ git pull origin hexo &#x2F;&#x2F;pull到hexo分支</span><br><span class="line">$ git push origin hexo &#x2F;&#x2F;push到hexo分支</span><br></pre></td></tr></table></figure>

<h4 id="2-博客恢复"><a href="#2-博客恢复" class="headerlink" title="2. 博客恢复"></a>2. 博客恢复</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">（一）配置 ssh 连接 Github</span><br><span class="line">$ cd ~&#x2F;.ssh 或cd .ssh &#x2F;&#x2F;检查本机是否有ssh key设置</span><br><span class="line">$ cd ~  &#x2F;&#x2F;若没有 ssh ，则切换当前路径在 ”~” 下</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;user@example.com&quot; &#x2F;&#x2F;引号内为自己邮箱，三个回车后生成ssh key;添加id_rsa.pub内容到Github;</span><br><span class="line">$ git config --global user.name “your_username”  &#x2F;&#x2F;设置用户名</span><br><span class="line">$ git config --global user.email “your_registered_github_Email”  &#x2F;&#x2F;设置邮箱地址(建议用注册giuhub的邮箱)</span><br><span class="line">$ ssh -T git@github.com &#x2F;&#x2F;测试ssh key是否设置成功</span><br><span class="line">（二）安装 Node.js；Git；Hexo；</span><br><span class="line">$ git clone -b hexo git@github.com:user&#x2F;user.github.io.git  &#x2F;&#x2F;将Github中hexo分支clone到本地</span><br><span class="line">$ cd user.github.io &#x2F;&#x2F;切换到hexo目录下</span><br><span class="line">$ npm install hexo</span><br><span class="line">$ npm install </span><br><span class="line">$ npm install hexo *** &#x2F;&#x2F;安装需要的插件：feed;deployer;abbrlink;sitemap;pdf;nofollow;baidu-url-submit等</span><br><span class="line">$ hexo g -d &#x2F;&#x2F;测试能否正常编译上传</span><br></pre></td></tr></table></figure>

<h4 id="3-博主安装的插件："><a href="#3-博主安装的插件：" class="headerlink" title="3. 博主安装的插件："></a>3. 博主安装的插件：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo-abbrlink &#x2F;&#x2F; Hexo 链接优化</span><br><span class="line">hexo-baidu-url-submit &#x2F;&#x2F; 百度链接主动提交</span><br><span class="line">hexo-blog-encrypt &#x2F;&#x2F; 博客文章加密</span><br><span class="line">hexo-autonofollow &#x2F;&#x2F; 出站链接优化</span><br><span class="line">hexo-deployer-git &#x2F;&#x2F; 上传部署</span><br><span class="line">hexo-generator-baidu-sitemap &#x2F;&#x2F;百度站点地图</span><br><span class="line">hexo-generator-feed &#x2F;&#x2F; RSS 插件</span><br><span class="line">hexo-generator-searchdb &#x2F;&#x2F; 站内搜索</span><br><span class="line">hexo-generator-sitemap &#x2F;&#x2F; 站点地图</span><br><span class="line">hexo-neat &#x2F;&#x2F; 博客压缩</span><br><span class="line">hexo-pdf &#x2F;&#x2F; 博客文章 PDF 显示</span><br><span class="line">hexo-wordcount &#x2F;&#x2F; 计数插件</span><br><span class="line">hexo-lazyload-image &#x2F;&#x2F;图片懒加载</span><br></pre></td></tr></table></figure>

<p>参考文档：<a href="https://www.jianshu.com/p/51617690f8ca" target="_blank" rel="noopener">hexo搭建</a></p>
<p>​           <a href="https://www.jianshu.com/p/74673c8bbc12" target="_blank" rel="noopener">hexo其他</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>mdIntro</title>
    <url>/2020/07/15/mdIntro/</url>
    <content><![CDATA[<p><strong>Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是完全免费的。</strong></p>
<h4 id="智能标点"><a href="#智能标点" class="headerlink" title="智能标点"></a>智能标点</h4><p>我认为「智能标点」是比较有趣的一点。它可以自动帮你将不是很美观的直引号 <code>&quot;</code> <code>&#39;</code> 转化为更美观的弯引号 <code>“</code> <code>‘</code> <code>’</code> <code>”</code>。具体内容你可以在官方的 <a href="http://support.typora.io/SmartyPants/" target="_blank" rel="noopener">这篇文档</a> 中查看。关于直弯引号在 macOS 上如何输入你也可以看 <a href="https://sspai.com/post/38342" target="_blank" rel="noopener">这篇文章</a>。</p>
<hr>
<a id="more"></a>

<h4 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h4><p>Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/717da653ad91e938c5f1f40555b9c057.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">图片插入</p>
<p>这一功能保证了即使网络图片源失效了，你还有本地的备份可用。同时也能使你的文档文件夹更合理、完整。</p>
<hr>
<h4 id="打字机模式和专注模式"><a href="#打字机模式和专注模式" class="headerlink" title="打字机模式和专注模式"></a>打字机模式和专注模式</h4><p><strong>「打字机模式」</strong>使得你所编辑的那一行永远处于屏幕正中。</p>
<p><strong>「专注模式」</strong>使你正在编辑的那一行保留颜色，而其他行的字体呈灰色。</p>
<p>你可以在 <code>视图 - 专注模式 / 打字机模式</code> 中勾选使用这两个模式。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/8b4e14ef732a23d4cc2a8fb1f8ec016c.gif" alt="img"></p>
<p>为了防止一些程序 bug 的发生（虽然在我使用下来感到是很少的）导致格式问题无法修改，Typora 保留了一个<strong>「源代码模式」</strong>。你可以通过 <code>视图 - 源代码模式</code> 或左下角的 <code>&lt;/&gt;</code> 按钮进入。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/bcda9c4e35725b7297a6b90d8745564e.gif" alt="img"></p>
<hr>
<h4 id="空格与换行"><a href="#空格与换行" class="headerlink" title="空格与换行"></a>空格与换行</h4><p>Typora 在空格与换行部分主要是使用 <a href="http://www.commonmark.cn/w/" target="_blank" rel="noopener">CommonMark</a> 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。</p>
<ul>
<li><strong>空格：</strong>在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。<br>你可以在源代码模式下，为每个空格前加一个 <code>\</code> 转义符，或者直接使用 HTML 风格的 <code>&amp;nbps;</code> 来保持连续的空格。</li>
<li><strong>软换行：</strong>需要说明的是，在 Markdown 语法中，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在 Typora 中，你可以通过 <code>Shift + Enter</code> 完成一次软换行。软换行只在编辑界面可见，当文档被导出时换行会被省略。</li>
<li><strong>硬换行：</strong>你可以通过 <code>空格 + 空格 + Shift + Enter</code> 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。</li>
<li><strong>换段：</strong>你可以通过 <code>Enter</code> 完成一次换段。Typora 会自动帮你完成两次 <code>Shift + Enter</code> 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。</li>
<li><strong>Windows 风格（CR+LF）与 Unix 风格（CR）的换行符：</strong>CR 表示回车 <code>\r</code> ，即回到一行的开头，而 LF 表示换行 <code>\n</code> ，即另起一行。<br>所以 Windows 风格的换行符本质是「回车 + 换行」，而 Unix 风格的换行符是「换行」。这也是为什么 Unix / Mac 系统下的文件，如果在 Windows 系统直接打开会全部在同一行内。 你可以在 <code>文件 - 偏好设置 - 编辑器 - 默认换行符</code> 中对此进行切换。</li>
</ul>
<p>下附以上各空格、换行、换段的测试结果图。具体内容你可以在官网的 <a href="http://support.typora.io/Line-Break/" target="_blank" rel="noopener">这篇文档</a> 中查阅。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/5c2fbaa53b27666a7fd0b07ac3e100bf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p>除了前文提到的文件侧边栏，Typora 还提供了一些耦合度不高的文件系统。</p>
<ul>
<li><strong>快速打开：</strong>你可以通过 <code>文件 - 快速打开...</code> 或 <code>Ctrl + P</code> 快捷键快速打开最近的文档。</li>
<li><strong>保存：</strong>Typora 支持自动保存，一般很少有写好的文档丢失的情况。同时它也提供了诸如「保存」、「另存为」、「保存全部打开的文件…」之类的功能。</li>
<li><strong>导入：</strong>Typora 支持非常多的文件格式：.docx, .latex, .tex, .ltx, .rst, .rest, .org, .wiki, .dokuwiki, .textile, .opml, .epub。</li>
<li><strong>导出：</strong>Typora 原生支持导出 PDF，HTML等格式。你可以根据软件内提示安装 <strong>Pandoc 插件</strong>来导出更多例如 docx，LaTeX 等格式。 </li>
</ul>
<p><img src="https://cdn.sspai.com/2019/05/24/ba295f21f0b71646bb36a0517e868ced.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">导出</p>
<hr>
<h2 id="一个伪装成文本编辑器的浏览器"><a href="#一个伪装成文本编辑器的浏览器" class="headerlink" title="一个伪装成文本编辑器的浏览器"></a>一个伪装成文本编辑器的浏览器</h2><p>当我的一个朋友问我「Typora 有什么好写的？」时，我回答「Typora 是一个伪装成文本编辑器的浏览器」。是的，事实上如果你有一定的计算机基础，你可以找到许多有关于「Typora 其实是一个浏览器」的蛛丝马迹。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/13837bcdcded9ae406e8c4aac5f2d752.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">图片插入</p>
<p>在图片插入的选项中，Typora 用了「复制图片到 ./${filename}.assets 文件夹」的说法，而这其实是网页前端常用的 Javascript 字符串模板语法的风格。</p>
<p>再比如，Typora 将更遵循 GFM 标准的 Markdown 语法模式称为「严格模式 Strict Mode」，这一说法常见于 HTML 和 JavaScript 编程中。类似「源代码模式」的说法也是同理。</p>
<p>当然，最明显的一点是当你按下 <code>Shift + F12</code> 快捷键时，页面会弹出一个基于 Chrome 的开发者工具栏，也就是我们在浏览器中常说的「审查元素」。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/da8c9b305a222cb5fadb41c12da81a12.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>为了让文档更美观，我们可以为其加上 CSS style。我认为 Typora 对 CSS 的支持让它成为一众桌面笔记应用中最与众不同的一个。在 Typora 中 CSS 被称为「主题」，但其本质仍是 CSS 文件。你可以在 <code>文件 - 偏好设置 - 主题 - 打开主题文件夹</code> 看到这些 CSS 文件。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/7d3cfbc92721733e16ed63d72a48a572.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<p>除此以外，如果你有一定的 Web 编程基础，你当然也可以自己修改、新建适合你使用需求的 CSS 文件。我自己就写了一份名为 WeChat 的 CSS 文件，来符合我公众号特定的排版需求，例如正文是 15px，页边距是 8，小标题是 18px 等等。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/317ac1df25fcfc817c03f92d6086764e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>使用 Typora 的「主题」功能写公众号的一个好处是，只需要每次都套用同样的主题，我们就可以在保证每次排版规范都相同的同时，节省许多重复的工作。</p>
<hr>
<h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p><img src="https://cdn.sspai.com/2019/05/24/98a04c4f9129e0f018d15bc790b376c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>选择不同的主题可以使文档拥有不同的外观，但不会影响内容。Typora 自带了若干主题，你也可以在 <a href="http://theme.typora.io/" target="_blank" rel="noopener">官网</a> 下载更多的主题。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/efcf65ba993c4bb0b058d6eb8258df6f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="YAML-front-matter"><a href="#YAML-front-matter" class="headerlink" title="YAML front-matter"></a>YAML front-matter</h3><p>Typora 支持在文档头部加上基于 YAML 的 front-matter 信息，这一特性适用于把 Markdown 文档分类归档上传到用 Hexo 框架搭建的博客中。</p>
<p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013&#x2F;7&#x2F;13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure>


<p>参考文档：<a href="https://sspai.com/post/54912" target="_blank" rel="noopener">typora</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>md</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>mdUse</title>
    <url>/2020/07/14/mdUse/</url>
    <content><![CDATA[<h3 id="标题-号越多字越小"><a href="#标题-号越多字越小" class="headerlink" title="标题(#号越多字越小)"></a>标题(#号越多字越小)</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<a id="more"></a>

<h3 id="列表（无序用‘-’有序用‘1-’）"><a href="#列表（无序用‘-’有序用‘1-’）" class="headerlink" title="列表（无序用‘*/-/+’有序用‘1.’）"></a>列表（无序用‘*/-/+’有序用‘1.’）</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="引用一小段别处的句子-使用’-gt-’"><a href="#引用一小段别处的句子-使用’-gt-’" class="headerlink" title="引用一小段别处的句子(使用’&gt;’)"></a>引用一小段别处的句子(使用’&gt;’)</h3><blockquote>
<p>引用一小段别处的句子</p>
</blockquote>
<blockquote>
<p>一级</p>
<blockquote>
<p>二级</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>三级</p>
</blockquote>
</blockquote>
</blockquote>
<p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="图片与链接-区别在于有无’-’"><a href="#图片与链接-区别在于有无’-’" class="headerlink" title="图片与链接(区别在于有无’!’)"></a>图片与链接(区别在于有无’!’)</h3><p>备注：插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。</p>
<p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="粗体与斜体与删除-左右两个-‘-’-左右一个-‘-’包含-左右两个‘-’"><a href="#粗体与斜体与删除-左右两个-‘-’-左右一个-‘-’包含-左右两个‘-’" class="headerlink" title="粗体与斜体与删除(左右两个 ‘*’  /左右一个 ‘ *’包含/左右两个‘~~’)"></a>粗体与斜体与删除(左右两个 ‘*’  /左右一个 ‘ *’包含/左右两个‘~~’)</h3><blockquote>
<p><strong>我加粗了</strong>  <em>我是斜体</em>    <del>删除</del></p>
</blockquote>
<hr>
<h3 id="代码框（用’-’包裹）"><a href="#代码框（用’-’包裹）" class="headerlink" title="代码框（用’`’包裹）"></a>代码框（用’`’包裹）</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/0135456d6a3c1051f0ed54e37cef070010f78_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意java前面有空格</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="分割线（三个‘-’）"><a href="#分割线（三个‘-’）" class="headerlink" title="分割线（三个‘***’）"></a>分割线（三个‘***’）</h3><hr>
<h3 id="表格-默认左对齐"><a href="#表格-默认左对齐" class="headerlink" title="表格(默认左对齐)"></a>表格(默认左对齐)</h3><table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<hr>
<h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>你可以在需要插入脚注标号的位置写 <code>[^ number ]</code> ，再在下方通过 <code>[^ number ]:</code> 在文档中插入脚注。注意不要遗漏了脚注编号 <code>number</code> 前后的空格。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/5f82606e6d89fe1eb24705c4ca6b895d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>这里是脚注<a href="https://www.baidu.com" target="_blank" rel="noopener">^1</a></p>
<hr>
<h3 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h3><p>在 Typora 中，你可以用 <code>:emoji:</code> 的形式来打出 emoji，软件会自动给出图形的提示，还是比较好用的。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/ff26eeb5ff2d6fae16cab163ebfcd096.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>:horse:</p>
<hr>
<h3 id="常用弥补Markdown的Html标签"><a href="#常用弥补Markdown的Html标签" class="headerlink" title="常用弥补Markdown的Html标签"></a>常用弥补Markdown的Html标签</h3><p><span style='color:red'>This is red</span></p>
<p align="left">居左文本</p>
<p align="center">居中文本</p> 
<p align="right">居右文本</p>

<p>换行<br/></p>
<p>换行后</p>
<p><u>我是下划线<u/></p>
<hr>
<h3 id="几款主流好用的markdown编辑器介绍"><a href="#几款主流好用的markdown编辑器介绍" class="headerlink" title="几款主流好用的markdown编辑器介绍"></a>几款主流好用的markdown编辑器介绍</h3><ol>
<li><p>Mou</p>
<p> Mou 是一款由国人开发的Markdown 编辑器，支持实时预览，但是仅支持 苹果操作系统，可以说是目前最好用的免费 Markdown 编辑器，对汉字兼容性非常好。提供语法高亮、在线预览、同步滚动、全屏模式，支持自定保存、自动匹配，允许自定义主题等等。支持 CSS，HTML 和 PDF 导出等功能。</p>
<p>　Mou是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://25.io/mou/" target="_blank" rel="noopener">http://25.io/mou/</a></p>
</li>
<li><p>MarkdownPad</p>
<p> MarkdownPad被很多人称赞为windows下最好用的Markdown编辑器之一，不过仅支持windows。它有免费版和收费版（MarkdownPad Pro），一般情况下免费版就够用了，想用pro版的可以自行网上下载，强大的国人crack无处不在的~ ~。</p>
<p>　MarkdownPad支持键盘快捷键和工具栏操作，即可添加标记也可移除，支持即时HTML预览、支持自定义配色方案、字体、大小和布局、支持音乐视频，可以导出HTML和PDF。</p>
<p>　MarkdownPad是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://markdownpad.com/" target="_blank" rel="noopener">http://markdownpad.com/</a></p>
</li>
<li><p>Typora (本文就是用的这个软件哦)</p>
<p> Typora也是非常用名，非常好用的markdown编辑器，它的设计理念很不一样，是真正的即时预览型编辑器，不同于左右两个窗口的编辑器。Typora的设计理念就是极致简洁，它将「写字」和「预览」这两件事情合并了。</p>
<p>　如果要修改已经写好的markdown标记可以点击切换到“源代码模式”。</p>
<p>　Typora 同样支持 Windows、OS X 和 Linux多个操作系统，支持数学编辑，可与 Word 直接格式转换，可以进行多种文档格式转换。Typora 流畅度和反应速度很快，特别适合那些手速快的人。</p>
<p>　Typora是独立的软件。</p>
<p>　更多介绍及下载：<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p>
</li>
<li><p>Atom</p>
<p> Atom 可以说是专门为程序员推出的一个文本编辑器，界面简洁，支持实时预览。功能非常多，除了Markdown同时支持CSS，HTML，JavaScript等网页编程语言，还支持宏定义，自动分屏功能等。Atom还具有语义输入模式，比例输入code即会自动开启代码模式。</p>
<p>　Atom支持windows、苹果、linux等多种操作系统。Atom是由著名的github平台出品的。</p>
<p>　Atom是独立的软件，也支持插件方式。</p>
<p>　更多介绍及下载：<a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p>
</li>
<li><p>Haroopad</p>
<p> Haroopad也是一款非常流行的编辑器，来自韩国。Haroopad支持 Windows、Mac OS X 和 Linux三大操作系统。Haroopad的特色是主题样式丰富，语法高亮支持无数种编程语言，几乎你能想到的编程语言他都支持。Ubuntu/Linux 用户使用该工具比例很高，Haroopad 也是开源免费的。Haroopad也支持导出HTML、PDF，也支持数学公式和流程图。</p>
<p>　Haroopad是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://pad.haroopress.com/user.html" target="_blank" rel="noopener">http://pad.haroopress.com/user.html</a></p>
</li>
</ol>
<p>参考文档：<a href="https://sspai.com/post/54912" target="_blank" rel="noopener">typora</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>md</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>toolVs</title>
    <url>/2020/07/15/toolVs/</url>
    <content><![CDATA[<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><p>1.复制/剪切/删除整行代码</p>
<blockquote>
<p>1)如果你想复制一整行代码，只需将光标移至该行，再使用组合键“Ctrl+C”来完成复制操作，而无需选择整行。</p>
<p>2)如果你想剪切一整行代码，只需将光标移至该行，再使用组合键“Ctrl+X”来完成剪切操作，而无需选择整行。</p>
<p>3)如果你想删除一整行代码，只需将光标移至该行，再使用组合键“Ctrl+L”来完成剪切操作，而无需选择整行。</p>
</blockquote>
<a id="more"></a>

<p>2.撤销/反撤销</p>
<p>　　&gt; 1)撤销：使用组合键“Ctrl+Z”进行撤销操作;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)反撤销：使用组合键“Ctrl+Y”进行反撤销操作。</p>
<p>3.向前/向后搜索</p>
<p>　　&gt; 1)使用组合键“Ctrl+I”;</p>
<p>4.在光标所在行的上面或下面插入一行</p>
<p>　　&gt; 1)组合键“Ctrl+Enter”：在当前行的上面插入一个空行;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)组合键“Ctrl+Shift+Enter”：在当前行的下面插入一个空行。</p>
<p>5.定位到行首与行尾</p>
<p>　　&gt; 1)home键：定位到当前行的行首;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)end键：定位到当前行的行尾。</p>
<p>6.选中从光标起到行首(尾)间的代码</p>
<p>　　&gt; 1)选中从光标起到行首间的代码：使用组合键“Shift + Home”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)选中从光标起到行尾间的代码：使用组合键“Shift + End”。</p>
<p>7.快速隐藏或显示当前代码段</p>
<p>　　&gt; 使用组合键“Ctrl+M,M”(记住：要按两次M哦)。</p>
<p>8.查找和替换</p>
<p>　　&gt; 1)查找：使用组合键“Ctrl+F”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)替换：使用组合键“Ctrl+H”。</p>
<p>9.大小写转换</p>
<p>　　&gt; 1)转小写：使用组合键“Ctrl+ U”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)转大写：使用组合键“CTRL + SHIFT + U”。</p>
<p>10.查找下一个相同单词</p>
<blockquote>
<p>依次找出文中所有的当前选中的单词: Ctrl + D</p>
</blockquote>
<p>11.生成解决方案</p>
<pre><code>&gt; 使用F6或者组合键“Ctrl+Shift+B”</code></pre><p>12.定义与引用</p>
<p>　　&gt; 1)转跳到定义：F12;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)查找所有引用：使用组合键“Shift+F12”。</p>
<p>20.自动定位文件</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/5d201da83f1544f4b22d5aeceedfc83b/1569231875%281%29.png" alt="img"></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>tool</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>tool</tag>
        <tag>vs</tag>
      </tags>
  </entry>
  <entry>
    <title>toolVsCode</title>
    <url>/2020/07/15/toolVsCode/</url>
    <content><![CDATA[<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><blockquote>
<p>官网下载：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p>
</blockquote>
<a id="more"></a>

<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><blockquote>
<p>Ctrl + / （单行注释）</p>
<p>Shift + Alt + A （多行注释） </p>
<p>若要取消单行或多行注释在按一次该快捷键即可</p>
<p>Ctrl + Shift + Enter （上方插入一行，鼠标光标在当前行的任意位置都可以直接换行到上一行）</p>
<p>Ctrl + Enter （下方插入一行，鼠标光标在当前行的任意位置都可以直接换行到下一行）</p>
<p>Alt + Shift + F （格式化代码，不需要全选中代码，直接格式化即可）</p>
<p>Ctrl + Shift + F （查找文件）</p>
<p>点击设置选择 keyboard shortcuts，右边会弹出所有快捷键目录</p>
</blockquote>
<h4 id="code改成中文"><a href="#code改成中文" class="headerlink" title="code改成中文"></a>code改成中文</h4><blockquote>
<p>1）打开vscode工具；</p>
<p>2）使用快捷键组合【Ctrl+Shift+p】，在搜索框中输入“configure display language”，点击确定后；</p>
<p>3）修改locale.json文件下的属性“locale”为“zh-CN”;</p>
<p>4）重启vscode工具；</p>
<p>或者 汉化中文（插件）</p>
<p>点击插件按钮搜索 Chinese, 在弹出的选项中选择第一个中文简体</p>
<p>然后右边会弹出如下图安装界面，接着点击 Install 安装</p>
</blockquote>
<h4 id="自动保存设置"><a href="#自动保存设置" class="headerlink" title="自动保存设置"></a>自动保存设置</h4><blockquote>
<p>File（文件）- Preferences（首选项）- Setting （设置）然后弹出下面界面，选择User（一般会默认选中该选项）， </p>
<p>接着如下图选择afterdelay选项即可，下面有个数字1000表示1秒，这个可自行设置，表示多少秒以后自动保存</p>
</blockquote>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>tool</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>tool</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
</search>
