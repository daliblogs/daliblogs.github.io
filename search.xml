<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML5</title>
    <url>/2020/07/22/HTML5/</url>
    <content><![CDATA[<h3 id="h5知识点整理"><a href="#h5知识点整理" class="headerlink" title="h5知识点整理"></a>h5知识点整理</h3><blockquote>
<ol>
<li>任何class和id里都不能包含”ad” 这个关键字,否则会被一些广告屏蔽软件给过滤了</li>
</ol>
</blockquote>
<a id="more"></a>

<blockquote>
<ol start="2">
<li><input type="tel" placeholder="输入手机号" pattern="1[3-8][0-9]{9}" title="输入正确的手机号">
</li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li><meter min="0" low="40" high="90" max="100" value="95"></meter></li>
</ol>
</blockquote>
<blockquote>
<ol start="4">
<li><p contenteditable="true">这里的内容可以编辑</p>
</li>
</ol>
</blockquote>
<blockquote>
<ol start="5">
<li><p>使用input数字number类型的时候maxlength无效，假设需要控制输入数量为5，可以用以下方式：</p>
<p>无效： <input type="number" maxlength="5" /></p>
<p>有效：<input type="number" oninput="if(value.length>5)value=value.slice(0,5)" /> </p>
</li>
</ol>
</blockquote>
<blockquote>
<ol start="6">
<li><p>tel、email</p>
<p>例如说当type=tel的时候,在手机上打开页面会出现电话键盘(不是数字键盘,两者并不一样,电话键盘还包括*和#)</p>
<p>当type=email的时候,会出现带@和.com符号的全键盘(各设配各系统实现貌似有差异)</p>
</li>
</ol>
</blockquote>
<blockquote>
<ol start="7">
<li><a href="http://www.baidu.com/link?url=gFF8MX53uYP6kl_JnWUbWmEEIn6gA5irf5C_fBWwLtTEccOmxfwGpe899O79mYaM" target="_blank" rel="noopener">HTML页面顶部出现空白部分(&amp;#65279)字符的完美解决办法</a></li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;	</span><br><span class="line">   <span class="keyword">var</span> a=<span class="built_in">document</span>.body.innerHTML;   </span><br><span class="line">   <span class="built_in">document</span>.body.innerHTML=a.replace(<span class="regexp">/\ufeff/g</span>,<span class="string">''</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<ol start="8">
<li><p>ios的readonly不兼容</p>
<p>unselectable=”on” onfocus=”this.blur()”</p>
</li>
</ol>
</blockquote>
<blockquote>
<ol start="9">
<li><p>form表单获取input</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/2bb1822c99ae4a2c8ea984da3389235a/clipboard.png" alt="img"></p>
<p>document.tmform.tmtext.value</p>
<p>document.tmform.halou.value</p>
</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>google</title>
    <url>/2020/07/22/google/</url>
    <content><![CDATA[<h3 id="你不知道的隐藏快捷方式"><a href="#你不知道的隐藏快捷方式" class="headerlink" title="你不知道的隐藏快捷方式"></a>你不知道的隐藏快捷方式</h3><p>1.曾经，在线调伪类样式困扰过你？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/3e37c87949354fd1ab4bee1ed8676af4/640.webp" alt="img"></p>
<a id="more"></a>

<p>2.源代码快速定位到某一行！ctrl + p</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/93b3a4a933ad4bac8cfc64e6e59e694b/640.gif" alt="img"></p>
<p>3.联调接口失败时，后台老哥总管你要response？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/2cafd89fd1054dc0a8d23f95a74520e1/640.gif" alt="img"></p>
<p>4.你还一层层展开dom？Alt + Click</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/5c40b6e11ac1432189cedd1443122832/640.gif" alt="img"></p>
<p>5.是不是报错了，你才去打断点？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/8a0799840d9743caaa561b2c43c71531/640.gif" alt="img"></p>
<p>6.你是不是经常想不起来，在哪绑定事件的？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/cab376eeffa04589ba8a9adc42a994a6/640.gif" alt="img"></p>
<p>7.你是不是打断点时还要去改代码？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/5b0f811bc6b2443bb6c9913b988602cc/640.gif" alt="img"></p>
<p>8.看dom层级的最直观的方式？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/12aae17dc95e47ed83c67d5699929b09/640.gif" alt="img"></p>
<p>9.查一些特定的请求，过滤器用过吗？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/15755a838f4c495a938d22fe8a4198f7/640.gif" alt="img"></p>
<p>10.在Elements面板调整dom结构很不方便？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/29cce3df7f9943f1bcaba6f97d5abdcb/640.gif" alt="img"></p>
<p>11.想知道，某图片加载的代码在哪？Initiator！！</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/9f036eb473ef4e1a9eed935f60b6bc58/640.webp" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/bac1491621874bca9ed4034025e24b37/640.webp" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/a2ac48f9e04b4b3997eac83a323e920a/640.webp" alt="img"></p>
<p>12.不想加载某个文件了？</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/42fac284b98e42af811338fb0308ee56/640.webp" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/738dadd5d10b4d4e8b6ee39090f9c4a4/640.webp" alt="img"></p>
<p>13.手动改定位信息</p>
<p>Chrome中模拟定位信息，清除定位信息</p>
<p>chrome  F12进入调试模式后，点击右上角的 三个点的标志，如下图</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/3f4cb2ddc5e940449e5f524c505cca45/723102529524.png" alt="img"></p>
<p>将其Geolocation中的下拉更改为Custom Location（或者直接选择other），在下方填入经纬度信息即可模拟当前位置；</p>
<p>如果要清除位置信息，需将Geolocation修改为No override，并且关闭浏览器，重启启动后才会生效，</p>
<p>切记重启浏览器，否则你可以在调试时看到你传入的经纬度信息依旧是你之前设置的数据，</p>
<p>如果再没有生效，可将浏览器数据清除重试</p>
]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>css3</title>
    <url>/2020/07/23/css3/</url>
    <content><![CDATA[<h3 id="日常积累"><a href="#日常积累" class="headerlink" title="日常积累"></a>日常积累</h3><a id="more"></a>

<ol>
<li><p>介绍一下标准的CSS的盒子模型？与低版本IE的盒子模型有什么不同的？</p>
<blockquote>
<ul>
<li>标准盒子模型：宽度=内容的宽度（content）+ border + padding + margin </li>
<li>低版本IE盒子模型：宽度=内容宽度（content+border+padding）+ margin</li>
</ul>
</blockquote>
</li>
<li><p>box-sizing属性</p>
<blockquote>
<p>用来控制元素的盒子模型的解析模式，默认为content-box </p>
<ul>
<li>context-box：W3C的标准盒子模型，设置元素的 height/width 属性指的是content部分的高/宽 </li>
<li>border-box：IE传统盒子模型。设置元素的height/width属性指的是border + padding + content部分的高/宽</li>
</ul>
</blockquote>
</li>
<li><p>CSS选择器有哪些？哪些属性可以继承？</p>
<blockquote>
<ul>
<li>CSS选择符：id选择器(#myid)、类选择器(.myclassname)、标签选择器(div, h1, p)、相邻选择器(h1 + p)、子选择器（ul &gt; li）、后代选择器（li a）、通配符选择器（*）、属性选择器（a[rel=”external”]）、伪类选择器（a:hover, li:nth-child）</li>
<li>可继承的属性：font-size, font-family, color</li>
<li>不可继承的样式：border, padding, margin, width, height</li>
<li>优先级（就近原则）：!important &gt; [ id &gt; class &gt; tag ] </li>
<li>!important 比内联优先级高</li>
</ul>
</blockquote>
</li>
<li><p>CSS优先级算法如何计算？</p>
<blockquote>
<p>元素选择符： 1 </p>
<p>class选择符： 10 </p>
<p>id选择符：100 </p>
<p>元素标签：1000</p>
<p>!important声明的样式优先级最高，如果冲突再进行计算。 </p>
<p>如果优先级相同，则选择最后出现的样式。 </p>
<p>继承得到的样式的优先级最低。</p>
</blockquote>
</li>
<li><p>CSS3伪类有那些?</p>
<blockquote>
<ul>
<li><p>p:first-of-type 选择属于其父元素的首个元素 </p>
</li>
<li><p>p:last-of-type 选择属于其父元素的最后元素 </p>
</li>
<li><p>p:only-of-type 选择属于其父元素唯一的元素 </p>
</li>
<li><p>p:only-child 选择属于其父元素的唯一子元素 </p>
</li>
<li><p>p:nth-child(2) 选择属于其父元素的第二个子元素 </p>
</li>
<li><p>plate:nth-of-type(even) 或 plate:nth-of-type(2n)  选中所有偶数的plate</p>
<p>plate:nth-of-type(odd) 或 plate:nth-of-type(2n+1)  奇数项</p>
<p>plate:nth-of-type(2n+3) 选择偶数项并从第三个开始</p>
<p>plate:nth-of-type(3n) 选择3的倍数</p>
</li>
<li><p>:enabled :disabled 表单控件的禁用状态。 </p>
</li>
<li><p>:checked 单选框或复选框被选中。</p>
</li>
<li><p>bento ~ pickle  bento旁边的pickle元素  </p>
</li>
</ul>
</blockquote>
</li>
<li><p>如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？</p>
<blockquote>
<ul>
<li><p>div：</p>
<p>border: 1px solid red; </p>
<p>margin: 0 auto; </p>
<p>height: 50px; </p>
<p>width: 80px; </p>
</li>
<li><p>浮动元素的上下左右居中：</p>
<p>border: 1px solid red; </p>
<p>float: left; </p>
<p>position: absolute; </p>
<p>width: 200px; </p>
<p>height: 100px; </p>
<p>left: 50%; </p>
<p>top: 50%; </p>
<p>margin: -50px 0 0 -100px; </p>
</li>
<li><p>绝对定位的左右居中：</p>
<p>border: 1px solid black; </p>
<p>position: absolute; </p>
<p>width: 200px; </p>
<p>height: 100px; </p>
<p>margin: 0 auto; </p>
<p>left: 0; </p>
<p>right: 0;</p>
</li>
<li><p>flex布局所有元素在范围内水平垂直分布</p>
</li>
</ul>
<p>​      display: flex;</p>
<p>​      flex-wrap: wrap;</p>
<p>​      align-items: center;</p>
<p>​      justify-content: center;</p>
<p>​     所有子级元素</p>
<p>​    &gt; h1, &gt; h2, p {</p>
<p>​           width: 100%;</p>
<p>​           text-align: center;</p>
<p>​     }</p>
</blockquote>
</li>
<li><p>position的值</p>
<blockquote>
<ul>
<li>static（默认）：按照正常文档流进行排列； </li>
<li>relative（相对定位）：不脱离文档流，参考自身静态位置通过 top, bottom, left, right 定位； </li>
<li>absolute(绝对定位)：参考距其最近一个不为static的父级元素通过top, bottom, left, right 定位； </li>
<li>fixed(固定定位)：所固定的参照对像是可视窗口。</li>
</ul>
</blockquote>
</li>
<li><p>CSS3有哪些新特性</p>
<blockquote>
<ul>
<li><p>对长的不可分割单词换行 word-wrap：break-word </p>
</li>
<li><p>英文和数字不换行 word-break: break-all;</p>
</li>
<li><p>文字超出行数以省略号显示</p>
<p>display: -webkit-box !important;</p>
<p>-ms-text-overflow: ellipsis;</p>
<p>text-overflow: ellipsis;</p>
<p>overflow: hidden;</p>
<p>word-break: break-all;</p>
<p>-webkit-box-orient: vertical;</p>
<p>-webkit-line-clamp: 3; // 可显示行数</p>
</li>
<li><p>取消a标签在移动端点击时的蓝色</p>
<p>-webkit-tap-highlight-color: rgba(255, 255, 255, 0);</p>
<p>-webkit-user-select: none;</p>
<p>-moz-user-focus: none;</p>
<p>-moz-user-select: none;</p>
</li>
<li><p>指定位置剪切图片</p>
<p>img{</p>
<p>position:absolute; </p>
<p>​    clip:rect(0px 500px 150px 0px); </p>
<p>}</p>
</li>
<li><p>阻止旋转屏幕时自动调整字体大小</p>
<p>移动端开发时，屏幕有竖屏和横屏模式，当屏幕进行旋转时，字体大小则有可能会发生变化，从而影响页面布局的整体样式，为避免此类情况发生，只需设置如下样式即可</p>
<p>1 * {2   -webkit-text-size-adjust: none;3 }</p>
</li>
<li><p>修改移动端难看的点击的高亮效果，iOS和安卓下都有效</p>
<p> -webkit-tap-highlight-color: rgba(0,0,0,0);</p>
</li>
<li><p>禁止在input中输入中文</p>
<p>用文本框的CSS属性ime-mode实现。 </p>
<input onpaste="return false" ondragenter="return false"  style="ime-mode:disabled"> 

<p> 提示：设置ime-mode为disabled的意思是禁止在输入时禁止用户激活输入中文，韩文，日文等的输入法（IME）状态，因为这个只能检测到键盘的输入，对通过鼠标操作的粘贴和拖放无效。 </p>
</li>
</ul>
</blockquote>
</li>
<li><p>icon字体</p>
<blockquote>
<p>1.引入css</p>
<link rel="stylesheet" type="text/css" href="//at.alicdn.com/t/font_918569_2pxb1owlzc1.css" />

<p>2.使用</p>
<p><span class="iconfont icon-xiaoxi"></span></p>
</blockquote>
</li>
<li><p>三角</p>
<blockquote>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/27ee901899f54804a9b25ca43d7a1577/clipboard.png" alt="img"></p>
<p>width: 0;<br>height: 0;<br>border: 50px solid;<br>border-color: red yellow green blue;</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/ab651a41b1784e39a74d4ee18fc03bfa/clipboard.png" alt="img"></p>
<p>width: 0;<br>height: 0;<br>border: 50px solid;<br>border-color: red transparent transparent transparent;</p>
</blockquote>
</li>
<li><p>对勾</p>
<blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tesy"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.tesy</span> &#123;</span></span><br><span class="line">    width: 60px;</span><br><span class="line">    height: 30px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 110px;</span><br><span class="line">    top: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">、  <span class="selector-class">.tesy</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line">    position: relative;</span><br><span class="line">    content: '';</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 6px;</span><br><span class="line">    height: 15px;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#1137a0</span>;</span></span><br><span class="line">    border-bottom: 1px solid;</span><br><span class="line">    border-right: 1px solid;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">    -webkit-transform-origin: center;</span><br><span class="line">            transform-origin: center;</span><br><span class="line">    transform: translate(-50%, -30%) rotate(45deg);</span><br><span class="line">    -webkit-transform: translate(-50%, -30%) rotate(45deg);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>三角突出效果</p>
<blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rongpi"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wenan"</span>&gt;</span>跟团游<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sanjiao"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">.rongpi&#123;</span><br><span class="line">			height: 15px;</span><br><span class="line">			overflow: hidden;</span><br><span class="line">			position: absolute;</span><br><span class="line">			top:0;</span><br><span class="line">			left: 0;</span><br><span class="line">		&#125;</span><br><span class="line">		.wenan&#123;</span><br><span class="line">			float: left;</span><br><span class="line">			position: relative;</span><br><span class="line">			z-index: 3;</span><br><span class="line">			height: 15px;</span><br><span class="line">			padding-left: 4px;</span><br><span class="line">			line-height: 16px;</span><br><span class="line">			color:white;</span><br><span class="line">			background: red;</span><br><span class="line">			font-size: 10px;</span><br><span class="line">		&#125;</span><br><span class="line">		.sanjiao&#123;</span><br><span class="line">			width:0;</span><br><span class="line">			height: 0;</span><br><span class="line">			border-right: 20px solid transparent;</span><br><span class="line">			border-top: 30px solid red;</span><br><span class="line">			float: right;</span><br><span class="line">			margin-left: -9px;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>渐变</p>
<blockquote>
<ul>
<li><p>背景颜色渐变色</p>
<p>background:linear-gradient(116deg,rgba(247,209,177,1) 0%,rgba(210,162,122,1) 100%);</p>
<p><a href="https://blog.csdn.net/qq_36538012/article/details/79467097" target="_blank" rel="noopener">https://blog.csdn.net/qq_36538012/article/details/79467097</a></p>
<p><a href="https://blog.csdn.net/qq_16390749/article/details/77718834" target="_blank" rel="noopener">https://blog.csdn.net/qq_16390749/article/details/77718834</a></p>
</li>
<li><p>字体颜色渐变色</p>
<p><a href="https://blog.csdn.net/qq_34122603/article/details/78684445" target="_blank" rel="noopener">https://blog.csdn.net/qq_34122603/article/details/78684445</a></p>
</li>
</ul>
</blockquote>
</li>
<li><p>判断机型（页面大小）</p>
<blockquote>
<ul>
<li><p>iphoneX</p>
<p>@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {</p>
<p>​     .BottomProgress {</p>
<p>​        bottom: 34px !important;</p>
<p>​    }</p>
<p>}</p>
</li>
</ul>
</blockquote>
</li>
<li><p>彩色进度条</p>
<blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">progress: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> filldiv = $(<span class="string">"#filldiv"</span>);</span><br><span class="line">  <span class="keyword">var</span> percent = $(<span class="string">"#percent"</span>);</span><br><span class="line">  <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#filldiv"</span>).css(<span class="string">"width"</span>, i++ + <span class="string">'%'</span>)</span><br><span class="line">    $(<span class="string">"#filldiv"</span>).css(<span class="string">"background"</span>, self.getColor())</span><br><span class="line">    $(<span class="string">"#percent"</span>).innerHTML = <span class="built_in">parseInt</span>(i * <span class="number">100</span> / <span class="number">500</span>);</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">100</span>) &#123;</span><br><span class="line">      clearInterval(timer);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">100</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">////获取十六进制的随机颜色值</span></span><br><span class="line">getColor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">"0123456789abcdef"</span>;</span><br><span class="line">  <span class="keyword">var</span> color = <span class="string">"#"</span>;</span><br><span class="line">  <span class="keyword">var</span> rand;</span><br><span class="line">  <span class="comment">//str有下标 0-15</span></span><br><span class="line">  <span class="comment">//获取0-15的随机数</span></span><br><span class="line">  <span class="comment">//通过这个随机数作为str的下标，</span></span><br><span class="line">  <span class="comment">//获取随机字符</span></span><br><span class="line">  <span class="comment">//获取六个随机字符拼成一个字符串</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    rand = self.getRand(<span class="number">0</span>, <span class="number">15</span>);</span><br><span class="line">    color += str.charAt(rand);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> color;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//获取min-max之间的随机整数</span></span><br><span class="line">getRand: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>) + min);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>条纹滚动进度条</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/a9c3115c2406484ea92d78187053848c/1c0ba1a3675e9eeb2b43efe126b06d4.png" alt="img"></p>
<blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">progressBar: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  self.progressText = <span class="string">''</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(d);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"progress-container "</span>).style.width = i++ + <span class="string">'%'</span>;</span><br><span class="line">    self.progressText = $(<span class="string">"progress-container "</span>).style.width</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">"progress-container "</span>).style.width &gt;= <span class="string">"98%"</span>) &#123;</span><br><span class="line">      clearInterval(timer);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">100</span>)</span><br><span class="line">&#125;,</span><br><span class="line">html</span><br><span class="line">  &lt; div <span class="class"><span class="keyword">class</span></span>=<span class="string">"progress-container"</span> id = <span class="string">"progress-container "</span> &gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"progress-cont"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span> &gt;</span><br><span class="line">  样式</span><br><span class="line">    .progress - container &#123;</span><br><span class="line">  height: <span class="number">100</span> %;</span><br><span class="line">  width: <span class="number">100</span> %;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  position: absolute;</span><br><span class="line">&#125;</span><br><span class="line">.progress - cont &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: <span class="number">-1000</span>px;</span><br><span class="line">  height: <span class="number">100</span> %;</span><br><span class="line">  width: <span class="number">2000</span>px;</span><br><span class="line">  background - image: linear - gradient(90deg, transparent 0rem, transparent 2rem, #FFEBEC 2em, #FFEBEC 4rem, transparent 4rem);</span><br><span class="line">  background - color: #FFF2F2;</span><br><span class="line">  background - size: <span class="number">40</span>px <span class="number">100</span> %;</span><br><span class="line">  background - repeat: repeat - x;</span><br><span class="line">  transform: skewX(<span class="number">-30</span>deg)!important;</span><br><span class="line">&#125;</span><br><span class="line">.progress - cont &#123;</span><br><span class="line">  animation: reverse progress - bar - stripes <span class="number">0.40</span>s linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes progress - bar - stripes &#123;</span><br><span class="line">  <span class="keyword">from</span> &#123;</span><br><span class="line">    background - position: <span class="number">40</span>px <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  to &#123;</span><br><span class="line">    background - position: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>hexoQuest</title>
    <url>/2020/07/15/hexoQuest/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>hexo开发过程中遇到的小坑大坑各种坑合集</p>
<p>部署失败时（deploy处将https改为SSH）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repository: https:&#x2F;&#x2F;github.com&#x2F;username&#x2F;username.github.io.git</span><br></pre></td></tr></table></figure>

<p>修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repository：git@github.com:username&#x2F;username.github.io.git</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="（1）检查是否有SSH-key"><a href="#（1）检查是否有SSH-key" class="headerlink" title="（1）检查是否有SSH key"></a>（1）检查是否有SSH key</h4><p>登陆github，点击头像位置处 Settings ——&gt; SSH and GPG keys ，查看是否有SSH keys。如果有，直接跳到第（3）步；如果没有，则继续。</p>
<h4 id="（2）新建-SSH-key，在git-shell-或者git-bash等命令窗口-，注意大小写："><a href="#（2）新建-SSH-key，在git-shell-或者git-bash等命令窗口-，注意大小写：" class="headerlink" title="（2）新建 SSH key，在git shell(或者git bash等命令窗口)，注意大小写："></a>（2）新建 SSH key，在git shell(或者git bash等命令窗口)，注意大小写：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮箱名&quot;</span><br></pre></td></tr></table></figure>

<p>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa):</span><br></pre></td></tr></table></figure>

<p>直接回车就可以。<br>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure>

<p>要求你输入密码，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。</p>
<p>注意：输入密码的时候没有*字样的，直接输入就好。<br>然后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;dell&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">65:69:······02:4b emailname@email.com</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|                 |</span><br><span class="line">|       .   o .   |</span><br><span class="line">|    . o o &#x3D; o    |</span><br><span class="line">|   . o * &#x3D; o     |</span><br><span class="line">|  E  o + o .     |</span><br><span class="line">| . o.   . .      |</span><br><span class="line">|     ..          |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure>

<p>至此，密钥已经成功生成。</p>
<h4 id="（3）接下来在github上添加SSH-key："><a href="#（3）接下来在github上添加SSH-key：" class="headerlink" title="（3）接下来在github上添加SSH key："></a>（3）接下来在github上添加SSH key：</h4><p>① 打开本地文件：id_rsa.pub（文件路径可以在上一步SSH生成成功后看到路径，比如我的是c/Users/dell/.ssh/id_rsa.pub），可以将这个文件在编辑器中打开，然后全选复制。</p>
<p>② 登陆github，点击头像位置处 Settings ——&gt; SSH and GPG keys ——&gt; New SSH key，点击新建SSH key。</p>
<p>③ 将 ① 中复制的内容粘贴在key文本框里，title可以不用填（或者自己起一个名字也可以）。</p>
<h4 id="（4）测试设置是否成功："><a href="#（4）测试设置是否成功：" class="headerlink" title="（4）测试设置是否成功："></a>（4）测试设置是否成功：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>有可能会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#39;github.com (192.30.252.1)&#39; can&#39;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure>

<p>或者是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#39;github.com (192.30.252.1)&#39; can&#39;t be established.</span><br><span class="line">RSA key fingerprint is nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure>

<p>这种情况下，直接 yes 回车</p>
<p>然后会出现（也可能在 <em>++$ ssh -T <a href="mailto:git@github.com">git@github.com</a>++</em> 之后，直接出现的就是这个，我就是这样~）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi username! You&#39;ve successfully authenticated, but GitHub does not </span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure>

<h4 id="（5）设置用户信息："><a href="#（5）设置用户信息：" class="headerlink" title="（5）设置用户信息："></a>（5）设置用户信息：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;用户名&quot;</span><br><span class="line">$ git config --global user.email  &quot;你希望的邮箱名&quot;</span><br></pre></td></tr></table></figure>

<h4 id="（6）然后就可以部署你的博客到github啦"><a href="#（6）然后就可以部署你的博客到github啦" class="headerlink" title="（6）然后就可以部署你的博客到github啦~"></a>（6）然后就可以部署你的博客到github啦~</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>参考文章 <a href="https://www.cnblogs.com/xsilence/p/6001938.html" target="_blank" rel="noopener">ssh</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>introduction</title>
    <url>/2020/07/09/introduction/</url>
    <content><![CDATA[<h6 id=""><a href="#" class="headerlink" title=""></a></h6><h5 id="一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。"><a href="#一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。" class="headerlink" title="一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。"></a>一个入门两年的小前端，日常总结和感悟，目的就是方便自己，方便他人。</h5><h5 id="这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。"><a href="#这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。" class="headerlink" title="这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。"></a>这个博客将会记录我的前端生涯中，不管是鸡毛蒜皮，还是令人头秃的bug和自己记不住的知识点和方法。</h5><h5 id="做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！"><a href="#做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！" class="headerlink" title="做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！"></a>做一行，爱一行，菜鸟也会有飞起的那天，加油鸭！！！</h5>]]></content>
      <categories>
        <category>introduction</category>
      </categories>
      <tags>
        <tag>introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>hexoTheme</title>
    <url>/2020/07/15/hexoTheme/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；</p>
<p>另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p>
<p>备注: 以下所有终端执行的命令都在你的Hexo根目录下</p>
<h4 id="1、基本信息配置"><a href="#1、基本信息配置" class="headerlink" title="1、基本信息配置"></a>1、基本信息配置</h4><p>打开 <strong>站点配置文件</strong> ，找到Site模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标题</span><br><span class="line">subtitle: 副标题</span><br><span class="line">description: 描述</span><br><span class="line">author: 作者</span><br><span class="line">language: 语言（简体中文是zh-Hans）</span><br><span class="line">timezone: 网站时区（Hexo 默认使用您电脑的时区，不用写）</span><br></pre></td></tr></table></figure>

<hr>
<a id="more"></a>

<h4 id="2、菜单设置"><a href="#2、菜单设置" class="headerlink" title="2、菜单设置"></a>2、菜单设置</h4><p>我们刚开始默认的菜单只有首页和归档两个，不能够满足我们的要求，所以需要添加菜单，打开 <strong>主题配置文件</strong> 找到<code>Menu Settings</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home                          &#x2F;&#x2F;首页</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive          &#x2F;&#x2F;归档</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th           &#x2F;&#x2F;分类</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags                     &#x2F;&#x2F;标签</span><br><span class="line">  about: &#x2F;about&#x2F; || user                   &#x2F;&#x2F;关于</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar        &#x2F;&#x2F;日程表</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap        &#x2F;&#x2F;站点地图</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat          &#x2F;&#x2F;公益404</span><br></pre></td></tr></table></figure>

<p>备注：看看你需要哪个菜单就把哪个取消注释打开就行了；</p>
<p>关于后面的格式，以<code>archives: /archives/ || archive</code>为例：</p>
<p><code>||</code> 之前的<code>/archives/</code>表示标题“归档”，关于标题的格式可以去<code>themes/next/languages/zh-Hans.yml</code>中参考或修改</p>
<p><code>||</code>之后的<code>archive</code>表示图标，可以去<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ffontawesome.io%2Ficons%2F" target="_blank" rel="noopener">Font Awesome</a>中查看或修改，Next主题所有的图标都来自Font Awesome。</p>
<hr>
<h4 id="3、Next主题样式设置"><a href="#3、Next主题样式设置" class="headerlink" title="3、Next主题样式设置"></a>3、Next主题样式设置</h4><p>我们百里挑一选择了Next主题，不过Next主题还有4种风格供我们选择，打开 <strong>主题配置文件</strong> 找到<code>Scheme Settings</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="4、侧栏设置"><a href="#4、侧栏设置" class="headerlink" title="4、侧栏设置"></a>4、侧栏设置</h4><p>打开 <strong>主题配置文件</strong> 找到<code>sidebar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  position: left        &#x2F;&#x2F;靠左放置</span><br><span class="line">  #position: right      &#x2F;&#x2F;靠右放置</span><br><span class="line"># Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span><br><span class="line">  #display: post        &#x2F;&#x2F;默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">  display: always       &#x2F;&#x2F;在所有页面中都显示</span><br><span class="line">  #display: hide        &#x2F;&#x2F;在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #display: remove      &#x2F;&#x2F;完全移除</span><br><span class="line">  offset: 12            &#x2F;&#x2F;文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  b2t: false            &#x2F;&#x2F;返回顶部按钮（只对Pisces | Gemini两种风格有效）</span><br><span class="line">  scrollpercent: true   &#x2F;&#x2F;返回顶部按钮的百分比</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="5、头像设置"><a href="#5、头像设置" class="headerlink" title="5、头像设置"></a>5、头像设置</h4><p>打开 <strong>主题配置文件</strong> 找到<code>Sidebar Avatar</code>字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar: &#x2F;images&#x2F;header.jpg</span><br></pre></td></tr></table></figure>

<p>这是头像的路径，只需把你的头像命名为<code>header.jpg</code>（随便命名）放入<code>themes/next/source/images</code>中，将<code>avatar</code>的路径名改成你的头像名就OK啦！</p>
<hr>
<h4 id="6、设置RSS"><a href="#6、设置RSS" class="headerlink" title="6、设置RSS"></a>6、设置RSS</h4><p>1、先安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhexojs%2Fhexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>2、打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># RSS订阅</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &#39; &#39;</span><br></pre></td></tr></table></figure>

<p>3、打开 <strong>主题配置文件</strong> 找到<code>rss</code>，设置为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="7、添加分类模块"><a href="#7、添加分类模块" class="headerlink" title="7、添加分类模块"></a>7、添加分类模块</h4><p>1、新建一个分类页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>categorcies/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 分类</code><br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将categorcies取消注释<br>4、把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中<br>举个栗子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 分类测试文章标题</span><br><span class="line">categories: 分类名</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="8、添加标签模块"><a href="#8、添加标签模块" class="headerlink" title="8、添加标签模块"></a>8、添加标签模块</h4><p>1、新建一个标签页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>tags/index.md</code>，打开<code>index.md</code>文件将title设置为<code>title: 标签</code><br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将tags取消注释<br>4、把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中<br>举个栗子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标签测试文章标题</span><br><span class="line">tags: </span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="9、添加关于模块"><a href="#9、添加关于模块" class="headerlink" title="9、添加关于模块"></a>9、添加关于模块</h4><p>1、新建一个关于页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure>

<p>2、你会发现你的<code>source</code>文件夹下有了<code>about/index.md</code>，打开<code>index.md</code>文件即可编辑关于你的信息，可以随便编辑。<br>3、打开 <strong>主题配置文件</strong> 找到<code>menu</code>，将about取消注释</p>
<hr>
<h4 id="10、添加搜索功能"><a href="#10、添加搜索功能" class="headerlink" title="10、添加搜索功能"></a>10、添加搜索功能</h4><p>1、安装 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fflashlab%2Fhexo-generator-search" target="_blank" rel="noopener">hexo-generator-searchdb</a> 插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>2、打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 搜索</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>3、打开 <strong>主题配置文件</strong> 找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p>
<hr>
<h4 id="11、添加阅读全文按钮"><a href="#11、添加阅读全文按钮" class="headerlink" title="11、添加阅读全文按钮"></a>11、添加阅读全文按钮</h4><p>因为在你的博客主页会有多篇文章，如果你想让你的文章只显示一部分，多余的可以点击阅读全文来查看，那么你需要在你的文章中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>

<p>其后面的部分就不会显示了，只能点击阅读全文才能看</p>
<hr>
<h4 id="12、修改文章内链接文本样式"><a href="#12、修改文章内链接文本样式" class="headerlink" title="12、修改文章内链接文本样式"></a>12、修改文章内链接文本样式</h4><p><img src="http://upload-images.jianshu.io/upload_images/4120931-9cd87c2cc2d0c78f.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/360/format/webp" alt="img"></p>
<p>效果图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post.styl</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post-body p a &#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中选择 .post-body 是为了不影响标题，选择 p 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p>
<hr>
<h4 id="13、设置网站缩略图标"><a href="#13、设置网站缩略图标" class="headerlink" title="13、设置网站缩略图标"></a>13、设置网站缩略图标</h4><blockquote>
<p>从网上看了很多设置方法都是说把favicon.ico放到站点目录的source目录下就可以了，可是我试了好多遍，并不行。</p>
</blockquote>
<p>我的设置方法是这样的：把你的图片（png或jpg格式，不是favicon.ico）放在<code>themes/next/source/images</code>里，然后打开 <strong>主题配置文件</strong> 找到<code>favicon</code>，将<code>small、medium、apple_touch_icon</code>三个字段的值都设置成<code>/images/图片名.jpg</code>就可以了，其他字段都注释掉。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4120931-61a0cc555a25548e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/344/format/webp" alt="img"></p>
<hr>
<h4 id="14、设置文章字体的颜色、大小"><a href="#14、设置文章字体的颜色、大小" class="headerlink" title="14、设置文章字体的颜色、大小"></a>14、设置文章字体的颜色、大小</h4><p><img src="http://upload-images.jianshu.io/upload_images/4120931-e471abbb2b1f459f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/477/format/webp" alt="img"></p>
<p>效果图</p>
<p>如果想设置某一句的颜色或大小，只需用html语法写出来就行了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">接下来就是见证奇迹的时刻</span><br><span class="line">&lt;font color&#x3D;&quot;#FF0000&quot;&gt; 我可以设置这一句的颜色哈哈 &lt;&#x2F;font&gt; </span><br><span class="line">&lt;font size&#x3D;6&gt; 我还可以设置这一句的大小嘻嘻 &lt;&#x2F;font&gt; </span><br><span class="line">&lt;font size&#x3D;5 color&#x3D;&quot;#FF0000&quot;&gt; 我甚至可以设置这一句的颜色和大小呵呵&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="15、设置文字居中"><a href="#15、设置文字居中" class="headerlink" title="15、设置文字居中"></a>15、设置文字居中</h4><p>设置方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;这一行需要居中&lt;&#x2F;center&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：简书中此方法无效</p>
</blockquote>
<hr>
<h4 id="16、添加评论系统"><a href="#16、添加评论系统" class="headerlink" title="16、添加评论系统"></a>16、添加评论系统</h4>]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexoStart</title>
    <url>/2020/07/15/hexoStart/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2Findex.html" target="_blank" rel="noopener">Hexo</a>框架，基于Node.js，搭建博客首先需要有一个GitHub账号并且配置了SSH Keys</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li><p>github仓库创建</p>
<a id="more"></a>

</li>
</ol>
<p>点击New repository创建，注意：仓库名称一定是<code>username.github.io</code>这种格式，username替换一个你喜欢的名字。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/4120931-5b31c3ac628564b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/767/format/webp" alt="img"></p>
<ol start="2">
<li><p>Git安装（此处不多做说明，网上很多教程）</p>
<blockquote>
<p>验证：执行<code>git --version</code>如果输出类似<code>git version 2.15.0</code>说明安装成功了</p>
</blockquote>
</li>
<li><p>nodeJs安装（此处不多做说明，网上很多教程）</p>
<blockquote>
<p>验证：执行<code>npm --version</code>如果输出类似<code>5.5.1</code>说明安装成功了</p>
</blockquote>
</li>
<li><p>hexo安装</p>
</li>
</ol>
<h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><ol>
<li><p>hexo文件夹创建</p>
<p>安装 Hexo 完成后，在你喜欢的目录下新建一个文件夹命名为<code>username</code>（替换成你喜欢的名字），然后cd到username文件夹下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd username</span><br><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>执行完毕后你将看到在你刚创建的文件夹下会有很多资源</p>
</li>
</ol>
<p><img src="https://upload-images.jianshu.io/upload_images/4120931-51990266dab56f41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/220/format/webp" alt="img"></p>
<ol start="2">
<li><p>基础配置</p>
<p>接下来打开username下的<code>_config.yml</code>文件（上图中的第一个文件），修改一下里面几个关键的信息，修改完记得保存，注意：冒号后面要有空格。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: my_杨哥      &#x2F;&#x2F;你博客的名字</span><br><span class="line">author: Li Yang    &#x2F;&#x2F;你的名字</span><br><span class="line">language: zh-Hans  &#x2F;&#x2F;语言-简体中文</span><br></pre></td></tr></table></figure>

<p>上面这3个字段是关键信息，如需修改其他信息请参考<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fzh-cn%2Fdocs%2Fconfiguration.html" target="_blank" rel="noopener">配置</a></p>
</li>
<li><p>主题安装</p>
<p>username下的<code>themes</code>文件夹中存放的是主题，默认的是landscape主题，如果你不喜欢可以安装其他主题。</p>
<p><strong>NexT</strong>主题是一套简约的主题，是目前使用最火的一个主题，下面我们安装一下该主题，你也可参考<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html" target="_blank" rel="noopener">安装NexT</a>。</p>
<p>Hexo还有<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhexo.io%2Fthemes%2F" target="_blank" rel="noopener">更多主题</a>供你选择</p>
</li>
</ol>
<ul>
<li><p>安装NexT主题：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd username        &#x2F;&#x2F;进入到username文件夹下</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用NexT主题：<br>打开username下的<code>_config.yml</code>文件（上图中的第一个文件），找到<code>theme</code>字段将其值更改为<code>next</code></p>
</li>
<li><p>验证主题：</p>
<p><em>注意：每次切换主题之后、验证主题之前都要清除 Hexo 的缓存</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean    &#x2F;&#x2F;清除缓存</span><br></pre></td></tr></table></figure>

<p>开始验证：启动Hexo本地服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>然后你将会看到终端输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>这行的意思是说你用浏览器打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p>
<p>便可看到你的博客了，这只是本地的测试，如果测试没问题就执行Ctrl+C退出去，此时该地址就不能访问了。</p>
</li>
</ul>
<p>OK，现在，你已经成功安装并启用了 NexT 主题。接下来就是对该主题的一些设置，详细可参考<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftheme-next.iissnan.com%2Fgetting-started.html%23theme-settings" target="_blank" rel="noopener">NexT主题设定</a></p>
<h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><ol>
<li><p>文章新建</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new layout title</span><br></pre></td></tr></table></figure>

<p>layout：模板，如果不写将使用默认模板，一般不写，直接<code>$ hexo new title</code></p>
<p>title：文章标题，如果标题包含空格的话，请使用引号括起来。</p>
<p>新建的文章将会存在<code>username/source/_posts</code>中，<code>_posts</code>就是默认模板，文章文件名称将会是<code>title.md</code>，接下来就可以打开该文件进行编辑写你的文章了。</p>
</li>
<li><p>静态文件生成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地服务器启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>本地服务器启动完之后就如同上面验证主题一样，访问 <a href="https://links.jianshu.com/go?to=http%3A%2F%2Flocalhost%3A4000" target="_blank" rel="noopener">http://localhost:4000</a> 来验证一下你写的文章预览效果。</p>
</li>
<li><p>网站部署</p>
<p>安装部署工具</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完毕后打开username下的<code>_config.yml</code>文件，翻到最底部找到deploy节点编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;YoungerLi&#x2F;youngerli.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>其中<code>https://github.com/YoungerLi/youngerli.github.io.git</code>就是你GitHub中创建的仓库地址，在这复制即可</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4120931-8525599433d095b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/442/format/webp" alt="img"></p>
<p>repository</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d        &#x2F;&#x2F;hexo deploy的缩写</span><br></pre></td></tr></table></figure>

<p>第一次执行这一步的时候会让你输入你的GitHub的用户名及密码，输入正确无误后执行完毕，任何人就可以访问 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fyoungerli.github.io" target="_blank" rel="noopener">https://youngerli.github.io</a> 进入你的博客了。</p>
<p>以后每次写完文章之后依次执行以下命令就可以发布更新了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean      &#x2F;&#x2F; 清除缓存</span><br><span class="line">$ hexo g          &#x2F;&#x2F; 生成静态网页文件</span><br><span class="line">$ hexo d          &#x2F;&#x2F; 将本地博客发布到github</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="博客备份和恢复"><a href="#博客备份和恢复" class="headerlink" title="博客备份和恢复"></a>博客备份和恢复</h3><h4 id="1-博客备份"><a href="#1-博客备份" class="headerlink" title="1. 博客备份"></a>1. 博客备份</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git init &#x2F;&#x2F;git初始化</span><br><span class="line">$ git add . &#x2F;&#x2F;git 文件添加</span><br><span class="line">$ git commit -m &quot;init&quot; &#x2F;&#x2F;git 提交</span><br><span class="line">$ git pull origin hexo &#x2F;&#x2F;pull到hexo分支</span><br><span class="line">$ git push origin hexo &#x2F;&#x2F;push到hexo分支</span><br></pre></td></tr></table></figure>

<h4 id="2-博客恢复"><a href="#2-博客恢复" class="headerlink" title="2. 博客恢复"></a>2. 博客恢复</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">（一）配置 ssh 连接 Github</span><br><span class="line">$ cd ~&#x2F;.ssh 或cd .ssh &#x2F;&#x2F;检查本机是否有ssh key设置</span><br><span class="line">$ cd ~  &#x2F;&#x2F;若没有 ssh ，则切换当前路径在 ”~” 下</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;user@example.com&quot; &#x2F;&#x2F;引号内为自己邮箱，三个回车后生成ssh key;添加id_rsa.pub内容到Github;</span><br><span class="line">$ git config --global user.name “your_username”  &#x2F;&#x2F;设置用户名</span><br><span class="line">$ git config --global user.email “your_registered_github_Email”  &#x2F;&#x2F;设置邮箱地址(建议用注册giuhub的邮箱)</span><br><span class="line">$ ssh -T git@github.com &#x2F;&#x2F;测试ssh key是否设置成功</span><br><span class="line">（二）安装 Node.js；Git；Hexo；</span><br><span class="line">$ git clone -b hexo git@github.com:user&#x2F;user.github.io.git  &#x2F;&#x2F;将Github中hexo分支clone到本地</span><br><span class="line">$ cd user.github.io &#x2F;&#x2F;切换到hexo目录下</span><br><span class="line">$ npm install hexo</span><br><span class="line">$ npm install </span><br><span class="line">$ npm install hexo *** &#x2F;&#x2F;安装需要的插件：feed;deployer;abbrlink;sitemap;pdf;nofollow;baidu-url-submit等</span><br><span class="line">$ hexo g -d &#x2F;&#x2F;测试能否正常编译上传</span><br></pre></td></tr></table></figure>

<h4 id="3-博主安装的插件："><a href="#3-博主安装的插件：" class="headerlink" title="3. 博主安装的插件："></a>3. 博主安装的插件：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo-abbrlink &#x2F;&#x2F; Hexo 链接优化</span><br><span class="line">hexo-baidu-url-submit &#x2F;&#x2F; 百度链接主动提交</span><br><span class="line">hexo-blog-encrypt &#x2F;&#x2F; 博客文章加密</span><br><span class="line">hexo-autonofollow &#x2F;&#x2F; 出站链接优化</span><br><span class="line">hexo-deployer-git &#x2F;&#x2F; 上传部署</span><br><span class="line">hexo-generator-baidu-sitemap &#x2F;&#x2F;百度站点地图</span><br><span class="line">hexo-generator-feed &#x2F;&#x2F; RSS 插件</span><br><span class="line">hexo-generator-searchdb &#x2F;&#x2F; 站内搜索</span><br><span class="line">hexo-generator-sitemap &#x2F;&#x2F; 站点地图</span><br><span class="line">hexo-neat &#x2F;&#x2F; 博客压缩</span><br><span class="line">hexo-pdf &#x2F;&#x2F; 博客文章 PDF 显示</span><br><span class="line">hexo-wordcount &#x2F;&#x2F; 计数插件</span><br><span class="line">hexo-lazyload-image &#x2F;&#x2F;图片懒加载</span><br></pre></td></tr></table></figure>

<p>参考文档：<a href="https://www.jianshu.com/p/51617690f8ca" target="_blank" rel="noopener">hexo搭建</a></p>
<p>​           <a href="https://www.jianshu.com/p/74673c8bbc12" target="_blank" rel="noopener">hexo其他</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>ipAndDNS</title>
    <url>/2020/07/22/ipAndDNS/</url>
    <content><![CDATA[<h3 id="怎么查找ip地址"><a href="#怎么查找ip地址" class="headerlink" title="怎么查找ip地址"></a>怎么查找ip地址</h3><p>方式一  电脑输入cmd，再输入ipconfig</p>
<p>方式二  本地连接的网络–属性–IPv4 地址 </p>
<h3 id="设置自动获取DNS服务器地址"><a href="#设置自动获取DNS服务器地址" class="headerlink" title="设置自动获取DNS服务器地址"></a>设置自动获取DNS服务器地址</h3><p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/fc8553c2386b4b2d92f520dcc620dd05/clipboard.png" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/89ca4cf297cd4b3491dbcafccbbc09b4/clipboard.png" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/eb35dfdceb814e4ab8082799a655dd93/clipboard.png" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/f6f7dd86fd3e4311a08ebaaa82217aba/clipboard.png" alt="img"></p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/46d287f01a334ea9b61f7a1d87d1201f/clipboard.png" alt="img"></p>
]]></content>
  </entry>
  <entry>
    <title>mdIntro</title>
    <url>/2020/07/15/mdIntro/</url>
    <content><![CDATA[<p><strong>Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是完全免费的。</strong></p>
<h4 id="智能标点"><a href="#智能标点" class="headerlink" title="智能标点"></a>智能标点</h4><p>我认为「智能标点」是比较有趣的一点。它可以自动帮你将不是很美观的直引号 <code>&quot;</code> <code>&#39;</code> 转化为更美观的弯引号 <code>“</code> <code>‘</code> <code>’</code> <code>”</code>。具体内容你可以在官方的 <a href="http://support.typora.io/SmartyPants/" target="_blank" rel="noopener">这篇文档</a> 中查看。关于直弯引号在 macOS 上如何输入你也可以看 <a href="https://sspai.com/post/38342" target="_blank" rel="noopener">这篇文章</a>。</p>
<hr>
<a id="more"></a>

<h4 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h4><p>Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/717da653ad91e938c5f1f40555b9c057.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">图片插入</p>
<p>这一功能保证了即使网络图片源失效了，你还有本地的备份可用。同时也能使你的文档文件夹更合理、完整。</p>
<hr>
<h4 id="打字机模式和专注模式"><a href="#打字机模式和专注模式" class="headerlink" title="打字机模式和专注模式"></a>打字机模式和专注模式</h4><p><strong>「打字机模式」</strong>使得你所编辑的那一行永远处于屏幕正中。</p>
<p><strong>「专注模式」</strong>使你正在编辑的那一行保留颜色，而其他行的字体呈灰色。</p>
<p>你可以在 <code>视图 - 专注模式 / 打字机模式</code> 中勾选使用这两个模式。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/8b4e14ef732a23d4cc2a8fb1f8ec016c.gif" alt="img"></p>
<p>为了防止一些程序 bug 的发生（虽然在我使用下来感到是很少的）导致格式问题无法修改，Typora 保留了一个<strong>「源代码模式」</strong>。你可以通过 <code>视图 - 源代码模式</code> 或左下角的 <code>&lt;/&gt;</code> 按钮进入。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/bcda9c4e35725b7297a6b90d8745564e.gif" alt="img"></p>
<hr>
<h4 id="空格与换行"><a href="#空格与换行" class="headerlink" title="空格与换行"></a>空格与换行</h4><p>Typora 在空格与换行部分主要是使用 <a href="http://www.commonmark.cn/w/" target="_blank" rel="noopener">CommonMark</a> 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。</p>
<ul>
<li><strong>空格：</strong>在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。<br>你可以在源代码模式下，为每个空格前加一个 <code>\</code> 转义符，或者直接使用 HTML 风格的 <code>&amp;nbps;</code> 来保持连续的空格。</li>
<li><strong>软换行：</strong>需要说明的是，在 Markdown 语法中，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在 Typora 中，你可以通过 <code>Shift + Enter</code> 完成一次软换行。软换行只在编辑界面可见，当文档被导出时换行会被省略。</li>
<li><strong>硬换行：</strong>你可以通过 <code>空格 + 空格 + Shift + Enter</code> 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。</li>
<li><strong>换段：</strong>你可以通过 <code>Enter</code> 完成一次换段。Typora 会自动帮你完成两次 <code>Shift + Enter</code> 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。</li>
<li><strong>Windows 风格（CR+LF）与 Unix 风格（CR）的换行符：</strong>CR 表示回车 <code>\r</code> ，即回到一行的开头，而 LF 表示换行 <code>\n</code> ，即另起一行。<br>所以 Windows 风格的换行符本质是「回车 + 换行」，而 Unix 风格的换行符是「换行」。这也是为什么 Unix / Mac 系统下的文件，如果在 Windows 系统直接打开会全部在同一行内。 你可以在 <code>文件 - 偏好设置 - 编辑器 - 默认换行符</code> 中对此进行切换。</li>
</ul>
<p>下附以上各空格、换行、换段的测试结果图。具体内容你可以在官网的 <a href="http://support.typora.io/Line-Break/" target="_blank" rel="noopener">这篇文档</a> 中查阅。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/5c2fbaa53b27666a7fd0b07ac3e100bf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><p>除了前文提到的文件侧边栏，Typora 还提供了一些耦合度不高的文件系统。</p>
<ul>
<li><strong>快速打开：</strong>你可以通过 <code>文件 - 快速打开...</code> 或 <code>Ctrl + P</code> 快捷键快速打开最近的文档。</li>
<li><strong>保存：</strong>Typora 支持自动保存，一般很少有写好的文档丢失的情况。同时它也提供了诸如「保存」、「另存为」、「保存全部打开的文件…」之类的功能。</li>
<li><strong>导入：</strong>Typora 支持非常多的文件格式：.docx, .latex, .tex, .ltx, .rst, .rest, .org, .wiki, .dokuwiki, .textile, .opml, .epub。</li>
<li><strong>导出：</strong>Typora 原生支持导出 PDF，HTML等格式。你可以根据软件内提示安装 <strong>Pandoc 插件</strong>来导出更多例如 docx，LaTeX 等格式。 </li>
</ul>
<p><img src="https://cdn.sspai.com/2019/05/24/ba295f21f0b71646bb36a0517e868ced.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">导出</p>
<hr>
<h2 id="一个伪装成文本编辑器的浏览器"><a href="#一个伪装成文本编辑器的浏览器" class="headerlink" title="一个伪装成文本编辑器的浏览器"></a>一个伪装成文本编辑器的浏览器</h2><p>当我的一个朋友问我「Typora 有什么好写的？」时，我回答「Typora 是一个伪装成文本编辑器的浏览器」。是的，事实上如果你有一定的计算机基础，你可以找到许多有关于「Typora 其实是一个浏览器」的蛛丝马迹。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/13837bcdcded9ae406e8c4aac5f2d752.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">图片插入</p>
<p>在图片插入的选项中，Typora 用了「复制图片到 ./${filename}.assets 文件夹」的说法，而这其实是网页前端常用的 Javascript 字符串模板语法的风格。</p>
<p>再比如，Typora 将更遵循 GFM 标准的 Markdown 语法模式称为「严格模式 Strict Mode」，这一说法常见于 HTML 和 JavaScript 编程中。类似「源代码模式」的说法也是同理。</p>
<p>当然，最明显的一点是当你按下 <code>Shift + F12</code> 快捷键时，页面会弹出一个基于 Chrome 的开发者工具栏，也就是我们在浏览器中常说的「审查元素」。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/da8c9b305a222cb5fadb41c12da81a12.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>为了让文档更美观，我们可以为其加上 CSS style。我认为 Typora 对 CSS 的支持让它成为一众桌面笔记应用中最与众不同的一个。在 Typora 中 CSS 被称为「主题」，但其本质仍是 CSS 文件。你可以在 <code>文件 - 偏好设置 - 主题 - 打开主题文件夹</code> 看到这些 CSS 文件。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/7d3cfbc92721733e16ed63d72a48a572.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<p>除此以外，如果你有一定的 Web 编程基础，你当然也可以自己修改、新建适合你使用需求的 CSS 文件。我自己就写了一份名为 WeChat 的 CSS 文件，来符合我公众号特定的排版需求，例如正文是 15px，页边距是 8，小标题是 18px 等等。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/317ac1df25fcfc817c03f92d6086764e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>使用 Typora 的「主题」功能写公众号的一个好处是，只需要每次都套用同样的主题，我们就可以在保证每次排版规范都相同的同时，节省许多重复的工作。</p>
<hr>
<h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p><img src="https://cdn.sspai.com/2019/05/24/98a04c4f9129e0f018d15bc790b376c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>选择不同的主题可以使文档拥有不同的外观，但不会影响内容。Typora 自带了若干主题，你也可以在 <a href="http://theme.typora.io/" target="_blank" rel="noopener">官网</a> 下载更多的主题。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/efcf65ba993c4bb0b058d6eb8258df6f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<hr>
<h3 id="YAML-front-matter"><a href="#YAML-front-matter" class="headerlink" title="YAML front-matter"></a>YAML front-matter</h3><p>Typora 支持在文档头部加上基于 YAML 的 front-matter 信息，这一特性适用于把 Markdown 文档分类归档上传到用 Hexo 框架搭建的博客中。</p>
<p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013&#x2F;7&#x2F;13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure>


<p>参考文档：<a href="https://sspai.com/post/54912" target="_blank" rel="noopener">typora</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>md</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>js方法（一）</title>
    <url>/2020/07/23/js%E6%96%B9%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="获取服务器时间"><a href="#获取服务器时间" class="headerlink" title="获取服务器时间"></a>获取服务器时间</h3><a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、依赖jQuery</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getServerDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>($.ajax(&#123; <span class="attr">async</span>: <span class="literal">false</span> &#125;).getResponseHeader(<span class="string">"Date"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>、原生</span><br><span class="line">（同步）</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getServerDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    xhr = <span class="keyword">new</span> <span class="built_in">window</span>.XMLHttpRequest();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// ie</span></span><br><span class="line">    xhr = <span class="keyword">new</span> ActiveObject(<span class="string">"Microsoft"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  xhr.open(<span class="string">"GET"</span>, <span class="string">"/"</span>, <span class="literal">false</span>)<span class="comment">//false不可变</span></span><br><span class="line">  xhr.send(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">var</span> date = xhr.getResponseHeader(<span class="string">"Date"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(date);</span><br><span class="line">&#125;</span><br><span class="line">（异步）</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getServerDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    xhr = <span class="keyword">new</span> <span class="built_in">window</span>.XMLHttpRequest();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// ie</span></span><br><span class="line">    xhr = <span class="keyword">new</span> ActiveObject(<span class="string">"Microsoft"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  xhr.open(<span class="string">"GET"</span>, <span class="string">"/"</span>, <span class="literal">true</span>);</span><br><span class="line">  xhr.send(<span class="literal">null</span>);</span><br><span class="line">  xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> time, date;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">2</span>) &#123;</span><br><span class="line">      time = xhr.getResponseHeader(<span class="string">"Date"</span>);</span><br><span class="line">      date = <span class="keyword">new</span> <span class="built_in">Date</span>(time);</span><br><span class="line">      <span class="built_in">console</span>.log(date);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="userAgent"><a href="#userAgent" class="headerlink" title="userAgent"></a>userAgent</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">userAgent属性是一个只读的字符串，声明了浏览器用于 HTTP 请求的用户代理头的值。</span><br><span class="line"></span><br><span class="line">一般来讲，它是在 navigator.appCodeName 的值之后加上斜线和 navigator.appVersion 的值构成的。</span><br><span class="line"></span><br><span class="line">例如：Mozilla / <span class="number">4.0</span>(compatible; MSIE <span class="number">6.0</span>; Windows NT <span class="number">5.2</span>; SV1; .NET CLR <span class="number">1.1</span><span class="number">.4322</span>) 。</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;浏览器："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.appName + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">浏览器：Netscape</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;浏览器版本："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.appVersion + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">浏览器版本：<span class="number">5.0</span>(Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit / <span class="number">537.36</span>(KHTML, like Gecko) Chrome / <span class="number">77.0</span><span class="number">.3865</span><span class="number">.120</span> Safari / <span class="number">537.36</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;代码："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.appCodeName + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">代码：Mozilla</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;平台："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.platform + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">平台：Win32</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;Cookies 启用："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.cookieEnabled + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">Cookies 启用：<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;浏览器的用户代理报头："</span>)</span><br><span class="line"><span class="built_in">document</span>.write(navigator.userAgent + <span class="string">"&lt;/p&gt;"</span>)</span><br><span class="line">浏览器的用户代理报头：Mozilla / <span class="number">5.0</span>(Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit / <span class="number">537.36</span>(KHTML, like Gecko) Chrome / <span class="number">77.0</span><span class="number">.3865</span><span class="number">.120</span> Safari / <span class="number">537.36</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b_version = navigator.appVersion</span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">parseFloat</span>(b_version)</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"浏览器版本："</span> + version)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、通过判断浏览器的userAgent，用正则来判断是否是ios和Android客户端。代码如下：</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、检查是否是移动端（Mobile）、ipad、iphone、微信、QQ等：</span><br><span class="line"></span><br><span class="line">使用方法：</span><br><span class="line"></span><br><span class="line">检测浏览器语言：</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、判断iPhone | iPad | iPod | iOS | Android客户端：</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、判断pc还是移动端：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> u = navigator.userAgent;</span><br><span class="line"><span class="keyword">var</span> isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>; <span class="comment">//android终端</span></span><br><span class="line"><span class="keyword">var</span> isiOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>); <span class="comment">//ios终端</span></span><br></pre></td></tr></table></figure>

<h3 id="深克隆"><a href="#深克隆" class="headerlink" title="深克隆"></a>深克隆</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deepClone: function (obj) &#123;</span><br><span class="line">    var _obj &#x3D; JSON.stringify(obj),</span><br><span class="line">    objClone &#x3D; JSON.parse(_obj);</span><br><span class="line">    return objClone</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h3 id="获取url参数"><a href="#获取url参数" class="headerlink" title="获取url参数"></a>获取url参数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">getUrlParam = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> url = location.search;</span><br><span class="line">    <span class="keyword">var</span> theRequest = &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (url.indexOf(<span class="string">"?"</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> str = url.substr(<span class="number">1</span>);</span><br><span class="line">        strs = str.split(<span class="string">"&amp;"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line">            theRequest[strs[i].split(<span class="string">"="</span>)[<span class="number">0</span>]] = strs[i].split(<span class="string">"="</span>)[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> theRequest;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="encodeURI-和encodeURIComponent-decodeURI-和decodeURIComponent"><a href="#encodeURI-和encodeURIComponent-decodeURI-和decodeURIComponent" class="headerlink" title="encodeURI()和encodeURIComponent()  decodeURI()和decodeURIComponent()"></a>encodeURI()和encodeURIComponent()  decodeURI()和decodeURIComponent()</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其中encodeURI()主要用于整个URI(例如，http:&#x2F;&#x2F;www.jxbh.cn&#x2F;illegal value.htm)，而encode-URIComponent()主要用于对URI中的某一段(例如前面URI中的illegal value．htm)进行编码。它们的主要区别在于，encodeURI()不会对本身属于URI的特殊字符进行编码，例如冒号、正斜杠、问号和井字号；而encodeURIComponent()则会对它发现的任何非标准字符进行编码。来看下面的例子：</span><br><span class="line">var uri&#x3D;&quot;http:&#x2F;&#x2F;www.jxbh.cn&#x2F;illegal value.htm#start&quot;;</span><br><span class="line">&#x2F;&#x2F;”http: &#x2F;&#x2F;www.jxbh.cn&#x2F;illegal%20value .htm#s tart”</span><br><span class="line">alert(encodeURI (uri)):</span><br><span class="line">&#x2F;&#x2F;”http% 3A%2F%2Fwww.jxbh.cn%2 Fillegal%2 0value. htm%23 start”</span><br><span class="line">alert( encodaURIComponent (uri));</span><br><span class="line">使用encodeURI()编码后的结果是除了空格之外的其他字符都原封不动，只有空格被替换成了%20。而encodeURIComponent()方法则会使用对应的编码替换所有非字母数字字符。这也正是可以对整个URI使用encodeURI()，而只能对附加在现有URI后面的字符串使用encodeURIComponent()的原因所在。一般来说,我们使用encodeURIComponent()方法的时候要比使用encodeURI()更多,因为在实践中更常见的是对查询字符串参数而不是对基础URL进行编码.</span><br><span class="line">经我的观测，很多网站的cookie在进行编码的时候，是encodeURIComponent格式的，所以应该使用decodeURIComponent()进行解码</span><br></pre></td></tr></table></figure>





<h3 id="True与False"><a href="#True与False" class="headerlink" title="True与False"></a>True与False</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">以下是Truthy (真值)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> (&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> ([])</span><br><span class="line"><span class="keyword">if</span> (<span class="number">42</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"foo"</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line"><span class="keyword">if</span> (<span class="number">-42</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">3.14</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">-3.14</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">Infinity</span>)</span><br><span class="line"><span class="keyword">if</span> (-<span class="literal">Infinity</span>)</span><br><span class="line">  </span><br><span class="line">以下是falsy  值</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">undefined</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0n</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NaN</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="string">''</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="string">``</span>)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.all)</span><br></pre></td></tr></table></figure>

<h3 id="ios下时间格式问题"><a href="#ios下时间格式问题" class="headerlink" title="ios下时间格式问题"></a>ios下时间格式问题</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">time = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2016-08-09 00:00:00'</span>).getTime（） <span class="comment">//拿到的值是NaN</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2016-08-09'</span>).getTime（） <span class="comment">//正常</span></span><br><span class="line">原因：ios下不支持<span class="string">'-'</span>格式的时间可以支持<span class="string">'/'</span></span><br><span class="line">解决方案：改成<span class="string">'yy/mm/dd'</span></span><br></pre></td></tr></table></figure>



<h3 id="打印周几"><a href="#打印周几" class="headerlink" title="打印周几"></a>打印周几</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> week=[<span class="string">'星期日'</span>,<span class="string">'星期一'</span>,<span class="string">'星期二'</span>,<span class="string">'星期三'</span>,<span class="string">'星期四'</span>,<span class="string">'星期五'</span>,<span class="string">'星期六'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">document</span>.write(week[date.getDay()])</span><br></pre></td></tr></table></figure>



<h3 id="当前时间加半个小时"><a href="#当前时间加半个小时" class="headerlink" title="当前时间加半个小时"></a>当前时间加半个小时</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">当前时间加上半个小时一个小时等</span><br><span class="line">getHourDate: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    date.setTime(date.getTime() + <span class="number">0.5</span> * <span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">var</span> FullYear = date.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> dd = date.getDate();</span><br><span class="line">    <span class="keyword">var</span> hh = date.getHours();</span><br><span class="line">    <span class="keyword">var</span> mm = date.getMinutes();</span><br><span class="line">    <span class="keyword">return</span> FullYear + <span class="string">"-"</span> + month + <span class="string">"-"</span> + dd + <span class="string">" "</span> + hh + <span class="string">":"</span> + mm + <span class="string">":00"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="当前时间与目标时间倒计时到达"><a href="#当前时间与目标时间倒计时到达" class="headerlink" title="当前时间与目标时间倒计时到达"></a>当前时间与目标时间倒计时到达</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">countTime: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//获取当前时间  </span></span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> now = date.getTime();</span><br><span class="line">    <span class="comment">//设置截止时间  </span></span><br><span class="line">    <span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.endDate.replace(<span class="regexp">/-/g</span>, <span class="string">'/'</span>));</span><br><span class="line">    <span class="keyword">var</span> end = endDate.getTime();</span><br><span class="line">    <span class="comment">//时间差</span></span><br><span class="line">    <span class="keyword">var</span> leftTime = <span class="keyword">this</span>.leftTime = end - now;</span><br><span class="line">    <span class="comment">//定义变量 d,h,m,s保存倒计时的时间  </span></span><br><span class="line">    <span class="keyword">var</span> d, h, m, s;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.leftTime &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        d = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</span><br><span class="line">        h = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);</span><br><span class="line">        m = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">        s = <span class="built_in">Math</span>.floor(leftTime / <span class="number">1000</span> % <span class="number">60</span>);</span><br><span class="line">        <span class="keyword">this</span>.leftStr = d + <span class="string">"天"</span> + h + <span class="string">"时"</span> + m + <span class="string">"分"</span> + s + <span class="string">"秒"</span></span><br><span class="line">        setTimeout(<span class="keyword">this</span>.countTime, <span class="number">1000</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.isCanPay = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h3 id="将当前时间转化为-2018-12-12-12-00-00"><a href="#将当前时间转化为-2018-12-12-12-00-00" class="headerlink" title="将当前时间转化为 2018-12-12 12:00:00"></a>将当前时间转化为 2018-12-12 12:00:00</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> formatDateTime = <span class="function"><span class="keyword">function</span> (<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> y = date.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> m = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">    m = m &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + m) : m;</span><br><span class="line">    <span class="keyword">var</span> d = date.getDate();</span><br><span class="line">    d = d &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + d) : d;</span><br><span class="line">    <span class="keyword">var</span> h = date.getHours();</span><br><span class="line">    h = h &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + h) : h;</span><br><span class="line">    <span class="keyword">var</span> minute = date.getMinutes();</span><br><span class="line">    minute = minute &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + minute) : minute;</span><br><span class="line">    <span class="keyword">var</span> second = date.getSeconds();</span><br><span class="line">    second = second &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + second) : second;</span><br><span class="line">    <span class="keyword">return</span> y + <span class="string">'-'</span> + m + <span class="string">'-'</span> + d + <span class="string">' '</span> + h + <span class="string">':'</span> + minute + <span class="string">':'</span> + second;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<h3 id="判断当前日期是否离开"><a href="#判断当前日期是否离开" class="headerlink" title="判断当前日期是否离开"></a>判断当前日期是否<strong>离开</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">departTimeHandle: <span class="function"><span class="keyword">function</span> (<span class="params">departTime</span>) </span>&#123;</span><br><span class="line">    diff = <span class="keyword">new</span> <span class="built_in">Date</span>(departTime.replace(<span class="regexp">/\-/g</span>, <span class="string">"/"</span>)).getTime() - <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">if</span> (diff &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        alert(<span class="string">'未出发'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">'已离开'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> diff;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h3 id="计算两个时间的分钟差"><a href="#计算两个时间的分钟差" class="headerlink" title="计算两个时间的分钟差"></a>计算两个时间的分钟差</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">TimeDifference</span>(<span class="params">time1, time2</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//截取字符串，得到日期部分"2009-12-02",用split把字符串分隔成数组</span></span><br><span class="line">    <span class="keyword">var</span> begin1 = time1.substr(<span class="number">0</span>, <span class="number">10</span>).split(<span class="string">"-"</span>);</span><br><span class="line">    <span class="keyword">var</span> end1 = time2.substr(<span class="number">0</span>, <span class="number">10</span>).split(<span class="string">"-"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将拆分的数组重新组合，并实例成化新的日期对象</span></span><br><span class="line">    <span class="keyword">var</span> date1 = <span class="keyword">new</span> <span class="built_in">Date</span>(begin1[<span class="number">1</span>] + - + begin1[<span class="number">2</span>] + - + begin1[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">var</span> date2 = <span class="keyword">new</span> <span class="built_in">Date</span>(end1[<span class="number">1</span>] + - + end1[<span class="number">2</span>] + - + end1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到两个日期之间的差值m，以分钟为单位</span></span><br><span class="line">    <span class="comment">//Math.abs(date2-date1)计算出以毫秒为单位的差值</span></span><br><span class="line">    <span class="comment">//Math.abs(date2-date1)/1000得到以秒为单位的差值</span></span><br><span class="line">    <span class="comment">//Math.abs(date2-date1)/1000/60得到以分钟为单位的差值</span></span><br><span class="line">    <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.abs(date2 - date1) / <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//小时数和分钟数相加得到总的分钟数</span></span><br><span class="line">    <span class="comment">//time1.substr(11,2)截取字符串得到时间的小时数</span></span><br><span class="line">    <span class="comment">//parseInt(time1.substr(11,2))*60把小时数转化成为分钟</span></span><br><span class="line">    <span class="keyword">var</span> min1 = <span class="built_in">parseInt</span>(time1.substr(<span class="number">11</span>, <span class="number">2</span>)) * <span class="number">60</span> + <span class="built_in">parseInt</span>(time1.substr(<span class="number">14</span>, <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">var</span> min2 = <span class="built_in">parseInt</span>(time2.substr(<span class="number">11</span>, <span class="number">2</span>)) * <span class="number">60</span> + <span class="built_in">parseInt</span>(time2.substr(<span class="number">14</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//两个分钟数相减得到时间部分的差值，以分钟为单位</span></span><br><span class="line">    <span class="keyword">var</span> n = min2 - min1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将日期和时间两个部分计算出来的差值相加，即得到两个时间相减后的分钟数</span></span><br><span class="line">    <span class="keyword">var</span> minutes = m + n;</span><br><span class="line">    <span class="built_in">document</span>.writeln(minutes);</span><br><span class="line">&#125;</span><br><span class="line">TimeDifference(<span class="string">"2019-08-12 15:21:00"</span>, <span class="string">"2019-08-21 10:18:34"</span>);</span><br></pre></td></tr></table></figure>



<h3 id="距离当前日期多少天后的日期"><a href="#距离当前日期多少天后的日期" class="headerlink" title="距离当前日期多少天后的日期"></a>距离当前日期多少天后的日期</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetDateStr</span>(<span class="params">AddDayCount</span>) </span>&#123;   </span><br><span class="line">      <span class="keyword">var</span> dd = <span class="keyword">new</span> <span class="built_in">Date</span>();  </span><br><span class="line">      dd.setDate(dd.getDate()+AddDayCount);<span class="comment">//获取AddDayCount天后的日期</span></span><br><span class="line">      <span class="keyword">var</span> y = dd.getFullYear();   </span><br><span class="line">      <span class="keyword">var</span> m = (dd.getMonth()+<span class="number">1</span>)&lt;<span class="number">10</span>?<span class="string">"0"</span>+(dd.getMonth()+<span class="number">1</span>):(dd.getMonth()+<span class="number">1</span>);<span class="comment">//获取当前月份的日期，不足10补0</span></span><br><span class="line">      <span class="keyword">var</span> d = dd.getDate()&lt;<span class="number">10</span>?<span class="string">"0"</span>+dd.getDate():dd.getDate();<span class="comment">//获取当前几号，不足10补0</span></span><br><span class="line">      <span class="keyword">return</span> y+<span class="string">"-"</span>+m+<span class="string">"-"</span>+d;   </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<h3 id="Date-1556121600000-’和‘-Date-1528953453022-0800-’日期格式处理"><a href="#Date-1556121600000-’和‘-Date-1528953453022-0800-’日期格式处理" class="headerlink" title="/Date(1556121600000)/’和‘/Date(1528953453022+0800)/’日期格式处理"></a>/Date(1556121600000)/’和‘/Date(1528953453022+0800)/’日期格式处理</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">方法一：</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handelTime</span>(<span class="params">strTime</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">parseInt</span>(strTime.replace(<span class="string">"/Date("</span>, <span class="string">""</span>).replace(<span class="string">")/"</span>, <span class="string">""</span>), <span class="number">10</span>));</span><br><span class="line">       <span class="keyword">return</span> obj.toLocaleDateString();</span><br><span class="line">&#125;</span><br><span class="line">handelTime(<span class="string">'\/Date(1556121600000)\/'</span>)</span><br><span class="line">方法二：</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDate</span>(<span class="params">dt</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> year = dt.getFullYear(); </span><br><span class="line">  <span class="keyword">var</span> month = dt.getMonth() + <span class="number">1</span>; </span><br><span class="line">  <span class="keyword">var</span> date = dt.getDate(); </span><br><span class="line">  <span class="keyword">var</span> hour = dt.getHours(); </span><br><span class="line">  <span class="keyword">var</span> minute = dt.getMinutes(); </span><br><span class="line">  <span class="keyword">var</span> second = dt.getSeconds(); </span><br><span class="line">  <span class="keyword">return</span> year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + date + <span class="string">" "</span> + hour + <span class="string">":"</span> + minute + <span class="string">":"</span> + second; </span><br><span class="line">&#125; </span><br><span class="line">方法三</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Test</span>(<span class="params">time</span>) </span>&#123; </span><br><span class="line">	<span class="keyword">var</span> t= time.slice(<span class="number">6</span>, <span class="number">19</span>) </span><br><span class="line">	<span class="keyword">var</span> NewDtime = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">parseInt</span>(t)); </span><br><span class="line">	<span class="keyword">return</span> formatDate(NewDtime); </span><br><span class="line">&#125; </span><br><span class="line">Test(<span class="string">"/Date(1528953453022+0800)/"</span>)</span><br></pre></td></tr></table></figure>



<h3 id="遍历值键对"><a href="#遍历值键对" class="headerlink" title="遍历值键对"></a>遍历值键对</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">test: &#123;</span><br><span class="line">                <span class="string">"阿巴嘎旗"</span>: &#123;</span><br><span class="line">                    <span class="string">"hot"</span>: <span class="number">10851</span>,</span><br><span class="line">                    <span class="string">"priority"</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="string">"match"</span>: <span class="string">"abgq|abagaqi"</span>,</span><br><span class="line">                    <span class="string">"stationCode"</span>: <span class="string">"abagaqi"</span>,</span><br><span class="line">                    <span class="string">"cityId"</span>: <span class="number">269</span>,</span><br><span class="line">                    <span class="string">"cityName"</span>: <span class="string">"锡林郭勒盟"</span>,</span><br><span class="line">                    <span class="string">"provinceId"</span>: <span class="number">19</span>,</span><br><span class="line">                    <span class="string">"provinceName"</span>: <span class="string">"内蒙古"</span>,</span><br><span class="line">                    <span class="string">"longitude"</span>: <span class="string">"0.000000"</span>,</span><br><span class="line">                    <span class="string">"latitude"</span>: <span class="string">"0.000000"</span>,</span><br><span class="line">                    <span class="string">"siteCode"</span>: <span class="string">""</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"阿尔山"</span>: &#123;</span><br><span class="line">                    <span class="string">"hot"</span>: <span class="number">311502</span>,</span><br><span class="line">                    <span class="string">"priority"</span>: <span class="number">10</span>,</span><br><span class="line">                    <span class="string">"match"</span>: <span class="string">"aes|aershan"</span>,</span><br><span class="line">                    <span class="string">"stationCode"</span>: <span class="string">"aershan"</span>,</span><br><span class="line">                    <span class="string">"cityId"</span>: <span class="number">270</span>,</span><br><span class="line">                    <span class="string">"cityName"</span>: <span class="string">"兴安盟"</span>,</span><br><span class="line">                    <span class="string">"provinceId"</span>: <span class="number">19</span>,</span><br><span class="line">                    <span class="string">"provinceName"</span>: <span class="string">"内蒙古"</span>,</span><br><span class="line">                    <span class="string">"longitude"</span>: <span class="string">"119.954934"</span>,</span><br><span class="line">                    <span class="string">"latitude"</span>: <span class="string">"47.177865"</span>,</span><br><span class="line">                    <span class="string">"siteCode"</span>: <span class="string">""</span></span><br><span class="line">                &#125;,</span><br><span class="line">&#125;</span><br><span class="line">遍历方法：</span><br><span class="line"><span class="keyword">var</span> allcities = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> test) &#123;</span><br><span class="line">    <span class="keyword">var</span> city = [];</span><br><span class="line">    city.push(test[prop].provinceId, prop, <span class="string">'0'</span>, test[prop].match, test[prop].stationCode);</span><br><span class="line">    allcities.push(city);</span><br><span class="line">    <span class="comment">// console.log(test[prop]);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">判断对象是否为空</span><br><span class="line">evtValue = &#123;&#125;</span><br><span class="line"><span class="built_in">JSON</span>.stringify(evtValue) == <span class="string">'&#123;&#125;'</span></span><br><span class="line"><span class="built_in">Object</span>.keys(evtValue).length == <span class="number">0</span></span><br><span class="line">取对象的属性和值</span><br><span class="line"><span class="keyword">var</span> obj = &#123; <span class="string">'id'</span>: <span class="number">1</span>, <span class="string">'name'</span>: <span class="string">'叶落森'</span>, <span class="string">'sex'</span>: <span class="string">'女'</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="built_in">Object</span>.keys(obj); --可以获取key值</span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="built_in">Object</span>.values(obj); --可以获取value值</span><br><span class="line"><span class="built_in">console</span>.log(arr1);  <span class="comment">// ['id','name','sex']</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2);  <span class="comment">//  ['1','叶落森','女']</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2[<span class="number">1</span>]);  <span class="comment">// 叶落森</span></span><br></pre></td></tr></table></figure>



<h3 id="window-location"><a href="#window-location" class="headerlink" title="window.location"></a>window.location</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一、window.location具有以下属性：</span><br><span class="line"></span><br><span class="line">1、window.location.href：取得当前地址栏中的完整URL，可以通过赋值改变当前地址栏中的URL；</span><br><span class="line"></span><br><span class="line">2、window.location.search 取得当前URL的参数部分，即“?”后面的部分（包括问号），可以通过赋值改变URL的参数部分；</span><br><span class="line"></span><br><span class="line">3、window.location.host：取得当前URL中的主机信息，包括端口号，可以通过赋值改变主机信息；</span><br><span class="line"></span><br><span class="line">4、window.location.port：取得当前URL中的端口号，可以通过赋值改变端口号；</span><br><span class="line"></span><br><span class="line">5、window.location.pathname：取得当前URL中的路径信息，即域名与参数之间的部分，可以通过赋值改变当前URL的路径；</span><br><span class="line"></span><br><span class="line">6、window.location.protocol：取得当前URL的协议部分，比如http:，https:等，可以通过赋值改变URL的协议部分；</span><br><span class="line"></span><br><span class="line">设置有以下方法：</span><br><span class="line"></span><br><span class="line">1、window.location.replace(url)：用传入的URL字符串替代当前的URL，该方法会将历史记录中的URL一并替换掉，也就是说，这个方法会覆盖之前的历史记录；</span><br><span class="line"></span><br><span class="line">2、window.location.reload()：重新加载当前URL，相当于刷新；</span><br><span class="line"></span><br><span class="line">3、window.location.assign(url)：加载传入的URL，该方法不会覆盖之前的历史记录；</span><br><span class="line"></span><br><span class="line">if(&quot;https:&quot; &#x3D;&#x3D; document.location.protocol </span><br><span class="line">     alert(&quot;HTTPS&quot;)</span><br><span class="line"> );</span><br><span class="line">document.location.protocol</span><br><span class="line">可设置或返回当前 URL 的协议</span><br></pre></td></tr></table></figure>



<h3 id="判断机型–iphoneX"><a href="#判断机型–iphoneX" class="headerlink" title="判断机型–iphoneX"></a>判断机型–iphoneX</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isIphoneX</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/iphone/gi</span>.test(navigator.userAgent) &amp;&amp; (screen.height == <span class="number">812</span> &amp;&amp; screen.width == <span class="number">375</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="js实现根据身份证号码识别-性别-年龄-生日"><a href="#js实现根据身份证号码识别-性别-年龄-生日" class="headerlink" title="js实现根据身份证号码识别 性别 年龄 生日"></a>js实现根据身份证号码识别 性别 年龄 生日</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">discriCard</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//获取输入身份证号码 </span></span><br><span class="line">    <span class="keyword">var</span> UUserCard = <span class="string">""</span>;</span><br><span class="line">    <span class="comment">//获取出生日期 </span></span><br><span class="line">    UUserCard.substring(<span class="number">6</span>, <span class="number">10</span>) + <span class="string">"-"</span> + UUserCard.substring(<span class="number">10</span>, <span class="number">12</span>) + <span class="string">"-"</span> + UUserCard.substring(<span class="number">12</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="comment">//获取性别 </span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">parseInt</span>(UUserCard.substr(<span class="number">16</span>, <span class="number">1</span>)) % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        alert(<span class="string">"男"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">"女"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取年龄 </span></span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> month = myDate.getMonth() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> day = myDate.getDate();</span><br><span class="line">    <span class="keyword">var</span> age = myDate.getFullYear() - UUserCard.substring(<span class="number">6</span>, <span class="number">10</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (UUserCard.substring(<span class="number">10</span>, <span class="number">12</span>) &lt; month || UUserCard.substring(<span class="number">10</span>, <span class="number">12</span>) == month &amp;&amp; UUserCard.substring(<span class="number">12</span>, <span class="number">14</span>) &lt;= day) &#123;</span><br><span class="line">        age++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//年龄 age </span></span><br><span class="line">    alert(age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="验证身份证有木有18周岁"><a href="#验证身份证有木有18周岁" class="headerlink" title="验证身份证有木有18周岁"></a>验证身份证有木有18周岁</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">var</span> strBirthday = num.substr(<span class="number">6</span>, <span class="number">4</span>) + <span class="string">"/"</span> + num.substr(<span class="number">10</span>, <span class="number">2</span>) + <span class="string">"/"</span> + num.substr(<span class="number">12</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">var</span> birthDate = <span class="keyword">new</span> <span class="built_in">Date</span>(strBirthday);</span><br><span class="line"><span class="keyword">var</span> nowDateTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> age = nowDateTime.getFullYear() - birthDate.getFullYear();</span><br><span class="line"><span class="keyword">if</span> (nowDateTime.getMonth() &lt; birthDate.getMonth() || (nowDateTime.getMonth() == birthDate.getMonth() &amp;&amp; nowDateTime.getDate() &lt; birthDate.getDate())) &#123;</span><br><span class="line">    age--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="img标签的onerror事件"><a href="#img标签的onerror事件" class="headerlink" title="img标签的onerror事件"></a>img标签的onerror事件</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>循环里的图片直接引用原生事件</span><br><span class="line">&lt; div v-<span class="keyword">for</span>= <span class="string">"(item,index) in imgSrcList"</span> &gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; item.test &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;img :src="'/i</span>travel/itravel/assets/images/common/<span class="string">'+item.test+'</span>.png<span class="string">'" onerror="javascript:this.src='</span>/itravel/itravel/assets/images/ticket/child-desc.png<span class="string">';" /&gt;</span></span><br><span class="line"><span class="string">&lt;div/ &gt;</span></span><br><span class="line"><span class="string">2.只有一个路径</span></span><br><span class="line"><span class="string">    &lt;div class="pic" &gt;</span></span><br><span class="line"><span class="string">        &lt;img v-bind: src="item.productInfo.images[0].url" v-on: error="imgError(item)" /&gt;</span></span><br><span class="line"><span class="string">    &lt;div/ &gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">imgError: function (item) &#123;</span></span><br><span class="line"><span class="string">    item.productInfo.images[0].url = '</span>http:<span class="comment">//t.cn/RmxJlMa'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>服务器时间</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>toolVsCode</title>
    <url>/2020/07/15/toolVsCode/</url>
    <content><![CDATA[<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><blockquote>
<p>官网下载：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p>
</blockquote>
<a id="more"></a>

<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><blockquote>
<p>Ctrl + / （单行注释）</p>
<p>Shift + Alt + A （多行注释） </p>
<p>若要取消单行或多行注释在按一次该快捷键即可</p>
<p>Ctrl + Shift + Enter （上方插入一行，鼠标光标在当前行的任意位置都可以直接换行到上一行）</p>
<p>Ctrl + Enter （下方插入一行，鼠标光标在当前行的任意位置都可以直接换行到下一行）</p>
<p>Alt + Shift + F （格式化代码，不需要全选中代码，直接格式化即可）</p>
<p>Ctrl + Shift + F （查找文件）</p>
<p>点击设置选择 keyboard shortcuts，右边会弹出所有快捷键目录</p>
</blockquote>
<h4 id="code改成中文"><a href="#code改成中文" class="headerlink" title="code改成中文"></a>code改成中文</h4><blockquote>
<p>1）打开vscode工具；</p>
<p>2）使用快捷键组合【Ctrl+Shift+p】，在搜索框中输入“configure display language”，点击确定后；</p>
<p>3）修改locale.json文件下的属性“locale”为“zh-CN”;</p>
<p>4）重启vscode工具；</p>
<p>或者 汉化中文（插件）</p>
<p>点击插件按钮搜索 Chinese, 在弹出的选项中选择第一个中文简体</p>
<p>然后右边会弹出如下图安装界面，接着点击 Install 安装</p>
</blockquote>
<h4 id="自动保存设置"><a href="#自动保存设置" class="headerlink" title="自动保存设置"></a>自动保存设置</h4><blockquote>
<p>File（文件）- Preferences（首选项）- Setting （设置）然后弹出下面界面，选择User（一般会默认选中该选项）， </p>
<p>接着如下图选择afterdelay选项即可，下面有个数字1000表示1秒，这个可自行设置，表示多少秒以后自动保存</p>
</blockquote>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>tool</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>tool</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>vantweapp</title>
    <url>/2020/07/22/vantweapp/</url>
    <content><![CDATA[<h3 id="小程序插件–vantWeapp"><a href="#小程序插件–vantWeapp" class="headerlink" title="小程序插件–vantWeapp"></a>小程序插件–vantWeapp</h3><blockquote>
<ol>
<li>新建个项目</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>找到项目文件夹 npm init 初始化一个叫package.json的文件一路回车即可</li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>继续执行命令安装 Vant Weapp<br><code>npm i @vant/weapp -S --production</code> </li>
</ol>
</blockquote>
<blockquote>
<ol start="4">
<li>点击 开发者菜单里面的工具 &gt;构建npm 如下图</li>
</ol>
</blockquote>
<a id="more"></a>

<p><img src="http://upload-images.jianshu.io/upload_images/7211385-9510055e041611cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/939/format/webp" alt="img"></p>
<blockquote>
<ol start="5">
<li>还是开发者工具里面的详情 使用npm模块勾选上</li>
</ol>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/7211385-d50190f6a674c31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/684/format/webp" alt="img"></p>
<blockquote>
<ol start="6">
<li>在引用的页面json或者app.json里添加引入的组件名字</li>
</ol>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;usingComponents&quot;: &#123;</span><br><span class="line">  &quot;van-button&quot;: &quot;@vant&#x2F;weapp&#x2F;button&#x2F;index&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="http://upload-images.jianshu.io/upload_images/7211385-6163f82f17c59fcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/984/format/webp" alt="img"></p>
<blockquote>
<ol start="7">
<li>最后就是在你的页面用使用了 如下图：</li>
</ol>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/7211385-d2fbd97f8301d40d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p>
<p><a href="https://www.jianshu.com/p/a63f21206b91" target="_blank" rel="noopener">参考链接</a></p>
<p><a href="https://youzan.github.io/vant-weapp/#/intro" target="_blank" rel="noopener">官网地址</a></p>
]]></content>
      <categories>
        <category>plugins</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>plugins</tag>
      </tags>
  </entry>
  <entry>
    <title>jsbridge</title>
    <url>/2020/07/22/jsbridge/</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>h5 与原生 app 的交互，本质上说，就是两种调用：</p>
<ol>
<li>app 调用 h5 的代码</li>
<li>h5 调用 app 的代码</li>
</ol>
<a id="more"></a>

<p><strong>1. app 调用 h5 的代码</strong></p>
<p>因为 app 是宿主，可以直接访问 h5，所以这种调用比较简单，就是在 h5 中曝露一些全局对象（包括方法），然后在原生 app 中调用这些对</p>
<p><img src="https://img2018.cnblogs.com/blog/1661048/201908/1661048-20190805104711293-168785251.jpg" alt="img"></p>
<p><strong>javascript</strong></p>
<p><code>window.sdk = {</code></p>
<p><code>``double = value =&gt; value * 2,</code></p>
<p><code>``triple = value =&gt; value * 3,</code></p>
<p><code>};</code></p>
<p><strong>android：</strong></p>
<p><code>webview.evaluateJavascript(``&#39;window.sdk.double(10)&#39;``, ``new</code> <code>ValueCallback&lt;String&gt;() {</code></p>
<p><code>``@Override</code></p>
<p><code>``public</code> <code>void onReceiveValue(String s) {</code></p>
<p><code>``// 20</code></p>
<p><code>``}</code></p>
<p><code>});</code></p>
<p><strong>ios：</strong></p>
<p><code>NSString *func = @``&quot;window.sdk.double(10)&quot;``;</code></p>
<p><code>NSString *str = [webview stringByEvaluatingJavaScriptFromString:func]; ``// 20</code></p>
<p><strong>2. h5 调用 app 的代码</strong></p>
<p>因为 h5 不能直接访问宿主 app，所以这种调用就相对复杂一点。</p>
<p>这种调用常用有两种方式：</p>
<ol>
<li>由app向h5注入一个全局js对象，然后在h5直接访问这个对象</li>
<li>由h5发起一个自定义协议请求，app拦截这个请求后，再由app调用 h5 中的回调函数</li>
</ol>
<p><strong>2.1 由 app 向 h5 注入一个全局 js 对象</strong></p>
<p>这种方式沟通机制简单，比较好理解，并且对于 h5 来说，没有新的东西，所以是比较推荐的一种方式。但这种方式可能存在安全隐患，详细查看 你不知道的 Android WebView 使用漏洞。</p>
<p><img src="https://img2018.cnblogs.com/blog/1661048/201908/1661048-20190805105140875-2098346635.jpg" alt="img"></p>
<p><strong>android</strong></p>
<p><code>webview.addJavascriptInterface(``new</code> <code>Object() {</code></p>
<p><code>``@JavascriptInterface</code></p>
<p><code>``public</code> <code>int double(value) {</code></p>
<p><code>``return</code> <code>value * 2;</code></p>
<p><code>``}</code></p>
<p><code></code> </p>
<p><code>``@JavascriptInterface</code></p>
<p><code>``public</code> <code>int triple(value) {</code></p>
<p><code>``return</code> <code>value * 3;</code></p>
<p><code>``}</code></p>
<p><code>}, ``&quot;appSdk&quot;``);</code></p>
<hr>
<p><strong>ios</strong></p>
<p><code>NSString *scripts = @``&quot;window.appSdk = {double: value =&gt; value * 2, triple: value =&gt; value * 3}&quot;``;</code></p>
<p><code>[webview stringByEvaluatingJavaScriptFromString:scripts];</code></p>
<p><strong>javascript</strong></p>
<p><strong>window.appSdk.double(10); // 20</strong></p>
<hr>
<h3 id="JS-Bridge"><a href="#JS-Bridge" class="headerlink" title="JS Bridge"></a>JS Bridge</h3><h4 id="什么是JS-Bridge"><a href="#什么是JS-Bridge" class="headerlink" title="什么是JS Bridge"></a>什么是JS Bridge</h4><p>在移动开发中为了加快开发进度(0.0)很多页面会用H5来开发，这样一来可以快速完成节约，二来APP内嵌WebView可以较少APP更新频率。因此，成本现在大多数公司的首选，但是部分功能JavaScript的权限受到严格限制，比如拍照，读写权限，获取GPS等等，这些native功能，这时候我们需要去委托原生去实现，原生实现后再告知js。这个时候就需要一个中间桥梁，于是就有了<strong>WebViewJavascriptBridge</strong>，简称 <strong>JS bridge</strong>。</p>
<h4 id="重点叙述在vue中如何调用"><a href="#重点叙述在vue中如何调用" class="headerlink" title="重点叙述在vue中如何调用"></a>重点叙述在vue中如何调用</h4><ul>
<li>创建 src/config/bridge.js 文件，用于封装 WebViewJavascriptBridge</li>
<li>将以下代码拷贝到 bridge.js 文件中</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> u = navigator.userAgent;</span><br><span class="line"><span class="built_in">window</span>.isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>; <span class="comment">//android终端 </span></span><br><span class="line"><span class="built_in">window</span>.isIOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>); <span class="comment">//ios终端 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setupWebViewJavascriptBridge</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.WebViewJavascriptBridge) &#123;</span><br><span class="line">    <span class="keyword">return</span> callback(WebViewJavascriptBridge);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(</span><br><span class="line">      <span class="string">'WebViewJavascriptBridgeReady'</span>,</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        callback(WebViewJavascriptBridge)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="literal">false</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.isIOS) &#123;</span><br><span class="line">    <span class="comment">// old ios method</span></span><br><span class="line">    <span class="comment">//setTimeout(function () &#123;</span></span><br><span class="line">    <span class="comment">//    if (window.WVJBCallbacks) &#123;</span></span><br><span class="line">    <span class="comment">//        return window.WVJBCallbacks.push(callback);</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//&#125;, 500)</span></span><br><span class="line">    <span class="comment">//window.WVJBCallbacks = [callback];</span></span><br><span class="line">    <span class="comment">//var WVJBIframe = document.createElement('iframe');</span></span><br><span class="line">    <span class="comment">//WVJBIframe.style.display = 'none';</span></span><br><span class="line">    <span class="comment">//WVJBIframe.src = 'wvjbscheme://__BRIDGE_LOADED__';</span></span><br><span class="line">    <span class="comment">//document.documentElement.appendChild(WVJBIframe);</span></span><br><span class="line">    <span class="comment">//setTimeout(function () &#123;</span></span><br><span class="line">    <span class="comment">//    document.documentElement.removeChild(WVJBIframe)</span></span><br><span class="line">    <span class="comment">//&#125;, 0)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// new ios method</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.WKWebViewJavascriptBridge) &#123; <span class="keyword">return</span> callback(WKWebViewJavascriptBridge); &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.WKWVJBCallbacks) &#123; <span class="keyword">return</span> <span class="built_in">window</span>.WKWVJBCallbacks.push(callback); &#125;</span><br><span class="line">    <span class="built_in">window</span>.WKWVJBCallbacks = [callback];</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.iOS_Native_InjectJavascript.postMessage(<span class="literal">null</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">window</span>.isIOS) &#123;</span><br><span class="line">    setupWebViewJavascriptBridge(<span class="function"><span class="keyword">function</span> (<span class="params">bridge</span>) </span>&#123;</span><br><span class="line">      bridge.init(<span class="function"><span class="keyword">function</span> (<span class="params">message, responseCallback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">        responseCallback(data);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  callhandler(name, data, callback) &#123;</span><br><span class="line">    setupWebViewJavascriptBridge(<span class="function"><span class="keyword">function</span> (<span class="params">bridge</span>) </span>&#123;</span><br><span class="line">      bridge.callHandler(name, data, callback)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  registerhandler(name, callback) &#123;</span><br><span class="line">    setupWebViewJavascriptBridge(<span class="function"><span class="keyword">function</span> (<span class="params">bridge</span>) </span>&#123;</span><br><span class="line">      bridge.registerHandler(name, <span class="function"><span class="keyword">function</span> (<span class="params">data, responseCallback</span>) </span>&#123;</span><br><span class="line">        callback(data, responseCallback)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 main.js 中引入该文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Bridge from &#39;.&#x2F;config&#x2F;bridge.js&#39;</span><br><span class="line">Vue.prototype.$bridge &#x3D; Bridge</span><br></pre></td></tr></table></figure>

<p>在需要调用客户端方法的组件中（ObjC Echo是VUE端调用APP端的方法名）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; params是向app端传的参数</span><br><span class="line">&#x2F;&#x2F; iOS端</span><br><span class="line">this.$bridge.callhandler(&#39;ObjC Echo&#39;, params, (data) &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F; 处理返回数据</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; Android端</span><br><span class="line">JSAndroid.requestPaySupportWithPayWay(params);</span><br></pre></td></tr></table></figure>

<p>当app端需要调用 js 函数时,在mounted钩子中事先注册约定好的函数即可（JS Echo是APP端调用VUE端方法名称，博主没用过）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; iOS端</span><br><span class="line">this.$bridge.registerhandler(&#39;JS Echo&#39;, (data, responseCallback) &#x3D;&gt; &#123;</span><br><span class="line">  alert(&#39;JS Echo called with:&#39;, data)</span><br><span class="line">  responseCallback(data)</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; Android端</span><br><span class="line">window[&#39;JS Echo&#39;] &#x3D; (data, responseCallback) &#x3D;&gt; &#123;</span><br><span class="line">   alert(&#39;JS Echo called with:&#39;, data)</span><br><span class="line">   responseCallback(data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="html中如何使用封装"><a href="#html中如何使用封装" class="headerlink" title="html中如何使用封装"></a>html中如何使用封装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var u &#x3D; navigator.userAgent;</span><br><span class="line">window.isAndroid &#x3D; u.indexOf(&#39;Android&#39;) &gt; -1 || u.indexOf(&#39;Adr&#39;) &gt; -1; &#x2F;&#x2F;android终端 </span><br><span class="line">window.isIOS &#x3D; !!u.match(&#x2F;\(i[^;]+;( U;)? CPU.+Mac OS X&#x2F;); &#x2F;&#x2F;ios终端 </span><br><span class="line">window.jsbridge &#x3D; function (callback) &#123;</span><br><span class="line">    if (window.WebViewJavascriptBridge) &#123;</span><br><span class="line">        return callback(WebViewJavascriptBridge);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        document.addEventListener(</span><br><span class="line">            &#39;WebViewJavascriptBridgeReady&#39;,</span><br><span class="line">            function () &#123;</span><br><span class="line">                callback(WebViewJavascriptBridge)</span><br><span class="line">            &#125;,</span><br><span class="line">            false</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    if (window.isIOS) &#123;</span><br><span class="line">        &#x2F;&#x2F; old ios method</span><br><span class="line">        &#x2F;&#x2F;setTimeout(function () &#123;</span><br><span class="line">        &#x2F;&#x2F;    if (window.WVJBCallbacks) &#123;</span><br><span class="line">        &#x2F;&#x2F;        return window.WVJBCallbacks.push(callback);</span><br><span class="line">        &#x2F;&#x2F;    &#125;</span><br><span class="line">        &#x2F;&#x2F;&#125;, 500)</span><br><span class="line">        &#x2F;&#x2F;window.WVJBCallbacks &#x3D; [callback];</span><br><span class="line">        &#x2F;&#x2F;var WVJBIframe &#x3D; document.createElement(&#39;iframe&#39;);</span><br><span class="line">        &#x2F;&#x2F;WVJBIframe.style.display &#x3D; &#39;none&#39;;</span><br><span class="line">        &#x2F;&#x2F;WVJBIframe.src &#x3D; &#39;wvjbscheme:&#x2F;&#x2F;__BRIDGE_LOADED__&#39;;</span><br><span class="line">        &#x2F;&#x2F;document.documentElement.appendChild(WVJBIframe);</span><br><span class="line">        &#x2F;&#x2F;setTimeout(function () &#123;</span><br><span class="line">        &#x2F;&#x2F;    document.documentElement.removeChild(WVJBIframe)</span><br><span class="line">        &#x2F;&#x2F;&#125;, 0)</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; new ios method</span><br><span class="line">        if (window.WKWebViewJavascriptBridge) &#123; return callback(WKWebViewJavascriptBridge); &#125;</span><br><span class="line">        if (window.WKWVJBCallbacks) &#123; return window.WKWVJBCallbacks.push(callback); &#125;</span><br><span class="line">        window.WKWVJBCallbacks &#x3D; [callback];</span><br><span class="line">        window.webkit.messageHandlers.iOS_Native_InjectJavascript.postMessage(null)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!window.isIOS) &#123;</span><br><span class="line">    jsbridge(function (bridge) &#123;</span><br><span class="line">        bridge.init(function (message, responseCallback) &#123;</span><br><span class="line">            var data &#x3D; &#123;&#125;;</span><br><span class="line">            responseCallback(data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @param  &#123;option对象&#125;</span><br><span class="line"> * method: 调用的方法</span><br><span class="line"> * data: 传递的参数</span><br><span class="line"> * callback: 回掉方法</span><br><span class="line"> * @return &#123;[type]&#125;</span><br><span class="line"> *&#x2F;</span><br><span class="line">function bridgeCallHandler(option) &#123;</span><br><span class="line">    &#x2F;&#x2F; alert(option.method)</span><br><span class="line">    jsbridge(function (bridge) &#123;</span><br><span class="line">        bridge.callHandler(</span><br><span class="line">            option.method,</span><br><span class="line">            option.data || &#123;&#125;,</span><br><span class="line">            function (responseData) &#123;</span><br><span class="line">                if (option.callback) &#123;</span><br><span class="line">                    option.callback(responseData)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">window.callNativePage &#x3D; function (option) &#123;</span><br><span class="line">    bridgeCallHandler(&#123;</span><br><span class="line">        method: &#39;callNativePage&#39;,</span><br><span class="line">        data: option.data,</span><br><span class="line">        callback: function (responseData) &#123;</span><br><span class="line">            if (option.callback) &#123;</span><br><span class="line">                option.callback(responseData);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">js调用app</span><br><span class="line">callNativePage(&#123;</span><br><span class="line">    data: &#123; msg : &#39;test send msg&#39; &#125;,</span><br><span class="line">    callback:function(responseData)&#123;</span><br><span class="line">        console.log(&#39;来源于app的反馈信息&#39;,responseData)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;app调js</span><br><span class="line">window.bridgeRegisterHandler &#x3D; function (option) &#123;</span><br><span class="line">    &#x2F;&#x2F; alert(option.method);</span><br><span class="line">    jsbridge(function (bridge) &#123;</span><br><span class="line">        bridge.registerHandler(</span><br><span class="line">            option.method,</span><br><span class="line">            function (data, responseCallback) &#123;</span><br><span class="line">                if (option.callback) &#123;</span><br><span class="line">                    option.callback(data);</span><br><span class="line">                &#125;</span><br><span class="line">                responseCallback(option.data || &#123;&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">window.bridgeRegisterHandler(&#123;</span><br><span class="line">    method:&quot;提供给app调用的方法名&quot;,</span><br><span class="line">    callback:function(data)&#123;</span><br><span class="line">        &#x2F;&#x2F; data : app传递给前端的data</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>参考链接</p>
<p><a href="https://www.cnblogs.com/tu-front-end/p/11301685.html" target="_blank" rel="noopener">jsbridge</a></p>
<p><a href="https://blog.csdn.net/daipianpian/article/details/90714502" target="_blank" rel="noopener">vue项目使用WebViewJavascriptBridge</a></p>
<p><a href="https://www.jianshu.com/p/2fa0b6cdca17" target="_blank" rel="noopener">H5调用封装</a></p>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>jsbridge</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序上传删除图片封装</title>
    <url>/2020/07/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8A%E4%BC%A0%E5%88%A0%E9%99%A4%E5%9B%BE%E7%89%87%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"img-model"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"img-item"</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;uploaderList&#125;&#125;"</span> <span class="attr">wx:key</span>=<span class="string">"item"</span> <span class="attr">data-index</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">icon</span> <span class="attr">class</span>=<span class="string">'ui_uploader_item_icon'</span> <span class="attr">bindtap</span>=<span class="string">'clearImg'</span> <span class="attr">data-index</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span> <span class="attr">type</span>=<span class="string">"clear"</span> <span class="attr">size</span>=<span class="string">"20"</span> <span class="attr">color</span>=<span class="string">"red"</span> /&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">image</span> <span class="attr">id</span>=<span class="string">"seal"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item.path&#125;&#125;"</span>  <span class="attr">bindtap</span>=<span class="string">"showImg"</span> <span class="attr">data-item</span>=<span class="string">"&#123;&#123;item&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;item.upload_percent&gt;1&amp;&amp;item.upload_percent&lt;100&#125;&#125;"</span>&gt;</span>&#123;&#123;item.upload_percent&#125;&#125;%<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;item.upload_percent==100&#125;&#125;"</span>&gt;</span>上传成功<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:else</span>&gt;</span>上传失败<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"img-click"</span> <span class="attr">bindtap</span>=<span class="string">"goChooseImage"</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;showUpload&#125;&#125;"</span>&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">image</span> <span class="attr">id</span>=<span class="string">"seal"</span> <span class="attr">src</span>=<span class="string">"./img/seal.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    uploaderNum: <span class="number">0</span>,<span class="comment">//已经上传的数量</span></span><br><span class="line">    uploaderList:[],</span><br><span class="line">    showUpload: <span class="literal">true</span>,</span><br><span class="line">    maxLength: <span class="number">4</span> <span class="comment">//允许上传的最大数量</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//选择图片 </span></span><br><span class="line">  goChooseImage(e) &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> uploaderList = that.data.uploaderList;</span><br><span class="line">    <span class="keyword">let</span> maxSize = <span class="number">102</span> * <span class="number">1024</span>;</span><br><span class="line">    wx.chooseImage(&#123;</span><br><span class="line">      <span class="comment">//每次最多选择的个数，多余自动去除</span></span><br><span class="line">      count: that.data.maxLength - that.data.uploaderList.length,</span><br><span class="line">      sizeType: [<span class="string">'original'</span>, <span class="string">'compressed'</span>],</span><br><span class="line">      sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>],</span><br><span class="line">      success(res) &#123;</span><br><span class="line">        wx.showToast(&#123;</span><br><span class="line">          title: <span class="string">'正在上传...'</span>,</span><br><span class="line">          icon: <span class="string">'loading'</span>,</span><br><span class="line">          mask: <span class="literal">true</span>,</span><br><span class="line">          duration: <span class="number">500</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//上传个数限制</span></span><br><span class="line">        <span class="keyword">if</span> ((res.tempFiles.length + that.data.uploaderList.length) &gt; that.data.maxLength) &#123;</span><br><span class="line">          wx.showModal(&#123;</span><br><span class="line">            content: <span class="string">'最多能上传'</span> + that.data.maxLength + <span class="string">'张图片'</span>,</span><br><span class="line">            showCancel: <span class="literal">false</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断图片大小</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; res.tempFiles.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.tempFiles[i].size &gt; maxSize) &#123;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">              content: <span class="string">'图片太大，不允许上传'</span>,</span><br><span class="line">              showCancel: <span class="literal">false</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            uploaderList = that.data.uploaderList.concat(res.tempFiles[i])</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              uploaderList,</span><br><span class="line">              uploaderNum: that.data.uploaderList.length</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//隐藏点击上传图片</span></span><br><span class="line">        <span class="keyword">if</span> (uploaderList.length == that.data.maxLength) &#123;</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            showUpload: <span class="literal">false</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//上传图片</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; uploaderList.length; i++) &#123;</span><br><span class="line">          <span class="comment">//that.upLoadImg(uploaderList[i],i)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 图片上传</span></span><br><span class="line">  upLoadImg(upImg,idx) &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> uploadTask = wx.uploadFile(&#123;</span><br><span class="line">      url: config.itravel_api + <span class="string">'TravelCard/tcUploadPicture.mini'</span>,</span><br><span class="line">      filePath: upImg.path,</span><br><span class="line">      header: &#123;</span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'multipart/form-data'</span></span><br><span class="line">      &#125;, <span class="comment">// 设置请求的 header</span></span><br><span class="line">      name: <span class="string">'idCard'</span>,</span><br><span class="line">      success(res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (idx === that.data.uploaderList.length<span class="number">-1</span>)&#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            title: <span class="string">"上传成功"</span>,</span><br><span class="line">            icon: <span class="string">'none'</span>,</span><br><span class="line">            mask: <span class="literal">true</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fail(res) &#123;</span><br><span class="line">        wx.showToast(&#123;</span><br><span class="line">          title: <span class="string">"上传失败"</span>,</span><br><span class="line">          icon: <span class="string">'none'</span>,</span><br><span class="line">          mask: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//进度条属性置为0显示上传失败</span></span><br><span class="line">        upImg[<span class="string">'upload_percent'</span>] = <span class="number">0</span></span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          uploaderList: that.data.uploaderList</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 上传进度条</span></span><br><span class="line">    uploadTask &amp;&amp; uploadTask.onProgressUpdate(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//增加进度条属性</span></span><br><span class="line">      upImg[<span class="string">'upload_percent'</span>] = res.progress</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        uploaderList: that.data.uploaderList</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//展示图片</span></span><br><span class="line">  showImg: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> path = e.currentTarget.dataset.item.path</span><br><span class="line">    <span class="keyword">let</span> images = <span class="keyword">this</span>.data.uploaderList</span><br><span class="line">    <span class="keyword">let</span> allImages = [];</span><br><span class="line">    images.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      allImages.push(item.path)</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.previewImage(&#123;</span><br><span class="line">      urls: allImages,</span><br><span class="line">      current: path</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 删除图片</span></span><br><span class="line">  clearImg: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span></span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">      title: <span class="string">'提示'</span>,</span><br><span class="line">      content: <span class="string">'确定删除图片吗？'</span>,</span><br><span class="line">      success(res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">          <span class="comment">//删除start</span></span><br><span class="line">          <span class="keyword">let</span> uploaderList = that.data.uploaderList;<span class="comment">//原数据</span></span><br><span class="line">          <span class="keyword">let</span> index = e.currentTarget.dataset.index;</span><br><span class="line">          uploaderList.splice(index, <span class="number">1</span>);</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            uploaderNum: that.data.uploaderNum - <span class="number">1</span>,</span><br><span class="line">            showUpload: <span class="literal">true</span>,</span><br><span class="line">            uploaderList: uploaderList,</span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="comment">//删除end</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序wxParse解析html</title>
    <url>/2020/07/24/%E5%B0%8F%E7%A8%8B%E5%BA%8FwxParse%E8%A7%A3%E6%9E%90html/</url>
    <content><![CDATA[<h3 id="wxParse解析html"><a href="#wxParse解析html" class="headerlink" title="wxParse解析html"></a>wxParse解析html</h3><p>最近项目上遇到在微信小程序里需要显示新闻内容，新闻内容是通过接口读取的服务器中的富文本内容，是html格式的，小程序默认是不支持html格式的内容显示的，那我们需要显示html内容的时候，就可以通过wxParse来实现。<br>首先我们在github上下载wxParse<br><a href="https://link.jianshu.com?t=https://github.com/icindy/wxParse" target="_blank" rel="noopener">https://github.com/icindy/wxParse</a></p>
<a id="more"></a>

<p><img src="http://upload-images.jianshu.io/upload_images/1749555-763e71fafa8b7d21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp" alt="img"></p>
<p>wxParse</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1749555-607f09905e3f1ffb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/603/format/webp" alt="img"></p>
<p>下面是具体的使用步骤</p>
<blockquote>
<p>1.在app.wxss全局样式文件中，需要引入wxParse的样式表</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;&#x2F;page&#x2F;wxParse&#x2F;wxParse.wxss&quot;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>2.在需要加载html内容的页面对应的js文件里引入wxParse</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var WxParse &#x3D; require(&#39;..&#x2F;..&#x2F;wxParse&#x2F;wxParse.js&#39;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>3.通过调用WxParse.wxParse方法来设置html内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">* WxParse.wxParse(bindName , type, data, target,imagePadding)</span><br><span class="line">* 1.bindName绑定的数据名(必填)</span><br><span class="line">* 2.type可以为html或者md(必填)</span><br><span class="line">* 3.data为传入的具体数据(必填)</span><br><span class="line">* 4.target为Page对象,一般为this(必填)</span><br><span class="line">* 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: function () &#123;</span><br><span class="line">    var that &#x3D; this;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">        url: &#39;&#39;, </span><br><span class="line">        method: &#39;POST&#39;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            &#39;id&#39;:13</span><br><span class="line">        &#125;,</span><br><span class="line">        header: &#123;</span><br><span class="line">            &#39;content-type&#39;: &#39;application&#x2F;json&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        success: function(res) &#123;</span><br><span class="line">            var article &#x3D; res.data[0].post;</span><br><span class="line">            WxParse.wxParse(&#39;article&#39;, &#39;html&#39;, article, that,5);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>4.在页面中引用模板</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;import src&#x3D;&quot;..&#x2F;..&#x2F;wxParse&#x2F;wxParse.wxml&quot;&#x2F;&gt;</span><br><span class="line">&lt;template is&#x3D;&quot;wxParse&quot; data&#x3D;&quot;&#123;&#123;wxParseData:article.nodes&#125;&#125;&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<p>这样就可以在微信小程序中嵌入html内容了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1749555-fc2cdae17f35c2e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/463/format/webp" alt="img"></p>
]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>wxParse</tag>
      </tags>
  </entry>
  <entry>
    <title>toolVs</title>
    <url>/2020/07/15/toolVs/</url>
    <content><![CDATA[<h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><p>1.复制/剪切/删除整行代码</p>
<blockquote>
<p>1)如果你想复制一整行代码，只需将光标移至该行，再使用组合键“Ctrl+C”来完成复制操作，而无需选择整行。</p>
<p>2)如果你想剪切一整行代码，只需将光标移至该行，再使用组合键“Ctrl+X”来完成剪切操作，而无需选择整行。</p>
<p>3)如果你想删除一整行代码，只需将光标移至该行，再使用组合键“Ctrl+L”来完成剪切操作，而无需选择整行。</p>
</blockquote>
<a id="more"></a>

<p>2.撤销/反撤销</p>
<p>　　&gt; 1)撤销：使用组合键“Ctrl+Z”进行撤销操作;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)反撤销：使用组合键“Ctrl+Y”进行反撤销操作。</p>
<p>3.向前/向后搜索</p>
<p>　　&gt; 1)使用组合键“Ctrl+I”;</p>
<p>4.在光标所在行的上面或下面插入一行</p>
<p>　　&gt; 1)组合键“Ctrl+Enter”：在当前行的上面插入一个空行;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)组合键“Ctrl+Shift+Enter”：在当前行的下面插入一个空行。</p>
<p>5.定位到行首与行尾</p>
<p>　　&gt; 1)home键：定位到当前行的行首;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)end键：定位到当前行的行尾。</p>
<p>6.选中从光标起到行首(尾)间的代码</p>
<p>　　&gt; 1)选中从光标起到行首间的代码：使用组合键“Shift + Home”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)选中从光标起到行尾间的代码：使用组合键“Shift + End”。</p>
<p>7.快速隐藏或显示当前代码段</p>
<p>　　&gt; 使用组合键“Ctrl+M,M”(记住：要按两次M哦)。</p>
<p>8.查找和替换</p>
<p>　　&gt; 1)查找：使用组合键“Ctrl+F”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)替换：使用组合键“Ctrl+H”。</p>
<p>9.大小写转换</p>
<p>　　&gt; 1)转小写：使用组合键“Ctrl+ U”;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)转大写：使用组合键“CTRL + SHIFT + U”。</p>
<p>10.查找下一个相同单词</p>
<blockquote>
<p>依次找出文中所有的当前选中的单词: Ctrl + D</p>
</blockquote>
<p>11.生成解决方案</p>
<pre><code>&gt; 使用F6或者组合键“Ctrl+Shift+B”</code></pre><p>12.定义与引用</p>
<p>　　&gt; 1)转跳到定义：F12;<br>　　&gt; 　　&gt;<br>　　&gt; 　　&gt;　　&gt; 2)查找所有引用：使用组合键“Shift+F12”。</p>
<p>20.自动定位文件</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/5d201da83f1544f4b22d5aeceedfc83b/1569231875%281%29.png" alt="img"></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>tool</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>tool</tag>
        <tag>vs</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序开发随笔（一）</title>
    <url>/2020/07/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E9%9A%8F%E7%AC%94%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">“..&#x2F;”代表当前文件所在目录的上一级目录。</span><br><span class="line"></span><br><span class="line">“..&#x2F;..&#x2F;”代表当前文件所在目录的上上级目录。</span><br><span class="line"></span><br><span class="line">“..&#x2F;..&#x2F;..&#x2F;”可以依次类推。</span><br><span class="line"></span><br><span class="line">“&#x2F;”代表根目录。</span><br><span class="line"></span><br><span class="line">“.&#x2F;”表示当前目录，HTML中，可以省略。</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="给对象属性赋值，增加属性"><a href="#给对象属性赋值，增加属性" class="headerlink" title="给对象属性赋值，增加属性"></a>给对象属性赋值，增加属性</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  tel: &#39;15184138787&#39;,</span><br><span class="line">  list: &#123;</span><br><span class="line">   title: &#39;我是标题哦&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">需求：更改list里title的值</span><br><span class="line"> let  value &#x3D; &#39;list.title&#39;; &#x2F;&#x2F; 注意这里哈</span><br><span class="line">  this.setData(&#123;</span><br><span class="line">    [value]: &#39;我是新标题&#39;</span><br><span class="line"> &#125;)</span><br><span class="line"> </span><br><span class="line">需求：list新增动态属性值</span><br><span class="line"> let  value &#x3D; &#96;list.$&#123;name&#125;&#96; &#x2F;&#x2F; 这里的name是动态的哈，可以是1，2，3，4.... 任意值</span><br><span class="line">  this.setData(&#123;</span><br><span class="line">    [value]: &#39;我是新属性&#39;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure>



<h3 id="通过id直接调用组件内部方法"><a href="#通过id直接调用组件内部方法" class="headerlink" title="通过id直接调用组件内部方法"></a>通过id直接调用组件内部方法</h3><blockquote>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/4ac158cdc9c648f2951aba06d0452f20/816184259208.png" alt="img"></p>
<p>followUs-component组件里的方法</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/251ac7f7360748fe8f80002cfe80af9e/816184028689.png" alt="img"></p>
<p>页面调用组件方法</p>
<p><img src="C:/Users/admin/AppData/Local/YNote/data/weixinobU7VjrjuSqZnu6-xPbfCXnjhBIM/6c63b95b03214999a9f7a0bd92a2f6b9/081618435245.png" alt="img"></p>
</blockquote>
<h3 id="禁止下拉-ios下拉空白"><a href="#禁止下拉-ios下拉空白" class="headerlink" title="禁止下拉(ios下拉空白)"></a>禁止下拉(ios下拉空白)</h3><blockquote>
<p>在微信小程序中，用力往下拉动，页面顶部会出现一段空白的地方。 产品的需求不太允许这么做，会影响用户体验，查看文档发现可以使用enablePullDownRefresh这属性来实现，在page.json里面添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;enablePullDownRefresh&quot;:false</span><br></pre></td></tr></table></figure>

<p>这样可以禁用页面下拉滚动，需要注意的是不可在全局配置 app.json中配置。经测试发现：虽然禁止了下拉刷新，但是在部分ios端仍然可以下拉出现空白。那么该如何解决呢？方法：当页面滚动的时候判断与顶部的距离，当这个距离小于0的时候，强制性拉回顶部即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onPageScroll:function(e)&#123;</span><br><span class="line">  if(e.scrollTop&lt;0)&#123;</span><br><span class="line">    wx.pageScrollTo(&#123;</span><br><span class="line">   	 scrollTop: 0</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="自带水平和垂直滚动事件"><a href="#自带水平和垂直滚动事件" class="headerlink" title="自带水平和垂直滚动事件"></a>自带水平和垂直滚动事件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">scroll-y</span>&gt;</span>111<span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">scroll-x</span>&gt;</span>222<span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="text套text，内部text绑定点击事件失效"><a href="#text套text，内部text绑定点击事件失效" class="headerlink" title="text套text，内部text绑定点击事件失效"></a>text套text，内部text绑定点击事件失效</h3><h3 id="hover添加class事件"><a href="#hover添加class事件" class="headerlink" title="hover添加class事件"></a>hover添加class事件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hover-class</span>=<span class="string">"none"</span>&gt;</span>这是一段文字<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hover-class</span>=<span class="string">"bg_red"</span>  <span class="attr">hover-stop-propagation</span>=<span class="string">"false"</span> <span class="attr">hover-start-time</span>=<span class="string">"50"</span> <span class="attr">hover-stay-time</span>=<span class="string">"400"</span> &gt;</span>这是一段文字<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">hover-stop-propagation属性并不是说完全阻止了祖先节点的被点击能力，它只是代表点击当前view的时候，它的祖先节点不会产生点击效果</span><br><span class="line">hover-start-time按住多久出现点击态</span><br><span class="line">hover-stay-time手指松开后保持点击的状态</span><br><span class="line">通常，当一个 view 组件中包含 image 等不支持 hover-class 的组件，但又需要在该组件上使用 hover-stop-propagation 属性的作用时，需要将不支持 hover-class 的组件用view、button 或 navigator 包裹起来。</span><br></pre></td></tr></table></figure>



<h3 id="使用button标签的open-type-”getUserInfo”引导用户去授权"><a href="#使用button标签的open-type-”getUserInfo”引导用户去授权" class="headerlink" title="使用button标签的open-type=”getUserInfo”引导用户去授权]"></a>使用button标签的open-type=”getUserInfo”引导用户去授权]</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">index.wxml</span><br><span class="line">&lt;button</span><br><span class="line">    wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;canIUse&#125;&#125;"</span></span><br><span class="line">    open-type=<span class="string">"getUserInfo"</span></span><br><span class="line">    bindgetuserinfo=<span class="string">"bindGetUserInfo"</span></span><br><span class="line">&gt;授权登录&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;view wx:else&gt;请升级微信版本&lt;/</span>view&gt;</span><br><span class="line">index.js</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">     <span class="comment">//判断小程序的API，回调，参数，组件等是否在当前版本可用。</span></span><br><span class="line">    canIUse: wx.canIUse(<span class="string">'button.open-type.getUserInfo'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 查看是否授权</span></span><br><span class="line">    wx.getSetting(&#123;</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (res.authSetting[<span class="string">'scope.userInfo'</span>]) &#123;</span><br><span class="line">          wx.getUserInfo(&#123;</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(res.userInfo)</span><br><span class="line">              <span class="comment">//用户已经授权过</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  bindGetUserInfo: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.detail.userInfo)</span><br><span class="line">    <span class="keyword">if</span> (e.detail.userInfo)&#123;</span><br><span class="line">      <span class="comment">//用户按了允许授权按钮</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//用户按了拒绝按钮</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h3 id="页面跳转方法总结"><a href="#页面跳转方法总结" class="headerlink" title="页面跳转方法总结"></a>页面跳转方法总结</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//wx.navigateBack返回上上个页面。</span></span><br><span class="line">wx.navigateBack(&#123;</span><br><span class="line">  delta: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。</span></span><br><span class="line"><span class="comment">// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈</span></span><br><span class="line">wx.navigateTo(&#123;</span><br><span class="line">  url: <span class="string">'page/detail/detail?product_id=222'</span>　　<span class="comment">// 页面 </span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭当前页面，跳转到应用内的某个页面。</span></span><br><span class="line">wx.redirectTo(&#123;</span><br><span class="line">  url: <span class="string">'page/home/home?user_id=111'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳转到tabBar页面（在app.json中注册过的tabBar页面），同时关闭其他非tabBar页面。</span></span><br><span class="line"></span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line">  url: <span class="string">'page/index/index'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭所有页面，打开到应用内的某个页面。</span></span><br><span class="line">wx.reLanch(&#123;</span><br><span class="line">  url: <span class="string">'page/home/home?user_id=111'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h3 id="wxml-页面组件跳转（可以通过设置open-type属性指明页面跳转方式）："><a href="#wxml-页面组件跳转（可以通过设置open-type属性指明页面跳转方式）：" class="headerlink" title="wxml 页面组件跳转（可以通过设置open-type属性指明页面跳转方式）："></a>wxml 页面组件跳转（可以通过设置open-type属性指明页面跳转方式）：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// navigator 组件默认的 open-type 为 navigate </span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"/page/navigate/navigate?title=navigate"</span> <span class="attr">hover-class</span>=<span class="string">"navigator-hover"</span>&gt;</span>跳转到新页面<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// redirect 对应 API 中的 wx.redirect 方法</span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"../../redirect/redirect/redirect?title=redirect"</span> <span class="attr">open-type</span>=<span class="string">"redirect"</span> <span class="attr">hover-class</span>=<span class="string">"other-navigator-hover"</span>&gt;</span>在当前页打开<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// switchTab 对应 API 中的 wx.switchTab 方法</span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"/page/index/index"</span> <span class="attr">open-type</span>=<span class="string">"switchTab"</span> <span class="attr">hover-class</span>=<span class="string">"other-navigator-hover"</span>&gt;</span>切换 Tab<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// reLanch 对应 API 中的 wx.reLanch 方法</span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"../../redirect/redirect/redirect?title=redirect"</span> <span class="attr">open-type</span>=<span class="string">"redirect"</span> <span class="attr">hover-class</span>=<span class="string">"other-navigator-hover"</span>&gt;</span>关闭所有页面，打开到应用内的某个页面<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// navigateBack 对应 API 中的 wx.navigateBack 方法</span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"/page/index/index"</span> <span class="attr">open-type</span>=<span class="string">"navigateBack"</span> <span class="attr">hover-class</span>=<span class="string">"other-navigator-hover"</span>&gt;</span>关闭当前页面，返回上一级页面或多级页面<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序登陆</title>
    <url>/2020/07/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E9%99%86/</url>
    <content><![CDATA[<h3 id="小程序获取授权，得到用户的昵称头像"><a href="#小程序获取授权，得到用户的昵称头像" class="headerlink" title="小程序获取授权，得到用户的昵称头像"></a>小程序获取授权，得到用户的昵称头像</h3><h5 id="使用button标签的open-type-”getUserInfo”引导用户去授权"><a href="#使用button标签的open-type-”getUserInfo”引导用户去授权" class="headerlink" title="使用button标签的open-type=”getUserInfo”引导用户去授权"></a>使用button标签的open-type=”getUserInfo”引导用户去授权</h5><h4 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"userinfo"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;!hasUserInfo &amp;&amp; canIUse&#125;&#125;"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"getUserInfo"</span>&gt;</span> 获取头像昵称 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:else</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">bindtap</span>=<span class="string">"bindViewTap"</span> <span class="attr">class</span>=<span class="string">"userinfo-avatar"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;userInfo.avatarUrl&#125;&#125;"</span> <span class="attr">mode</span>=<span class="string">"cover"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"userinfo-nickname"</span>&gt;</span>&#123;&#123;userInfo.nickName&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="js"><a href="#js" class="headerlink" title="js"></a>js</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="comment">//获取应用实例</span></span><br><span class="line"><span class="keyword">const</span> app = getApp()</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    motto: <span class="string">'Hello World'</span>,</span><br><span class="line">    userInfo: &#123;&#125;,</span><br><span class="line">    hasUserInfo: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">//判断小程序的API，回调，参数，组件等是否在当前版本可用。</span></span><br><span class="line">    canIUse: wx.canIUse(<span class="string">'button.open-type.getUserInfo'</span>),</span><br><span class="line">    value: <span class="number">3.6</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//事件处理函数</span></span><br><span class="line">  bindViewTap: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      url: <span class="string">'../logs/logs'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (app.globalData.userInfo) &#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        userInfo: app.globalData.userInfo,</span><br><span class="line">        hasUserInfo: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.data.canIUse)&#123;</span><br><span class="line">      <span class="comment">// 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回</span></span><br><span class="line">      <span class="comment">// 所以此处加入 callback 以防止这种情况</span></span><br><span class="line">      app.userInfoReadyCallback = <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">          userInfo: res.userInfo,</span><br><span class="line">          hasUserInfo: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 在没有 open-type=getUserInfo 版本的兼容处理</span></span><br><span class="line">      wx.getUserInfo(&#123;</span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          app.globalData.userInfo = res.userInfo</span><br><span class="line">          <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            userInfo: res.userInfo,</span><br><span class="line">            hasUserInfo: <span class="literal">true</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getUserInfo: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">    app.globalData.userInfo = e.detail.userInfo</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      userInfo: e.detail.userInfo,</span><br><span class="line">      hasUserInfo: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>soft</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>mdUse</title>
    <url>/2020/07/14/mdUse/</url>
    <content><![CDATA[<h3 id="标题-号越多字越小"><a href="#标题-号越多字越小" class="headerlink" title="标题(#号越多字越小)"></a>标题(#号越多字越小)</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<a id="more"></a>

<h3 id="列表（无序用‘-’有序用‘1-’）"><a href="#列表（无序用‘-’有序用‘1-’）" class="headerlink" title="列表（无序用‘*/-/+’有序用‘1.’）"></a>列表（无序用‘*/-/+’有序用‘1.’）</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="引用一小段别处的句子-使用’-gt-’"><a href="#引用一小段别处的句子-使用’-gt-’" class="headerlink" title="引用一小段别处的句子(使用’&gt;’)"></a>引用一小段别处的句子(使用’&gt;’)</h3><blockquote>
<p>引用一小段别处的句子</p>
</blockquote>
<blockquote>
<p>一级</p>
<blockquote>
<p>二级</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>三级</p>
</blockquote>
</blockquote>
</blockquote>
<p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="图片与链接-区别在于有无’-’"><a href="#图片与链接-区别在于有无’-’" class="headerlink" title="图片与链接(区别在于有无’!’)"></a>图片与链接(区别在于有无’!’)</h3><p>备注：插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。</p>
<p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<hr>
<h3 id="粗体与斜体与删除-左右两个-‘-’-左右一个-‘-’包含-左右两个‘-’"><a href="#粗体与斜体与删除-左右两个-‘-’-左右一个-‘-’包含-左右两个‘-’" class="headerlink" title="粗体与斜体与删除(左右两个 ‘*’  /左右一个 ‘ *’包含/左右两个‘~~’)"></a>粗体与斜体与删除(左右两个 ‘*’  /左右一个 ‘ *’包含/左右两个‘~~’)</h3><blockquote>
<p><strong>我加粗了</strong>  <em>我是斜体</em>    <del>删除</del></p>
</blockquote>
<hr>
<h3 id="代码框（用’-’包裹）"><a href="#代码框（用’-’包裹）" class="headerlink" title="代码框（用’`’包裹）"></a>代码框（用’`’包裹）</h3><p><img src="http://cdn.sspai.com/attachment/thumbnail/2014/04/15/0135456d6a3c1051f0ed54e37cef070010f78_mw_800_wm_1_wmp_3.jpg" alt="img"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意java前面有空格</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="分割线（三个‘-’）"><a href="#分割线（三个‘-’）" class="headerlink" title="分割线（三个‘***’）"></a>分割线（三个‘***’）</h3><hr>
<h3 id="表格-默认左对齐"><a href="#表格-默认左对齐" class="headerlink" title="表格(默认左对齐)"></a>表格(默认左对齐)</h3><table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<hr>
<h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>你可以在需要插入脚注标号的位置写 <code>[^ number ]</code> ，再在下方通过 <code>[^ number ]:</code> 在文档中插入脚注。注意不要遗漏了脚注编号 <code>number</code> 前后的空格。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/5f82606e6d89fe1eb24705c4ca6b895d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>这里是脚注<a href="https://www.baidu.com" target="_blank" rel="noopener">^1</a></p>
<hr>
<h3 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h3><p>在 Typora 中，你可以用 <code>:emoji:</code> 的形式来打出 emoji，软件会自动给出图形的提示，还是比较好用的。</p>
<p><img src="https://cdn.sspai.com/2019/05/24/ff26eeb5ff2d6fae16cab163ebfcd096.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>:horse:</p>
<hr>
<h3 id="常用弥补Markdown的Html标签"><a href="#常用弥补Markdown的Html标签" class="headerlink" title="常用弥补Markdown的Html标签"></a>常用弥补Markdown的Html标签</h3><p><span style='color:red'>This is red</span></p>
<p align="left">居左文本</p>
<p align="center">居中文本</p> 
<p align="right">居右文本</p>

<p>换行<br/></p>
<p>换行后</p>
<p><u>我是下划线<u/></p>
<hr>
<h3 id="几款主流好用的markdown编辑器介绍"><a href="#几款主流好用的markdown编辑器介绍" class="headerlink" title="几款主流好用的markdown编辑器介绍"></a>几款主流好用的markdown编辑器介绍</h3><ol>
<li><p>Mou</p>
<p> Mou 是一款由国人开发的Markdown 编辑器，支持实时预览，但是仅支持 苹果操作系统，可以说是目前最好用的免费 Markdown 编辑器，对汉字兼容性非常好。提供语法高亮、在线预览、同步滚动、全屏模式，支持自定保存、自动匹配，允许自定义主题等等。支持 CSS，HTML 和 PDF 导出等功能。</p>
<p>　Mou是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://25.io/mou/" target="_blank" rel="noopener">http://25.io/mou/</a></p>
</li>
<li><p>MarkdownPad</p>
<p> MarkdownPad被很多人称赞为windows下最好用的Markdown编辑器之一，不过仅支持windows。它有免费版和收费版（MarkdownPad Pro），一般情况下免费版就够用了，想用pro版的可以自行网上下载，强大的国人crack无处不在的~ ~。</p>
<p>　MarkdownPad支持键盘快捷键和工具栏操作，即可添加标记也可移除，支持即时HTML预览、支持自定义配色方案、字体、大小和布局、支持音乐视频，可以导出HTML和PDF。</p>
<p>　MarkdownPad是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://markdownpad.com/" target="_blank" rel="noopener">http://markdownpad.com/</a></p>
</li>
<li><p>Typora (本文就是用的这个软件哦)</p>
<p> Typora也是非常用名，非常好用的markdown编辑器，它的设计理念很不一样，是真正的即时预览型编辑器，不同于左右两个窗口的编辑器。Typora的设计理念就是极致简洁，它将「写字」和「预览」这两件事情合并了。</p>
<p>　如果要修改已经写好的markdown标记可以点击切换到“源代码模式”。</p>
<p>　Typora 同样支持 Windows、OS X 和 Linux多个操作系统，支持数学编辑，可与 Word 直接格式转换，可以进行多种文档格式转换。Typora 流畅度和反应速度很快，特别适合那些手速快的人。</p>
<p>　Typora是独立的软件。</p>
<p>　更多介绍及下载：<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p>
</li>
<li><p>Atom</p>
<p> Atom 可以说是专门为程序员推出的一个文本编辑器，界面简洁，支持实时预览。功能非常多，除了Markdown同时支持CSS，HTML，JavaScript等网页编程语言，还支持宏定义，自动分屏功能等。Atom还具有语义输入模式，比例输入code即会自动开启代码模式。</p>
<p>　Atom支持windows、苹果、linux等多种操作系统。Atom是由著名的github平台出品的。</p>
<p>　Atom是独立的软件，也支持插件方式。</p>
<p>　更多介绍及下载：<a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p>
</li>
<li><p>Haroopad</p>
<p> Haroopad也是一款非常流行的编辑器，来自韩国。Haroopad支持 Windows、Mac OS X 和 Linux三大操作系统。Haroopad的特色是主题样式丰富，语法高亮支持无数种编程语言，几乎你能想到的编程语言他都支持。Ubuntu/Linux 用户使用该工具比例很高，Haroopad 也是开源免费的。Haroopad也支持导出HTML、PDF，也支持数学公式和流程图。</p>
<p>　Haroopad是独立的软件。</p>
<p>　更多介绍及下载：<a href="http://pad.haroopress.com/user.html" target="_blank" rel="noopener">http://pad.haroopress.com/user.html</a></p>
</li>
</ol>
<p>参考文档：<a href="https://sspai.com/post/54912" target="_blank" rel="noopener">typora</a></p>
]]></content>
      <categories>
        <category>mysoft</category>
        <category>md</category>
      </categories>
      <tags>
        <tag>soft</tag>
        <tag>md</tag>
      </tags>
  </entry>
  <entry>
    <title>plugins</title>
    <url>/2020/07/17/plugins/</url>
    <content><![CDATA[<h3 id="vs和vsCode插件"><a href="#vs和vsCode插件" class="headerlink" title="vs和vsCode插件"></a>vs和vsCode插件</h3><a id="more"></a>

<ol>
<li><p>vs</p>
<blockquote>
<ul>
<li>web compiler  将less和js编译成css和es5</li>
<li>force UTF-8 （No Bom）  将文档编译成utf-8的文档格式输出(也可以用记事本打开另存为,解决页面打开出现&amp;#65279，显示多余空白)</li>
<li>force UTF-8 （With Bom）</li>
</ul>
</blockquote>
<p>​</p>
</li>
<li><p>​</p>
<blockquote>
<ul>
<li>Auto Close Tag  自动闭合标签</li>
<li>Auto Rename Tag 自动重命名标签</li>
<li>Auto-Save on Window Change 关闭窗口自动保存</li>
<li>Chinese (Simplified) Language Pack for Visual Studio Code 中文包</li>
<li>CSS Tree 选中标签生成css文件树（Ctrl + shift + p选择 Generate CSS tree）</li>
<li>Easy LESS 可直接生成小程序wxss</li>
<li>filesize 查看文件大小</li>
<li>Path Intellisense 自动提示文件路径</li>
<li>Git Histroy/Local Histroy 文件历史记录</li>
<li>Material Icon Theme 文件图标</li>
<li>vscode-icons 图标插件</li>
<li>Bracket Pair Colorizer 括号颜色高亮</li>
<li>open in browser 在浏览器中打开</li>
<li>vscode-fileheader 文件头部信息</li>
<li>Vue 2 Snippets vue代码片段提示</li>
<li>vetur  vue语法高亮/格式化/代码片段/语法检查等</li>
<li>minapp 微信小程序标签、属性的智能补全（同时支持原生小程序、mpvue 和 wepy 框架，并提供 snippets）</li>
<li>Stylus Language  基于Node.js的CSS的预处理框架</li>
<li>live-server 实时简易服务器</li>
<li>Live Share 实时共享（vs 和vscode）</li>
<li>Live Share Audio 实时共享音频</li>
</ul>
</blockquote>
</li>
</ol>
<p><a href="https://marketplace.visualstudio.com/search?term=%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%8A%A9%E6%89%8B&target=VSCode&category=Programming%20Languages&sortBy=Relevance">插件官网地址</a></p>
<p><a href="https://mp.weixin.qq.com/s/LAe29D9nZvCcvs_Kr_PWZQ" target="_blank" rel="noopener">更多插件</a></p>
]]></content>
      <categories>
        <category>plugins</category>
      </categories>
      <tags>
        <tag>plugins</tag>
      </tags>
  </entry>
</search>
