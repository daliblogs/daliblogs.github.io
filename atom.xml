<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaliBlogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-27T10:10:49.667Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dali</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>this之常见的四种用法</title>
    <link href="http://yoursite.com/2020/09/27/this%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2020/09/27/this%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%94%A8%E6%B3%95/</id>
    <published>2020-09-27T08:04:03.000Z</published>
    <updated>2020-09-27T10:10:49.667Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;color:red;&quot;&gt;箭头函数的this指向window！！！！！！！！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1.在一般函数方法中使用 this 指代全局对象&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function test()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　this.x &amp;#x3D; 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　alert(this.x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test(); &amp;#x2F;&amp;#x2F; 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="this" scheme="http://yoursite.com/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>axios之get和post</title>
    <link href="http://yoursite.com/2020/09/27/axios%E4%B9%8Bget%E5%92%8Cpost/"/>
    <id>http://yoursite.com/2020/09/27/axios%E4%B9%8Bget%E5%92%8Cpost/</id>
    <published>2020-09-27T03:04:09.000Z</published>
    <updated>2020-09-27T10:10:34.541Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是GET和POST请求&quot;&gt;&lt;a href=&quot;#什么是GET和POST请求&quot; class=&quot;headerlink&quot; title=&quot;什么是GET和POST请求&quot;&gt;&lt;/a&gt;什么是GET和POST请求&lt;/h3&gt;&lt;p&gt;GET：向指定路径资源发送请求，通常用于获取数据&lt;/p&gt;
&lt;p&gt;POST：向指定路径资源提交数据进行处理请求，通常用于提交表单或者上传文件&lt;/p&gt;
&lt;h3 id=&quot;GET和POST请求的区别&quot;&gt;&lt;a href=&quot;#GET和POST请求的区别&quot; class=&quot;headerlink&quot; title=&quot;GET和POST请求的区别&quot;&gt;&lt;/a&gt;GET和POST请求的区别&lt;/h3&gt;&lt;p&gt;1，GET一般是从服务器上获取数据，POST是向服务器提交数据。&lt;/p&gt;
&lt;p&gt;2，GET通过URL提交数据，数据在URL中可以看到，POST则是在HEADER内提交。&lt;/p&gt;
&lt;p&gt;3，GET提交的数据不能大于2KB，而POST不受限制。&lt;/p&gt;
&lt;p&gt;4，GET数据容易泄露，POST较为安全&lt;/p&gt;
    
    </summary>
    
    
      <category term="axios" scheme="http://yoursite.com/categories/axios/"/>
    
      <category term="vue" scheme="http://yoursite.com/categories/axios/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="get" scheme="http://yoursite.com/tags/get/"/>
    
      <category term="post" scheme="http://yoursite.com/tags/post/"/>
    
  </entry>
  
  <entry>
    <title>js之对象的方法合集</title>
    <link href="http://yoursite.com/2020/09/25/js%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/"/>
    <id>http://yoursite.com/2020/09/25/js%E4%B9%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/</id>
    <published>2020-09-25T09:40:57.000Z</published>
    <updated>2020-09-27T10:14:22.015Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Object构造方法&quot;&gt;&lt;a href=&quot;#Object构造方法&quot; class=&quot;headerlink&quot; title=&quot;Object构造方法&quot;&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;构造方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将所有可枚举的自身属性的值从一个或多个源对象复制到目标对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用指定的原型对象和属性创建一个新对象。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="对象的方法" scheme="http://yoursite.com/tags/%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>react之井字棋</title>
    <link href="http://yoursite.com/2020/09/25/react%E4%B9%8B%E4%BA%95%E5%AD%97%E6%A3%8B/"/>
    <id>http://yoursite.com/2020/09/25/react%E4%B9%8B%E4%BA%95%E5%AD%97%E6%A3%8B/</id>
    <published>2020-09-25T05:18:36.000Z</published>
    <updated>2020-09-27T10:19:37.178Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;见下文&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/categories/react/"/>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="井字棋" scheme="http://yoursite.com/tags/%E4%BA%95%E5%AD%97%E6%A3%8B/"/>
    
  </entry>
  
  <entry>
    <title>js之构造函数原型实例</title>
    <link href="http://yoursite.com/2020/09/25/js%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8E%9F%E5%9E%8B%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2020/09/25/js%E4%B9%8B%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8E%9F%E5%9E%8B%E5%AE%9E%E4%BE%8B/</id>
    <published>2020-09-25T02:05:09.000Z</published>
    <updated>2020-09-27T10:14:01.734Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先用构造函数（一会解释什么叫做构造函数）的方法创建一个对象&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; M=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=&lt;span class=&quot;string&quot;&gt;&#39;123&#39;&lt;/span&gt;&amp;#125;   &lt;span class=&quot;comment&quot;&gt;//ƒ ()&amp;#123;this.name=&#39;123&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; M()  &lt;span class=&quot;comment&quot;&gt;//M &amp;#123;name: &quot;123&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a1.name)  &lt;span class=&quot;comment&quot;&gt;//123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;构造函数：&lt;/strong&gt;现在M就是构造函数，因为他被new过了！–在js中，只要是被new过的函数都被成为构造函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实例对象：&lt;/strong&gt;现在a1就叫做实例，因为他是被new出来的！–在js中，只要是被new出来的对象都叫做实例对象。也叫实例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原型对象：&lt;/strong&gt;现在M.prototype就是原型对象，构造函数函数被创建出来的时候，天生就带一个prototype属性，而这个属性里面的东西就叫原型对象。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="构造函数" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
    
      <category term="原型对象" scheme="http://yoursite.com/tags/%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="实例对象" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>webpack4最全解析</title>
    <link href="http://yoursite.com/2020/09/23/webpack4%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/23/webpack4%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/</id>
    <published>2020-09-23T11:21:53.000Z</published>
    <updated>2020-09-27T10:13:33.050Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;命令合集&quot;&gt;&lt;a href=&quot;#命令合集&quot; class=&quot;headerlink&quot; title=&quot;命令合集&quot;&gt;&lt;/a&gt;命令合集&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webpack-cli可以让我们在命令行里输入webpack相关命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地安装webpack webpack-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm webpack webpack-cli -D &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;生成默认的packpage.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看旧的版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm info webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;全局安装翻译某个js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webpack index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地安装翻译某个js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看本地安装的webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack -v &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更改配置文件(由默认的webpack.config.js改成webpackconfig.js)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx webpack --config webpackconfig.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="webpack4" scheme="http://yoursite.com/categories/webpack4/"/>
    
    
      <category term="webpack4" scheme="http://yoursite.com/tags/webpack4/"/>
    
  </entry>
  
  <entry>
    <title>js之Math</title>
    <link href="http://yoursite.com/2020/09/23/js%E4%B9%8BMath/"/>
    <id>http://yoursite.com/2020/09/23/js%E4%B9%8BMath/</id>
    <published>2020-09-23T06:33:58.000Z</published>
    <updated>2020-09-27T10:13:01.060Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Math-对象方法&quot;&gt;&lt;a href=&quot;#Math-对象方法&quot; class=&quot;headerlink&quot; title=&quot;Math 对象方法&quot;&gt;&lt;/a&gt;Math 对象方法&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Math" scheme="http://yoursite.com/categories/Math/"/>
    
    
      <category term="Math" scheme="http://yoursite.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>vue之惯性滚动动效</title>
    <link href="http://yoursite.com/2020/09/23/vue%E4%B9%8B%E6%83%AF%E6%80%A7%E6%BB%9A%E5%8A%A8%E5%8A%A8%E6%95%88/"/>
    <id>http://yoursite.com/2020/09/23/vue%E4%B9%8B%E6%83%AF%E6%80%A7%E6%BB%9A%E5%8A%A8%E5%8A%A8%E6%95%88/</id>
    <published>2020-09-23T05:31:19.000Z</published>
    <updated>2020-09-27T10:19:02.545Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;见下文&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="滚动" scheme="http://yoursite.com/tags/%E6%BB%9A%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>本地文件夹上传github</title>
    <link href="http://yoursite.com/2020/09/22/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8A%E4%BC%A0github/"/>
    <id>http://yoursite.com/2020/09/22/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8A%E4%BC%A0github/</id>
    <published>2020-09-22T10:12:50.000Z</published>
    <updated>2020-09-22T10:16:55.364Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先你需要一个github账号，所有还没有的话先去注册吧！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-for-windows.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.进入Github首页，点击New repository新建一个项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/913913/201608/913913-20160823164154526-418441991.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="上传文件夹" scheme="http://yoursite.com/tags/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    
  </entry>
  
  <entry>
    <title>webpack常见loader和plugins</title>
    <link href="http://yoursite.com/2020/09/22/webpack%E5%B8%B8%E8%A7%81loader%E5%92%8Cplugins/"/>
    <id>http://yoursite.com/2020/09/22/webpack%E5%B8%B8%E8%A7%81loader%E5%92%8Cplugins/</id>
    <published>2020-09-22T08:48:58.000Z</published>
    <updated>2020-09-27T09:50:22.934Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用webpack插件&quot;&gt;&lt;a href=&quot;#常用webpack插件&quot; class=&quot;headerlink&quot; title=&quot;常用webpack插件&quot;&gt;&lt;/a&gt;常用webpack插件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注意：插件的引入都在webpack.config.js中&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;live-server-必须全局安装，命令直接使用&quot;&gt;&lt;a href=&quot;#live-server-必须全局安装，命令直接使用&quot; class=&quot;headerlink&quot; title=&quot;live-server (必须全局安装，命令直接使用)&quot;&gt;&lt;/a&gt;live-server (必须全局安装，命令直接使用)&lt;/h4&gt;&lt;p&gt;一款npm工具，全局npm i -g live-server后，项目目录使用live-server命令行命令便可直接在浏览器中预览（默认找index.html，其他请自行带上文件名空格后跟在后面），并且自动全局监听实时更新&lt;/p&gt;
&lt;p&gt;1.新建一个文件夹（最好英文），执行npm init命令；&lt;/p&gt;
&lt;p&gt;2.生成package.json文件后，执行npm install -g live-server命令；&lt;/p&gt;
&lt;p&gt;3.安装完成后，就可以执行live-server命令启动；&lt;/p&gt;
&lt;p&gt;设置快捷方式如下：&lt;/p&gt;
&lt;p&gt;1.找到package.json文件，然后找到”script”，写入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;scripts&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;server&amp;quot;:&amp;quot;live-server .&amp;#x2F;port&amp;#x3D;9090&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://yoursite.com/categories/webpack/"/>
    
    
      <category term="plugins" scheme="http://yoursite.com/tags/plugins/"/>
    
      <category term="loader" scheme="http://yoursite.com/tags/loader/"/>
    
  </entry>
  
  <entry>
    <title>webpack3最全解析</title>
    <link href="http://yoursite.com/2020/09/21/webpack3%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/09/21/webpack3%E6%9C%80%E5%85%A8%E8%A7%A3%E6%9E%90/</id>
    <published>2020-09-21T09:29:49.000Z</published>
    <updated>2020-09-27T09:02:33.707Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;开始（以3-X版本为例，内容有过时的还没更新）&quot;&gt;&lt;a href=&quot;#开始（以3-X版本为例，内容有过时的还没更新）&quot; class=&quot;headerlink&quot; title=&quot;开始（以3.X版本为例，内容有过时的还没更新）&quot;&gt;&lt;/a&gt;开始（以3.X版本为例，内容有过时的还没更新）&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F;新建文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir webpack_demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd webpack_demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F;全局安装webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -g webpack@3.6.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F;初始化生成package.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F;开发时依赖&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install --save-dev webpack@3.6.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="webpack3" scheme="http://yoursite.com/categories/webpack3/"/>
    
    
      <category term="webpack3" scheme="http://yoursite.com/tags/webpack3/"/>
    
  </entry>
  
  <entry>
    <title>H5移动端调试全攻略</title>
    <link href="http://yoursite.com/2020/09/21/H5%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95%E5%85%A8%E6%94%BB%E7%95%A5/"/>
    <id>http://yoursite.com/2020/09/21/H5%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95%E5%85%A8%E6%94%BB%E7%95%A5/</id>
    <published>2020-09-21T01:59:13.000Z</published>
    <updated>2020-09-21T02:43:53.266Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;H5-移动端调试全攻略&quot;&gt;&lt;a href=&quot;#H5-移动端调试全攻略&quot; class=&quot;headerlink&quot; title=&quot;H5 移动端调试全攻略&quot;&gt;&lt;/a&gt;H5 移动端调试全攻略&lt;/h2&gt;&lt;h3 id=&quot;一、概要&quot;&gt;&lt;a href=&quot;#一、概要&quot; class=&quot;headerlink&quot; title=&quot;一、概要&quot;&gt;&lt;/a&gt;一、概要&lt;/h3&gt;&lt;p&gt;因为移动端操作系统分为 &lt;code&gt;iOS&lt;/code&gt; 和 &lt;code&gt;Android&lt;/code&gt; 两派，所以本文的调试技巧也会按照不同的系统来区分。寻找最合适高效的方式，才能让你事半功倍。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文章会列举目前适合移动端调试的多种方案，快来选择你的最佳实践吧！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="移动端调试" scheme="http://yoursite.com/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95/"/>
    
    
      <category term="移动端调试" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vue之上拉加载原理</title>
    <link href="http://yoursite.com/2020/09/16/vue%E4%B9%8B%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2020/09/16/vue%E4%B9%8B%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E5%8E%9F%E7%90%86/</id>
    <published>2020-09-16T06:20:24.000Z</published>
    <updated>2020-09-22T09:58:42.418Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h1&gt;&lt;p&gt;贴上效果展示：&lt;br&gt;&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/1NOXMW586usqMUQjWlJXNU83Pxk8DicribgBBbuvZ13dRfOBLsInRicV51f90TJDiblOfwq1LuN27vTaqssPfF5NeQ/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;headerlink&quot; title=&quot;实现思路&quot;&gt;&lt;/a&gt;实现思路&lt;/h1&gt;&lt;p&gt;样式方面不多赘述，滚动区域是给固定高度，设置 &lt;code&gt;overflow-y: auto&lt;/code&gt; 来实现。&lt;/p&gt;
&lt;p&gt;接下来看看js方面的实现，其实也很简单，触发的条件是：&lt;code&gt;可视高度&lt;/code&gt; + &lt;code&gt;滚动距离&lt;/code&gt; &amp;gt;= &lt;code&gt;实际高度&lt;/code&gt; 。例子我会使用&lt;code&gt;vue&lt;/code&gt;来实现，和原生实现是一样的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可视高度(offsetHeight)：通过 &lt;code&gt;dom&lt;/code&gt; 的 &lt;code&gt;offsetHeight&lt;/code&gt; 获得，表示区域固定的高度。这里我推荐通过 &lt;code&gt;getBoundingClientRect()&lt;/code&gt; 来获取高度，因为使用前者会引起浏览器回流，造成一些性能问题。&lt;/li&gt;
&lt;li&gt;滚动高度(scrollTop)：滚动事件中通过 &lt;code&gt;e.target.scrollTop&lt;/code&gt; 获取，表示滚动条距离顶部的px&lt;/li&gt;
&lt;li&gt;实际高度(scrollHeight)：通过 &lt;code&gt;dom&lt;/code&gt; 的 &lt;code&gt;scrollHeight&lt;/code&gt; 获得，表示区域内所有内容的高度（包括滚动距离），也就是实际高度&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="上拉加载" scheme="http://yoursite.com/tags/%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>vue之上拉加载原理</title>
    <link href="http://yoursite.com/2020/09/16/vue%E4%B9%8B%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E5%8E%9F%E7%90%86%E7%9A%84%E4%B8%89/"/>
    <id>http://yoursite.com/2020/09/16/vue%E4%B9%8B%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E5%8E%9F%E7%90%86%E7%9A%84%E4%B8%89/</id>
    <published>2020-09-16T06:20:24.000Z</published>
    <updated>2020-09-27T10:22:01.874Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h1&gt;&lt;p&gt;贴上效果展示：&lt;br&gt;&lt;img
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>git之错误分支开发的三种情况</title>
    <link href="http://yoursite.com/2020/09/16/git%E4%B9%8B%E9%94%99%E8%AF%AF%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%89%E7%A7%8D%E6%83%85%E5%86%B5/"/>
    <id>http://yoursite.com/2020/09/16/git%E4%B9%8B%E9%94%99%E8%AF%AF%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%89%E7%A7%8D%E6%83%85%E5%86%B5/</id>
    <published>2020-09-16T03:35:00.000Z</published>
    <updated>2020-09-16T05:57:57.294Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;还没有commit&quot;&gt;&lt;a href=&quot;#还没有commit&quot; class=&quot;headerlink&quot; title=&quot;还没有commit&quot;&gt;&lt;/a&gt;还没有commit&lt;/h3&gt;&lt;p&gt;在这种情况下我们可以在当前分支下使用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git stash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个命令表示&lt;strong&gt;把我们当前修改的内容暂存起来，然后我们的工作区就恢复到在没有开发新功能之前的样子。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个时候我们需要切换到正确的工作分支，然后运行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git stash apply&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="错误分支" scheme="http://yoursite.com/tags/%E9%94%99%E8%AF%AF%E5%88%86%E6%94%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端面试复习</title>
    <link href="http://yoursite.com/2020/09/15/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/09/15/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%A4%8D%E4%B9%A0/</id>
    <published>2020-09-15T06:10:37.000Z</published>
    <updated>2020-09-25T09:41:05.307Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参考：&lt;a href=&quot;https://mp.weixin.qq.com/s/QX0HL1tCAGU70zEb-HJQlQ&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>js之BigNumber.js</title>
    <link href="http://yoursite.com/2020/09/15/js%E4%B9%8BBigNumber-js/"/>
    <id>http://yoursite.com/2020/09/15/js%E4%B9%8BBigNumber-js/</id>
    <published>2020-09-15T03:54:49.000Z</published>
    <updated>2020-09-15T05:28:30.675Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;vue使用BigNumber.js&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td
        
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="精度计算" scheme="http://yoursite.com/tags/%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>express和koa</title>
    <link href="http://yoursite.com/2020/09/15/express%E5%92%8Ckoa/"/>
    <id>http://yoursite.com/2020/09/15/express%E5%92%8Ckoa/</id>
    <published>2020-09-15T03:42:51.000Z</published>
    <updated>2020-09-15T03:55:49.966Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Koa和Express都是NodeJS的主流应用开发框架。&lt;/p&gt;
&lt;p&gt;Express是一个完整的nodejs应用框架。Koa是由Express团队开发的，但是它有不同的关注点。Koa致力于核心中间件功能。nodejs中间件是访问请求对象（req）和响应对象（res）的例程。这些例程在路由处理程序之前被调用，因此它们位于客户端与生成响应的路由逻辑的“中间”。nodejs应用程序可以将中间件例程“链接”到自定义请求/响应管道中。管道可以根据请求和响应进行操作，包括头和主体。Express和Koa都包含中间件，但实现方法却截然不同。&lt;/p&gt;
    
    </summary>
    
    
      <category term="es6" scheme="http://yoursite.com/categories/es6/"/>
    
    
      <category term="express" scheme="http://yoursite.com/tags/express/"/>
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>vue面试题记录</title>
    <link href="http://yoursite.com/2020/09/14/vue%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/09/14/vue%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-09-14T10:26:56.000Z</published>
    <updated>2020-09-22T09:51:36.766Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;单选题&quot;&gt;&lt;a href=&quot;#单选题&quot; class=&quot;headerlink&quot; title=&quot;单选题&quot;&gt;&lt;/a&gt;单选题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. Vue 实例的 data 属性，可以在哪些生命周期中获取到？bcd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. beforeCreate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. created&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. beforeMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. mounted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. 下列对 Vue 原理的叙述，哪些是正确的？abcd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. Vue 中的数组变更通知，通过拦截数组操作方法而实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 编译器目标是创建渲染函数，渲染函数执行后将得到 VNode 树&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 组件内 data 发生变化时会通知其对应 watcher，执行异步更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. patching 算法首先进行同层级比较，可能执行的操作是节点的增加、删除和更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. 对于 Vue 中响应式数据原理的说法，下列哪项是不正确的？bd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. 采用数据劫持方式，即 Object.defineProperty() 劫持 data 中各属性，实现响应式数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 视图中的变化会通过 watcher 更新 data 中的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 若 data 中某属性多次发生变化，watcher 仅会进入更新队列一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 通过编译过程进行依赖收集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. 下列说法不正确的是哪项？b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. key 的作用主要是为了高效地更新虚拟 DOM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 若指定了组件的 template 选项，render 函数不会执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 使用 vm.$nextTick 可以确保获得 DOM 异步更新的结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 若没有 el 选项，vm.$mount(dom) 可将 Vue 实例挂载于指定元素上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. 下列关于 Vuex 的描述，不正确的是哪项？c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. Vuex 通过 Vue 实现响应式状态，因此只能用于 Vue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. Vuex 是一个状态管理模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. Vuex 主要用于多视图间状态全局共享与管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 在 Vuex 中改变状态，可以通过 mutations 和 actions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6. 关于 Vue 组件间的参数传递，下列哪项是不正确的？b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. 若子组件给父组件传值，可使用 $emit 方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 祖孙组件之间可以使用 provide 和 inject 方式跨层级相互传值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 若子组件使用 $emit(&amp;#39;say&amp;#39;) 派发事件，父组件可使用 @say 监听&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 若父组件给子组件传值，子组件可通过 props 接受数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7. 下列关于 vue-router 的描述，不正确的是哪项？c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. vue-router 的常用模式有 hash 和 history 两种&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 可通过 addRoutes 方法动态添加路由&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 可通过 beforeEnter 对单个组件进行路由守卫&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. vue-router 借助 Vue 实现响应式的路由，因此只能用于 Vue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8. 下列说法不正确的是哪项？c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. 可通过 this.$parent 查找当前组件的父组件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. 可使用 this.$refs 查找命名子组件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. 可使用 this.$children 按顺序查找当前组件的直接子组件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 可使用 $root 查找根组件，并可配合 children 遍历全部组件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9. 下列关于 v-model 的说法，哪项是不正确的？c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. v-model 能实现双向绑定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. v-model 本质上是语法糖，它负责监听用户的输入事件以更新数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. v-model 是内置指令，不能用在自定义组件上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 对 input 使用 v-model，实际上是指定其 :value 和 :input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10. 关于 Vue 的生命周期，下列哪项是不正确的？d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A. DOM 渲染在 mounted 中就已经完成了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B. Vue 实例从创建到销毁的过程，就是生命周期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C. created 表示完成数据观测、属性和方法的运算和初始化事件，此时 $el 属性还未显示出来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D. 页面首次加载过程中，会依次触发 beforeCreate，created，beforeMount，mounted，beforeUpdate，updated&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>js之call和apply</title>
    <link href="http://yoursite.com/2020/09/14/js%E4%B9%8Bcall%E5%92%8Capply/"/>
    <id>http://yoursite.com/2020/09/14/js%E4%B9%8Bcall%E5%92%8Capply/</id>
    <published>2020-09-14T09:43:15.000Z</published>
    <updated>2020-09-23T06:34:39.137Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;call和apply的区别和用法&quot;&gt;&lt;a href=&quot;#call和apply的区别和用法&quot; class=&quot;headerlink&quot; title=&quot;call和apply的区别和用法&quot;&gt;&lt;/a&gt;call和apply的区别和用法&lt;/h1&gt;&lt;h2 id=&quot;call和apply的区别&quot;&gt;&lt;a href=&quot;#call和apply的区别&quot; class=&quot;headerlink&quot; title=&quot;call和apply的区别&quot;&gt;&lt;/a&gt;call和apply的区别&lt;/h2&gt;&lt;p&gt;obj.call(thisObj, arg1, arg2, …);&lt;br&gt;obj.apply(thisObj, [arg1, arg2, …]);&lt;br&gt;call和apply作用都是把obj绑定到thisObj的作用，即改变this的指向，然而唯一的区别就是apply传递的参数必须得是数组的形式传递，而call则直接连续参数传递&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="call" scheme="http://yoursite.com/tags/call/"/>
    
      <category term="apply" scheme="http://yoursite.com/tags/apply/"/>
    
  </entry>
  
</feed>
